swagger: '2.0'
info:
  version: '1.0'
  title: REST API
  description: >-
    This is a sample definition of the Oracle WMS Cloud REST API.


    The views expressed here are my own and do not necessarily reflect the views of Oracle.
host: demo.wms.ocs.oraclecloud.com
basePath: /demo_a9/wms/lgfapi/v10
schemes:
- https
consumes:
- application/json
- application/xml
produces:
- application/json
- application/xml
security:
- basic: []
- oauth2: []
paths:
  /entity/action_code:
    get:
      description: ''
      summary: EntityActionCode_GET
      tags:
      - entity/action_code
      operationId: EntityActionCode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/action_code/describe:
    get:
      description: ''
      summary: EntityActionCodeDescribe_GET
      tags:
      - entity/action_code
      operationId: EntityActionCodeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/action_code/{id}:
    get:
      description: ''
      summary: EntityActionCodeById_GET
      tags:
      - entity/action_code
      operationId: EntityActionCodeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/active_location:
    get:
      description: ''
      summary: EntityActiveLocation_GET
      tags:
      - entity/active_location
      operationId: EntityActiveLocation_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/active_location/describe:
    get:
      description: ''
      summary: EntityActiveLocationDescribe_GET
      tags:
      - entity/active_location
      operationId: EntityActiveLocationDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/active_location/{id}:
    get:
      description: ''
      summary: EntityActiveLocationById_GET
      tags:
      - entity/active_location
      operationId: EntityActiveLocationById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityActiveLocationById_PATCH
      tags:
      - entity/active_location
      operationId: EntityActiveLocationById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation:
    get:
      description: ''
      summary: EntityAllocation_GET
      tags:
      - entity/allocation
      operationId: EntityAllocation_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation/describe:
    get:
      description: ''
      summary: EntityAllocationDescribe_GET
      tags:
      - entity/allocation
      operationId: EntityAllocationDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation/{id}:
    get:
      description: ''
      summary: EntityAllocationById_GET
      tags:
      - entity/allocation
      operationId: EntityAllocationById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation_distribution_mode:
    get:
      description: ''
      summary: EntityAllocationDistributionMode_GET
      tags:
      - entity/allocation_distribution_mode
      operationId: EntityAllocationDistributionMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation_distribution_mode/describe:
    get:
      description: ''
      summary: EntityAllocationDistributionModeDescribe_GET
      tags:
      - entity/allocation_distribution_mode
      operationId: EntityAllocationDistributionModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation_distribution_mode/{id}:
    get:
      description: ''
      summary: EntityAllocationDistributionModeById_GET
      tags:
      - entity/allocation_distribution_mode
      operationId: EntityAllocationDistributionModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation_status:
    get:
      description: ''
      summary: EntityAllocationStatus_GET
      tags:
      - entity/allocation_status
      operationId: EntityAllocationStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation_status/describe:
    get:
      description: ''
      summary: EntityAllocationStatusDescribe_GET
      tags:
      - entity/allocation_status
      operationId: EntityAllocationStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/allocation_status/{id}:
    get:
      description: ''
      summary: EntityAllocationStatusById_GET
      tags:
      - entity/allocation_status
      operationId: EntityAllocationStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/answer_input_type:
    get:
      description: ''
      summary: EntityAnswerInputType_GET
      tags:
      - entity/answer_input_type
      operationId: EntityAnswerInputType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/answer_input_type/describe:
    get:
      description: ''
      summary: EntityAnswerInputTypeDescribe_GET
      tags:
      - entity/answer_input_type
      operationId: EntityAnswerInputTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/answer_input_type/{id}:
    get:
      description: ''
      summary: EntityAnswerInputTypeById_GET
      tags:
      - entity/answer_input_type
      operationId: EntityAnswerInputTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/appointment:
    get:
      description: ''
      summary: EntityAppointment_GET
      tags:
      - entity/appointment
      operationId: EntityAppointment_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/appointment/describe:
    get:
      description: ''
      summary: EntityAppointmentDescribe_GET
      tags:
      - entity/appointment
      operationId: EntityAppointmentDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/appointment{id}:
    get:
      description: ''
      summary: EntityAppointmentById_GET
      tags:
      - entity/appointment
      operationId: EntityAppointmentById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityAppointmentById_PATCH
      tags:
      - entity/appointment
      operationId: EntityAppointmentById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/appointment_status:
    get:
      description: ''
      summary: EntityAppointmentStatus_GET
      tags:
      - entity/appointment_status
      operationId: EntityAppointmentStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/appointment_status/describe:
    get:
      description: ''
      summary: EntityAppointmentStatusDescribe_GET
      tags:
      - entity/appointment_status
      operationId: EntityAppointmentStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/appointment_status/{id}:
    get:
      description: ''
      summary: EntityAppointmentStatusById_GET
      tags:
      - entity/appointment_status
      operationId: EntityAppointmentStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/asset_status:
    get:
      description: ''
      summary: EntityAssetStatus_GET
      tags:
      - entity/asset_status
      operationId: EntityAssetStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/asset_status/describe:
    get:
      description: ''
      summary: EntityAssetStatusDescribe_GET
      tags:
      - entity/asset_status
      operationId: EntityAssetStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/asset_status/{id}:
    get:
      description: ''
      summary: EntityAssetStatusById_GET
      tags:
      - entity/asset_status
      operationId: EntityAssetStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_mode:
    get:
      description: ''
      summary: EntityAuditMode_GET
      tags:
      - entity/audit_mode
      operationId: EntityAuditMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_mode/describe:
    get:
      description: ''
      summary: EntityAuditModeDescribe_GET
      tags:
      - entity/audit_mode
      operationId: EntityAuditModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_mode/{id}:
    get:
      description: ''
      summary: EntityAuditModeById_GET
      tags:
      - entity/audit_mode
      operationId: EntityAuditModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_status:
    get:
      description: ''
      summary: EntityAuditStatus_GET
      tags:
      - entity/audit_status
      operationId: EntityAuditStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_status/describe:
    get:
      description: ''
      summary: EntityAuditStatusDescribe_GET
      tags:
      - entity/audit_status
      operationId: EntityAuditStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_status/{id}:
    get:
      description: ''
      summary: EntityAuditStatusById_GET
      tags:
      - entity/audit_status
      operationId: EntityAuditStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_type:
    get:
      description: ''
      summary: EntityAuditType_GET
      tags:
      - entity/audit_type
      operationId: EntityAuditType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_type/describe:
    get:
      description: ''
      summary: EntityAuditTypeDescribe_GET
      tags:
      - entity/audit_type
      operationId: EntityAuditTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/audit_type/{id}:
    get:
      description: ''
      summary: EntityAuditTypeById_GET
      tags:
      - entity/audit_type
      operationId: EntityAuditTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/barcode_type:
    get:
      description: ''
      summary: EntityBarcodeType_GET
      tags:
      - entity/barcode_type
      operationId: EntityBarcodeType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/barcode_type/describe:
    get:
      description: ''
      summary: EntityBarcodeTypeDescribe_GET
      tags:
      - entity/barcode_type
      operationId: EntityBarcodeTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/barcode_type/{id}:
    get:
      description: ''
      summary: EntityBarcodeTypeById_GET
      tags:
      - entity/barcode_type
      operationId: EntityBarcodeTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/barcode_type_dtl:
    get:
      description: ''
      summary: EntityBarcodeTypeDtl_GET
      tags:
      - entity/barcode_type_dtl
      operationId: EntityBarcodeTypeDtl_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/barcode_type_dtl/describe:
    get:
      description: ''
      summary: EntityBarcodeTypeDtlDescribe_GET
      tags:
      - entity/barcode_type_dtl
      operationId: EntityBarcodeTypeDtlDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/barcode_type_dtl/{id}:
    get:
      description: ''
      summary: EntityBarcodeTypeDtlById_GET
      tags:
      - entity/barcode_type_dtl
      operationId: EntityBarcodeTypeDtlById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/batch_number:
    get:
      description: ''
      summary: EntityBatchNumber_GET
      tags:
      - entity/batch_number
      operationId: EntityBatchNumber_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityBatchNumber_POST
      tags:
      - entity/batch_number
      operationId: EntityBatchNumber_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/batch_number/describe:
    get:
      description: ''
      summary: EntityBatchNumberDescribe_GET
      tags:
      - entity/batch_number
      operationId: EntityBatchNumberDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/batch_number/{id}:
    get:
      description: ''
      summary: EntityBatchNumberById_GET
      tags:
      - entity/batch_number
      operationId: EntityBatchNumberById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/break_by_modifier:
    get:
      description: ''
      summary: EntityBreakByModifier_GET
      tags:
      - entity/break_by_modifier
      operationId: EntityBreakByModifier_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/break_by_modifier/describe:
    get:
      description: ''
      summary: EntityBreakByModifierDescribe_GET
      tags:
      - entity/break_by_modifier
      operationId: EntityBreakByModifierDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/break_by_modifier/{id}:
    get:
      description: ''
      summary: EntityBreakByModifierById_GET
      tags:
      - entity/break_by_modifier
      operationId: EntityBreakByModifierById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/bridge_status:
    get:
      description: ''
      summary: EntityBridgeStatus_GET
      tags:
      - entity/bridge_status
      operationId: EntityBridgeStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/bridge_status/describe:
    get:
      description: ''
      summary: EntityBridgeStatusDescribe_GET
      tags:
      - entity/bridge_status
      operationId: EntityBridgeStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/bridge_status/{id}:
    get:
      description: ''
      summary: EntityBridgeStatusById_GET
      tags:
      - entity/bridge_status
      operationId: EntityBridgeStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/capacity_check_method:
    get:
      description: ''
      summary: EntityCapacityCheckMethod_GET
      tags:
      - entity/capacity_check_method
      operationId: EntityCapacityCheckMethod_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/capacity_check_method/describe:
    get:
      description: ''
      summary: EntityCapacityCheckMethodDescribe_GET
      tags:
      - entity/capacity_check_method
      operationId: EntityCapacityCheckMethodDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/capacity_check_method/{id}:
    get:
      description: ''
      summary: EntityCapacityCheckMethodById_GET
      tags:
      - entity/capacity_check_method
      operationId: EntityCapacityCheckMethodById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_integration_type:
    get:
      description: ''
      summary: EntityCarrierIntegrationType_GET
      tags:
      - entity/carrier_integration_type
      operationId: EntityCarrierIntegrationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_integration_type/describe:
    get:
      description: ''
      summary: EntityCarrierIntegrationTypeDescribe_GET
      tags:
      - entity/carrier_integration_type
      operationId: EntityCarrierIntegrationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_integration_type/{id}:
    get:
      description: ''
      summary: EntityCarrierIntegrationTypeById_GET
      tags:
      - entity/carrier_integration_type
      operationId: EntityCarrierIntegrationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_lpn:
    get:
      description: ''
      summary: EntityCarrierLpn_GET
      tags:
      - entity/carrier_lpn
      operationId: EntityCarrierLpn_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_lpn/describe:
    get:
      description: ''
      summary: EntityCarrierLpnDescribe_GET
      tags:
      - entity/carrier_lpn
      operationId: EntityCarrierLpnDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_lpn/{id}:
    get:
      description: ''
      summary: EntityCarrierLpnById_GET
      tags:
      - entity/carrier_lpn
      operationId: EntityCarrierLpnById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_status:
    get:
      description: ''
      summary: EntityCarrierStatus_GET
      tags:
      - entity/carrier_status
      operationId: EntityCarrierStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_status/describe:
    get:
      description: ''
      summary: EntityCarrierStatusDescribe_GET
      tags:
      - entity/carrier_status
      operationId: EntityCarrierStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_status/{id}:
    get:
      description: ''
      summary: EntityCarrierStatusById_GET
      tags:
      - entity/carrier_status
      operationId: EntityCarrierStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_type:
    get:
      description: ''
      summary: EntityCarrierType_GET
      tags:
      - entity/carrier_type
      operationId: EntityCarrierType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_type/describe:
    get:
      description: ''
      summary: EntityCarrierTypeDescribe_GET
      tags:
      - entity/carrier_type
      operationId: EntityCarrierTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_type/{id}:
    get:
      description: ''
      summary: EntityCarrierTypeById_GET
      tags:
      - entity/carrier_type
      operationId: EntityCarrierTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_webservice_label_type:
    get:
      description: ''
      summary: EntityCarrierWebserviceLabelType_GET
      tags:
      - entity/carrier_webservice_label_type
      operationId: EntityCarrierWebserviceLabelType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_webservice_label_type/describe:
    get:
      description: ''
      summary: EntityCarrierWebserviceLabelTypeDescribe_GET
      tags:
      - entity/carrier_webservice_label_type
      operationId: EntityCarrierWebserviceLabelTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/carrier_webservice_label_type/{id}:
    get:
      description: ''
      summary: EntityCarrierWebserviceLabelTypeById_GET
      tags:
      - entity/carrier_webservice_label_type
      operationId: EntityCarrierWebserviceLabelTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_adjustment_status:
    get:
      description: ''
      summary: EntityCcAdjustmentStatus_GET
      tags:
      - entity/cc_adjustment_status
      operationId: EntityCcAdjustmentStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_adjustment_status/describe:
    get:
      description: ''
      summary: EntityCcAdjustmentStatusDescribe_GET
      tags:
      - entity/cc_adjustment_status
      operationId: EntityCcAdjustmentStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_adjustment_status/{id}:
    get:
      description: ''
      summary: EntityCcAdjustmentStatusById_GET
      tags:
      - entity/cc_adjustment_status
      operationId: EntityCcAdjustmentStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_creation_type:
    get:
      description: ''
      summary: EntityCcCreationType_GET
      tags:
      - entity/cc_creation_type
      operationId: EntityCcCreationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_creation_type/describe:
    get:
      description: ''
      summary: EntityCcCreationTypeDescribe_GET
      tags:
      - entity/cc_creation_type
      operationId: EntityCcCreationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_creation_type/{id}:
    get:
      description: ''
      summary: EntityCcCreationTypeById_GET
      tags:
      - entity/cc_creation_type
      operationId: EntityCcCreationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_trigger:
    get:
      description: ''
      summary: EntityCcTrigger_GET
      tags:
      - entity/cc_trigger
      operationId: EntityCcTrigger_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_trigger/describe:
    get:
      description: ''
      summary: EntityCcTriggerDescribe_GET
      tags:
      - entity/cc_trigger
      operationId: EntityCcTriggerDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_trigger/{id}:
    get:
      description: ''
      summary: EntityCcTriggerById_GET
      tags:
      - entity/cc_trigger
      operationId: EntityCcTriggerById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_warning:
    get:
      description: ''
      summary: EntityCcWarning_GET
      tags:
      - entity/cc_warning
      operationId: EntityCcWarning_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_warning/describe:
    get:
      description: ''
      summary: EntityCcWarningDescribe_GET
      tags:
      - entity/cc_warning
      operationId: EntityCcWarningDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cc_warning/{id}:
    get:
      description: ''
      summary: EntityCcWarningById_GET
      tags:
      - entity/cc_warning
      operationId: EntityCcWarningById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/check_digit_method:
    get:
      description: ''
      summary: EntityCheckDigitMethod_GET
      tags:
      - entity/check_digit_method
      operationId: EntityCheckDigitMethod_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/check_digit_method/describe:
    get:
      description: ''
      summary: EntityCheckDigitMethodDescribe_GET
      tags:
      - entity/check_digit_method
      operationId: EntityCheckDigitMethodDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/check_digit_method/{id}:
    get:
      description: ''
      summary: EntityCheckDigitMethodById_GET
      tags:
      - entity/check_digit_method
      operationId: EntityCheckDigitMethodById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/column_order_type:
    get:
      description: ''
      summary: EntityColumnOrderType_GET
      tags:
      - entity/column_order_type
      operationId: EntityColumnOrderType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/column_order_type/describe:
    get:
      description: ''
      summary: EntityColumnOrderTypeDescribe_GET
      tags:
      - entity/column_order_type
      operationId: EntityColumnOrderTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/column_order_type/{id}:
    get:
      description: ''
      summary: EntityColumnOrderTypeById_GET
      tags:
      - entity/column_order_type
      operationId: EntityColumnOrderTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company:
    get:
      description: ''
      summary: EntityCompany_GET
      tags:
      - entity/company
      operationId: EntityCompany_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company/describe:
    get:
      description: ''
      summary: EntityCompanyDescribe_GET
      tags:
      - entity/company
      operationId: EntityCompanyDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company/{id}:
    get:
      description: ''
      summary: EntityCompanyById_GET
      tags:
      - entity/company
      operationId: EntityCompanyById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityCompanyById_PATCH
      tags:
      - entity/company
      operationId: EntityCompanyById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company_parm:
    get:
      description: ''
      summary: EntityCompanyParm_GET
      tags:
      - entity/company_parm
      operationId: EntityCompanyParm_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityCompanyParm_POST
      tags:
      - entity/company_parm
      operationId: EntityCompanyParm_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company_parm/describe:
    get:
      description: ''
      summary: EntityCompanyParmDescribe_GET
      tags:
      - entity/company_parm
      operationId: EntityCompanyParmDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company_parm/{id}:
    get:
      description: ''
      summary: EntityCompanyParmById_GET
      tags:
      - entity/company_parm
      operationId: EntityCompanyParmById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company_type:
    get:
      description: ''
      summary: EntityCompanyType_GET
      tags:
      - entity/company_type
      operationId: EntityCompanyType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company_type/describe:
    get:
      description: ''
      summary: EntityCompanyTypeDescribe_GET
      tags:
      - entity/company_type
      operationId: EntityCompanyTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/company_type/{id}:
    get:
      description: ''
      summary: EntityCompanyTypeById_GET
      tags:
      - entity/company_type
      operationId: EntityCompanyTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/condition_type:
    get:
      description: ''
      summary: EntityConditionType_GET
      tags:
      - entity/condition_type
      operationId: EntityConditionType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/condition_type/describe:
    get:
      description: ''
      summary: EntityConditionTypeDescribe_GET
      tags:
      - entity/condition_type
      operationId: EntityConditionTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/condition_type/{id}:
    get:
      description: ''
      summary: EntityConditionTypeById_GET
      tags:
      - entity/condition_type
      operationId: EntityConditionTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/contact:
    get:
      description: ''
      summary: EntityContact_GET
      tags:
      - entity/contact
      operationId: EntityContact_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/contact/describe:
    get:
      description: ''
      summary: EntityContactDescribe_GET
      tags:
      - entity/contact
      operationId: EntityContactDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/contact/{id}:
    get:
      description: ''
      summary: EntityContactById_GET
      tags:
      - entity/contact
      operationId: EntityContactById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container:
    get:
      description: ''
      summary: EntityContainer_GET
      tags:
      - entity/container
      operationId: EntityContainer_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/bulk_lock:
    post:
      description: ''
      summary: EntityContainerBulkLock_POST
      tags:
      - entity/container
      operationId: EntityContainerBulkLock_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/bulk_unlock:
    post:
      description: ''
      summary: EntityContainerBulkUnlock_POST
      tags:
      - entity/container
      operationId: EntityContainerBulkUnlock_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/depalletize:
    post:
      description: ''
      summary: EntityContainerDepalletize_POST
      tags:
      - entity/container
      operationId: EntityContainerDepalletize_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/describe:
    get:
      description: ''
      summary: EntityContainerDescribe_GET
      tags:
      - entity/container
      operationId: EntityContainerDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/{id}:
    get:
      description: ''
      summary: EntityContainerById_GET
      tags:
      - entity/container
      operationId: EntityContainerById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityContainerById_PATCH
      tags:
      - entity/container
      operationId: EntityContainerById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/{id}/lock:
    post:
      description: ''
      summary: EntityContainerLockById_POST
      tags:
      - entity/container
      operationId: EntityContainerLockById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/{id}/unlock:
    post:
      description: ''
      summary: EntityContainerUnlockById_POST
      tags:
      - entity/container
      operationId: EntityContainerUnlockById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/{id}/orders:
    get:
      description: ''
      summary: EntityContainerOrdersById_GET
      tags:
      - entity/container
      operationId: EntityContainerOrdersById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/{id}/palletize:
    post:
      description: ''
      summary: EntityContainerPalletizeById_POST
      tags:
      - entity/container
      operationId: EntityContainerPalletizeById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container/{id}/depalletize:
    post:
      description: ''
      summary: EntityContainerDepalletizeById_POST
      tags:
      - entity/container
      operationId: EntityContainerDepalletizeById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container_status:
    get:
      description: ''
      summary: EntityContainerStatus_GET
      tags:
      - entity/container_status
      operationId: EntityContainerStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container_status/describe:
    get:
      description: ''
      summary: EntityContainerStatusDescribe_GET
      tags:
      - entity/container_status
      operationId: EntityContainerStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container_status/{id}:
    get:
      description: ''
      summary: EntityContainerStatusById_GET
      tags:
      - entity/container_status
      operationId: EntityContainerStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container_vas_status:
    get:
      description: ''
      summary: EntityContainerVasStatus_GET
      tags:
      - entity/container_vas_status
      operationId: EntityContainerVasStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container_vas_status/describe:
    get:
      description: ''
      summary: EntityContainerVasStatusDescribe_GET
      tags:
      - entity/container_vas_status
      operationId: EntityContainerVasStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/container_vas_status/{id}:
    get:
      description: ''
      summary: EntityContainerVasStatusById_GET
      tags:
      - entity/container_vas_status
      operationId: EntityContainerVasStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cubing_mode:
    get:
      description: ''
      summary: EntityCubingMode_GET
      tags:
      - entity/cubing_mode
      operationId: EntityCubingMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cubing_mode/describe:
    get:
      description: ''
      summary: EntityCubingModeDescribe_GET
      tags:
      - entity/cubing_mode
      operationId: EntityCubingModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/cubing_mode/{id}:
    get:
      description: ''
      summary: EntityCubingModeById_GET
      tags:
      - entity/cubing_mode
      operationId: EntityCubingModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/date_format:
    get:
      description: ''
      summary: EntityDateFormat_GET
      tags:
      - entity/date_format
      operationId: EntityDateFormat_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/date_format/describe:
    get:
      description: ''
      summary: EntityDateFormatDescribe_GET
      tags:
      - entity/date_format
      operationId: EntityDateFormatDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/date_format/{id}:
    get:
      description: ''
      summary: EntityDateFormatById_GET
      tags:
      - entity/date_format
      operationId: EntityDateFormatById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/destination_location_type:
    get:
      description: ''
      summary: EntityDestinationLocationType_GET
      tags:
      - entity/destination_location_type
      operationId: EntityDestinationLocationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/destination_location_type/describe:
    get:
      description: ''
      summary: EntityDestinationLocationTypeDescribe_GET
      tags:
      - entity/destination_location_type
      operationId: EntityDestinationLocationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/destination_location_type/{id}:
    get:
      description: ''
      summary: EntityDestinationLocationTypeById_GET
      tags:
      - entity/destination_location_type
      operationId: EntityDestinationLocationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock:
    get:
      description: ''
      summary: EntityDock_GET
      tags:
      - entity/dock
      operationId: EntityDock_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock/describe:
    get:
      description: ''
      summary: EntityDockDescribe_GET
      tags:
      - entity/dock
      operationId: EntityDockDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock/{id}:
    get:
      description: ''
      summary: EntityDockById_GET
      tags:
      - entity/dock
      operationId: EntityDockById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock_status:
    get:
      description: ''
      summary: EntityDockStatus_GET
      tags:
      - entity/dock_status
      operationId: EntityDockStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock_status/describe:
    get:
      description: ''
      summary: EntityDockStatusDescribe_GET
      tags:
      - entity/dock_status
      operationId: EntityDockStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock_status/{id}:
    get:
      description: ''
      summary: EntityDockStatusById_GET
      tags:
      - entity/dock_status
      operationId: EntityDockStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock_type:
    get:
      description: ''
      summary: EntityDockType_GET
      tags:
      - entity/dock_type
      operationId: EntityDockType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock_type/describe:
    get:
      description: ''
      summary: EntityDockTypeDescribe_GET
      tags:
      - entity/dock_type
      operationId: EntityDockTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/dock_type/{id}:
    get:
      description: ''
      summary: EntityDockTypeById_GET
      tags:
      - entity/dock_type
      operationId: EntityDockTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/describe:
    get:
      description: ''
      summary: EntityDescribe_GET
      tags:
      - entity/entity
      operationId: EntityDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/entity_change_action:
    get:
      description: ''
      summary: EntityEntityChangeAction_GET
      tags:
      - entity/entity_change_action
      operationId: EntityEntityChangeAction_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/entity_change_action/describe:
    get:
      description: ''
      summary: EntityEntityChangeActionDescribe_GET
      tags:
      - entity/entity_change_action
      operationId: EntityEntityChangeActionDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/entity_change_action/{id}:
    get:
      description: ''
      summary: EntityEntityChangeActionById_GET
      tags:
      - entity/entity_change_action
      operationId: EntityEntityChangeActionById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility:
    get:
      description: ''
      summary: EntityFacility_GET
      tags:
      - entity/facility
      operationId: EntityFacility_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility/describe:
    get:
      description: ''
      summary: EntityFacilityDescribe_GET
      tags:
      - entity/facility
      operationId: EntityFacilityDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility/{id}:
    get:
      description: ''
      summary: EntityFacilityById_GET
      tags:
      - entity/facility
      operationId: EntityFacilityById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityFacilityById_PATCH
      tags:
      - entity/facility
      operationId: EntityFacilityById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility_parm:
    get:
      description: ''
      summary: EntityFacilityParm_GET
      tags:
      - entity/facility_parm
      operationId: EntityFacilityParm_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityFacilityParm_POST
      tags:
      - entity/facility_parm
      operationId: EntityFacilityParm_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility_parm/describe:
    get:
      description: ''
      summary: EntityFacilityParmDescribe_GET
      tags:
      - entity/facility_parm
      operationId: EntityFacilityParmDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility_parm/{id}:
    get:
      description: ''
      summary: EntityFacilityParmById_GET
      tags:
      - entity/facility_parm
      operationId: EntityFacilityParmById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility_type:
    get:
      description: ''
      summary: EntityFacilityType_GET
      tags:
      - entity/facility_type
      operationId: EntityFacilityType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility_type/describe:
    get:
      description: ''
      summary: EntityFacilityTypeDescribe_GET
      tags:
      - entity/facility_type
      operationId: EntityFacilityTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/facility_type/{id}:
    get:
      description: ''
      summary: EntityFacilityTypeById_GET
      tags:
      - entity/facility_type
      operationId: EntityFacilityTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/form_type:
    get:
      description: ''
      summary: EntityFormType_GET
      tags:
      - entity/form_type
      operationId: EntityFormType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/form_type/describe:
    get:
      description: ''
      summary: EntityFormTypeDescribe_GET
      tags:
      - entity/form_type
      operationId: EntityFormTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/form_type/{id}:
    get:
      description: ''
      summary: EntityFormTypeById_GET
      tags:
      - entity/form_type
      operationId: EntityFormTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/hazmat_regulation_type:
    get:
      description: ''
      summary: EntityHazmatRegulationType_GET
      tags:
      - entity/hazmat_regulation_type
      operationId: EntityHazmatRegulationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/hazmat_regulation_type/describe:
    get:
      description: ''
      summary: EntityHazmatRegulationTypeDescribe_GET
      tags:
      - entity/hazmat_regulation_type
      operationId: EntityHazmatRegulationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/hazmat_regulation_type/{id}:
    get:
      description: ''
      summary: EntityHazmatRegulationTypeById_GET
      tags:
      - entity/hazmat_regulation_type
      operationId: EntityHazmatRegulationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/hire_type:
    get:
      description: ''
      summary: EntityHireType_GET
      tags:
      - entity/hire_type
      operationId: EntityHireType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/hire_type/describe:
    get:
      description: ''
      summary: EntityHireTypeDescribe_GET
      tags:
      - entity/hire_type
      operationId: EntityHireTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/hire_type/{id}:
    get:
      description: ''
      summary: EntityHireTypeById_GET
      tags:
      - entity/hire_type
      operationId: EntityHireTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment:
    get:
      description: ''
      summary: EntityIbShipment_GET
      tags:
      - entity/ib_shipment
      operationId: EntityIbShipment_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment/describe:
    get:
      description: ''
      summary: EntityIbShipmentDescribe_GET
      tags:
      - entity/ib_shipment
      operationId: EntityIbShipmentDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment/{id}:
    get:
      description: ''
      summary: EntityIbShipmentById_GET
      tags:
      - entity/ib_shipment
      operationId: EntityIbShipmentById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityIbShipmentById_PATCH
      tags:
      - entity/ib_shipment
      operationId: EntityIbShipmentById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_dtl:
    get:
      description: ''
      summary: EntityIbShipmentDtl_GET
      tags:
      - entity/ib_shipment_dtl
      operationId: EntityIbShipmentDtl_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_dtl/describe:
    get:
      description: ''
      summary: EntityIbShipmentDtlDescribe_GET
      tags:
      - entity/ib_shipment_dtl
      operationId: EntityIbShipmentDtlDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_dtl/{id}:
    get:
      description: ''
      summary: EntityIbShipmentDtlById_GET
      tags:
      - entity/ib_shipment_dtl
      operationId: EntityIbShipmentDtlById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityIbShipmentDtlById_PATCH
      tags:
      - entity/ib_shipment_dtl
      operationId: EntityIbShipmentDtlById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_serial_nbr:
    get:
      description: ''
      summary: EntityIbShipmentSerialNbr_GET
      tags:
      - entity/ib_shipment_serial_nbr
      operationId: EntityIbShipmentSerialNbr_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_serial_nbr/describe:
    get:
      description: ''
      summary: EntityIbShipmentSerialNbrDescribe_GET
      tags:
      - entity/ib_shipment_serial_nbr
      operationId: EntityIbShipmentSerialNbrDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_serial_nbr/{id}:
    get:
      description: ''
      summary: EntityIbShipmentSerialNbrById_GET
      tags:
      - entity/ib_shipment_serial_nbr
      operationId: EntityIbShipmentSerialNbrById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_status:
    get:
      description: ''
      summary: EntityIbShipmentStatus_GET
      tags:
      - entity/ib_shipment_status
      operationId: EntityIbShipmentStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_status/describe:
    get:
      description: ''
      summary: EntityIbShipmentStatusDescribe_GET
      tags:
      - entity/ib_shipment_status
      operationId: EntityIbShipmentStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ib_shipment_status/{id}:
    get:
      description: ''
      summary: EntityIbShipmentStatusById_GET
      tags:
      - entity/ib_shipment_status
      operationId: EntityIbShipmentStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn:
    get:
      description: ''
      summary: EntityIblpn_GET
      tags:
      - entity/iblpn
      operationId: EntityIblpn_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityIblpn_POST
      tags:
      - entity/iblpn
      operationId: EntityIblpn_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn/composite_create:
    post:
      description: ''
      summary: EntityIblpnCompositeCreate_POST
      tags:
      - entity/iblpn
      operationId: EntityIblpnCompositeCreate_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn/describe:
    get:
      description: ''
      summary: EntityIblpnDescribe_GET
      tags:
      - entity/iblpn
      operationId: EntityIblpnDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn/modify_item_qty:
    post:
      description: ''
      summary: EntityIblpnModifyItemQty_POST
      tags:
      - entity/iblpn
      operationId: EntityIblpnModifyItemQty_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn/{id}:
    get:
      description: ''
      summary: EntityIblpnById_GET
      tags:
      - entity/iblpn
      operationId: EntityIblpnById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityIblpnById_PATCH
      tags:
      - entity/iblpn
      operationId: EntityIblpnById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn/{id}/direct_consume:
    post:
      description: ''
      summary: EntityIblpnDirectConsumeById_POST
      tags:
      - entity/iblpn
      operationId: EntityIblpnDirectConsumeById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/iblpn/{id}/modify_item_qty:
    post:
      description: ''
      summary: EntityIblpnModifyItemQtyById_POST
      tags:
      - entity/iblpn
      operationId: EntityIblpnModifyItemQtyById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_format_type:
    get:
      description: ''
      summary: EntityInterfaceFormatType_GET
      tags:
      - entity/interface_format_type
      operationId: EntityInterfaceFormatType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_format_type/describe:
    get:
      description: ''
      summary: EntityInterfaceFormatTypeDescribe_GET
      tags:
      - entity/interface_format_type
      operationId: EntityInterfaceFormatTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_format_type/{id}:
    get:
      description: ''
      summary: EntityInterfaceFormatTypeById_GET
      tags:
      - entity/interface_format_type
      operationId: EntityInterfaceFormatTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_protocol:
    get:
      description: ''
      summary: EntityInterfaceProtocol_GET
      tags:
      - entity/interface_protocol
      operationId: EntityInterfaceProtocol_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_protocol/describe:
    get:
      description: ''
      summary: EntityInterfaceProtocolDescribe_GET
      tags:
      - entity/interface_protocol
      operationId: EntityInterfaceProtocolDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_protocol/{id}:
    get:
      description: ''
      summary: EntityInterfaceProtocolById_GET
      tags:
      - entity/interface_protocol
      operationId: EntityInterfaceProtocolById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_type:
    get:
      description: ''
      summary: EntityInterfaceType_GET
      tags:
      - entity/interface_type
      operationId: EntityInterfaceType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_type/describe:
    get:
      description: ''
      summary: EntityInterfaceTypeDescribe_GET
      tags:
      - entity/interface_type
      operationId: EntityInterfaceTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/interface_type/{id}:
    get:
      description: ''
      summary: EntityInterfaceTypeById_GET
      tags:
      - entity/interface_type
      operationId: EntityInterfaceTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory:
    get:
      description: ''
      summary: EntityInventory_GET
      tags:
      - entity/inventory
      operationId: EntityInventory_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityInventory_POST
      tags:
      - entity/inventory
      operationId: EntityInventory_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory/bulk_update_inventory_attributes:
    post:
      description: ''
      summary: EntityInventoryBulkUpdateInventoryAttributes_POST
      tags:
      - entity/inventory
      operationId: EntityInventoryBulkUpdateInventoryAttributes_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory/describe:
    get:
      description: ''
      summary: EntityInventoryDescribe_GET
      tags:
      - entity/inventory
      operationId: EntityInventoryDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory/{id}:
    get:
      description: ''
      summary: EntityInventoryById_GET
      tags:
      - entity/inventory
      operationId: EntityInventoryById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory/{id}/link_serial_nbrs:
    post:
      description: ''
      summary: EntityInventoryLinkSerialNbrsById_POST
      tags:
      - entity/inventory
      operationId: EntityInventoryLinkSerialNbrsById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_attribute:
    get:
      description: ''
      summary: EntityInventoryAttribute_GET
      tags:
      - entity/inventory_attribute
      operationId: EntityInventoryAttribute_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityInventoryAttribute_POST
      tags:
      - entity/inventory_attribute
      operationId: EntityInventoryAttribute_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_attribute/describe:
    get:
      description: ''
      summary: EntityInventoryAttributeDescribe_GET
      tags:
      - entity/inventory_attribute
      operationId: EntityInventoryAttributeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_attribute/{id}:
    get:
      description: ''
      summary: EntityInventoryAttributeById_GET
      tags:
      - entity/inventory_attribute
      operationId: EntityInventoryAttributeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_lock:
    get:
      description: ''
      summary: EntityInventoryLock_GET
      tags:
      - entity/inventory_lock
      operationId: EntityInventoryLock_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityInventoryLock_POST
      tags:
      - entity/inventory_lock
      operationId: EntityInventoryLock_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_lock/describe:
    get:
      description: ''
      summary: EntityInventoryLockDescribe_GET
      tags:
      - entity/inventory_lock
      operationId: EntityInventoryLockDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_lock/{id}:
    get:
      description: ''
      summary: EntityInventoryLockById_GET
      tags:
      - entity/inventory_lock
      operationId: EntityInventoryLockById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_status:
    get:
      description: ''
      summary: EntityInventoryStatus_GET
      tags:
      - entity/inventory_status
      operationId: EntityInventoryStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_status/describe:
    get:
      description: ''
      summary: EntityInventoryStatusDescribe_GET
      tags:
      - entity/inventory_status
      operationId: EntityInventoryStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/inventory_status/{id}:
    get:
      description: ''
      summary: EntityInventoryStatusById_GET
      tags:
      - entity/inventory_status
      operationId: EntityInventoryStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/invoice_status:
    get:
      description: ''
      summary: EntityInvoiceStatus_GET
      tags:
      - entity/invoice_status
      operationId: EntityInvoiceStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/invoice_status/describe:
    get:
      description: ''
      summary: EntityInvoiceStatusDescribe_GET
      tags:
      - entity/invoice_status
      operationId: EntityInvoiceStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/invoice_status/{id}:
    get:
      description: ''
      summary: EntityInvoiceStatusById_GET
      tags:
      - entity/invoice_status
      operationId: EntityInvoiceStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item:
    get:
      description: ''
      summary: EntityItem_GET
      tags:
      - entity/item
      operationId: EntityItem_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item/describe:
    get:
      description: ''
      summary: EntityItemDescribe_GET
      tags:
      - entity/item
      operationId: EntityItemDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item/image_upload:
    post:
      description: ''
      summary: EntityItemImageUpload_POST
      tags:
      - entity/item
      operationId: EntityItemImageUpload_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item/{id}:
    get:
      description: ''
      summary: EntityItemById_GET
      tags:
      - entity/item
      operationId: EntityItemById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item/{id}/image_upload:
    post:
      description: ''
      summary: EntityItemImageUploadById_POST
      tags:
      - entity/item
      operationId: EntityItemImageUploadById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_assignment_type:
    get:
      description: ''
      summary: EntityItemAssignmentType_GET
      tags:
      - entity/item_assignment_type
      operationId: EntityItemAssignmentType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_assignment_type/describe:
    get:
      description: ''
      summary: EntityItemAssignmentTypeDescribe_GET
      tags:
      - entity/item_assignment_type
      operationId: EntityItemAssignmentTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_assignment_type/{id}:
    get:
      description: ''
      summary: EntityItemAssignmentTypeById_GET
      tags:
      - entity/item_assignment_type
      operationId: EntityItemAssignmentTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_characteristics:
    get:
      description: ''
      summary: EntityItemCharacteristics_GET
      tags:
      - entity/item_characteristics
      operationId: EntityItemCharacteristics_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_characteristics/describe:
    get:
      description: ''
      summary: EntityItemCharacteristicsDescribe_GET
      tags:
      - entity/item_characteristics
      operationId: EntityItemCharacteristicsDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_characteristics/{id}:
    get:
      description: ''
      summary: EntityItemCharacteristicsById_GET
      tags:
      - entity/item_characteristics
      operationId: EntityItemCharacteristicsById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityItemCharacteristicsById_PATCH
      tags:
      - entity/item_characteristics
      operationId: EntityItemCharacteristicsById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_metrics:
    get:
      description: ''
      summary: EntityItemMetrics_GET
      tags:
      - entity/item_metrics
      operationId: EntityItemMetrics_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_metrics/describe:
    get:
      description: ''
      summary: EntityItemMetricsDescribe_GET
      tags:
      - entity/item_metrics
      operationId: EntityItemMetricsDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/item_metrics/{id}:
    get:
      description: ''
      summary: EntityItemMetricsById_GET
      tags:
      - entity/item_metrics
      operationId: EntityItemMetricsById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/label_type:
    get:
      description: ''
      summary: EntityLabelType_GET
      tags:
      - entity/label_type
      operationId: EntityLabelType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/label_type/describe:
    get:
      description: ''
      summary: EntityLabelTypeDescribe_GET
      tags:
      - entity/label_type
      operationId: EntityLabelTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/label_type/{id}:
    get:
      description: ''
      summary: EntityLabelTypeById_GET
      tags:
      - entity/label_type
      operationId: EntityLabelTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/language:
    get:
      description: ''
      summary: EntityLanguage_GET
      tags:
      - entity/language
      operationId: EntityLanguage_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/language/describe:
    get:
      description: ''
      summary: EntityLanguageDescribe_GET
      tags:
      - entity/language
      operationId: EntityLanguageDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/language/{id}:
    get:
      description: ''
      summary: EntityLanguageById_GET
      tags:
      - entity/language
      operationId: EntityLanguageById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/lgfapi_archive_level:
    get:
      description: ''
      summary: EntityLgfapiArchiveLevel_GET
      tags:
      - entity/lgfapi_archive_level
      operationId: EntityLgfapiArchiveLevel_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/lgfapi_archive_level/describe:
    get:
      description: ''
      summary: EntityLgfapiArchiveLevelDescribe_GET
      tags:
      - entity/lgfapi_archive_level
      operationId: EntityLgfapiArchiveLevelDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/lgfapi_archive_level/{id}:
    get:
      description: ''
      summary: EntityLgfapiArchiveLevelById_GET
      tags:
      - entity/lgfapi_archive_level
      operationId: EntityLgfapiArchiveLevelById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load:
    get:
      description: ''
      summary: EntityLoad_GET
      tags:
      - entity/load
      operationId: EntityLoad_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/describe:
    get:
      description: ''
      summary: EntityLoadDescribe_GET
      tags:
      - entity/load
      operationId: EntityLoadDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/check_in:
    post:
      description: ''
      summary: EntityLoadCheckIn_POST
      tags:
      - entity/load
      operationId: EntityLoadCheckIn_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/check_out:
    post:
      description: ''
      summary: EntityLoadCheckOut_POST
      tags:
      - entity/load
      operationId: EntityLoadCheckOut_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/ship:
    post:
      description: ''
      summary: EntityLoadShip_POST
      tags:
      - entity/load
      operationId: EntityLoadShip_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/{id}:
    get:
      description: ''
      summary: EntityLoadById_GET
      tags:
      - entity/load
      operationId: EntityLoadById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityLoadById_PATCH
      tags:
      - entity/load
      operationId: EntityLoadById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/{id}/check_in:
    post:
      description: ''
      summary: EntityLoadCheckInById_POST
      tags:
      - entity/load
      operationId: EntityLoadCheckInById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/{id}/check_out:
    post:
      description: ''
      summary: EntityLoadCheckOutById_POST
      tags:
      - entity/load
      operationId: EntityLoadCheckOutById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load/{id}/ship:
    post:
      description: ''
      summary: EntityLoadShipById_POST
      tags:
      - entity/load
      operationId: EntityLoadShipById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load_status:
    get:
      description: ''
      summary: EntityLoadStatus_GET
      tags:
      - entity/load_status
      operationId: EntityLoadStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load_status/describe:
    get:
      description: ''
      summary: EntityLoadStatusDescribe_GET
      tags:
      - entity/load_status
      operationId: EntityLoadStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/load_status/{id}:
    get:
      description: ''
      summary: EntityLoadStatusById_GET
      tags:
      - entity/load_status
      operationId: EntityLoadStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location:
    get:
      description: ''
      summary: EntityLocation_GET
      tags:
      - entity/location
      operationId: EntityLocation_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location/describe:
    get:
      description: ''
      summary: EntityLocationDescribe_GET
      tags:
      - entity/location
      operationId: EntityLocationDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location/update_active_inventory:
    post:
      description: ''
      summary: EntityLocationUpdateActiveInventory_POST
      tags:
      - entity/location
      operationId: EntityLocationUpdateActiveInventory_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location/{id}:
    get:
      description: ''
      summary: EntityLocationById_GET
      tags:
      - entity/location
      operationId: EntityLocationById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityLocationById_PATCH
      tags:
      - entity/location
      operationId: EntityLocationById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location/{id}/update_active_inventory:
    post:
      description: ''
      summary: EntityLocationUpdateActiveInventoryById_POST
      tags:
      - entity/location
      operationId: EntityLocationUpdateActiveInventoryById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location/yard/first_available:
    get:
      description: ''
      summary: EntityLocationYearFirstAvailable_GET
      tags:
      - entity/location
      operationId: EntityLocationYearFirstAvailable_GET
      parameters:
      - name: facility_id
        in: query
        type: string
        description: ''
      - name: facility_id__code
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location_size_type:
    get:
      description: ''
      summary: EntityLocationSizeType_GET
      tags:
      - entity/location_size_type
      operationId: EntityLocationSizeType_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityLocationSizeType_POST
      tags:
      - entity/location_size_type
      operationId: EntityLocationSizeType_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location_size_type/{id}:
    get:
      description: ''
      summary: EntityLocationSizeTypeById_GET
      tags:
      - entity/location_size_type
      operationId: EntityLocationSizeTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location_type:
    get:
      description: ''
      summary: EntityLocationType_GET
      tags:
      - entity/location_type
      operationId: EntityLocationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location_type/describe:
    get:
      description: ''
      summary: EntityLocationTypeDescribe_GET
      tags:
      - entity/location_type
      operationId: EntityLocationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/location_type/{id}:
    get:
      description: ''
      summary: EntityLocationTypeById_GET
      tags:
      - entity/location_type
      operationId: EntityLocationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_destination_code:
    get:
      description: ''
      summary: EntityMheDestinationCode_GET
      tags:
      - entity/mhe_destination_code
      operationId: EntityMheDestinationCode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_destination_code/describe:
    get:
      description: ''
      summary: EntityMheDestinationCodeDescribe_GET
      tags:
      - entity/mhe_destination_code
      operationId: EntityMheDestinationCodeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_destination_code/{id}:
    get:
      description: ''
      summary: EntityMheDestinationCodeById_GET
      tags:
      - entity/mhe_destination_code
      operationId: EntityMheDestinationCodeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_msg_type:
    get:
      description: ''
      summary: EntityMheMsgType_GET
      tags:
      - entity/mhe_msg_type
      operationId: EntityMheMsgType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_msg_type/describe:
    get:
      description: ''
      summary: EntityMheMsgTypeDescribe_GET
      tags:
      - entity/mhe_msg_type
      operationId: EntityMheMsgTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_msg_type/{id}:
    get:
      description: ''
      summary: EntityMheMsgTypeById_GET
      tags:
      - entity/mhe_msg_type
      operationId: EntityMheMsgTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_route_config_function:
    get:
      description: ''
      summary: EntityMheRouteConfigFunction_GET
      tags:
      - entity/mhe_route_config_function
      operationId: EntityMheRouteConfigFunction_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_route_config_function/describe:
    get:
      description: ''
      summary: EntityMheRouteConfigFunctionDescribe_GET
      tags:
      - entity/mhe_route_config_function
      operationId: EntityMheRouteConfigFunctionDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_route_config_function/{id}:
    get:
      description: ''
      summary: EntityMheRouteConfigFunctionById_GET
      tags:
      - entity/mhe_route_config_function
      operationId: EntityMheRouteConfigFunctionById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_trigger:
    get:
      description: ''
      summary: EntityMheTrigger_GET
      tags:
      - entity/mhe_trigger
      operationId: EntityMheTrigger_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_trigger/describe:
    get:
      description: ''
      summary: EntityMheTriggerDescribe_GET
      tags:
      - entity/mhe_trigger
      operationId: EntityMheTriggerDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_trigger/{id}:
    get:
      description: ''
      summary: EntityMheTriggerById_GET
      tags:
      - entity/mhe_trigger
      operationId: EntityMheTriggerById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_type:
    get:
      description: ''
      summary: EntityMheType_GET
      tags:
      - entity/mhe_type
      operationId: EntityMheType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_type/describe:
    get:
      description: ''
      summary: EntityMheTypeDescribe_GET
      tags:
      - entity/mhe_type
      operationId: EntityMheTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/mhe_type/{id}:
    get:
      description: ''
      summary: EntityMheTypeById_GET
      tags:
      - entity/mhe_type
      operationId: EntityMheTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/multi_field_barcode_delimiter:
    get:
      description: ''
      summary: EntityMultiFieldBarcodeDelimiter_GET
      tags:
      - entity/multi_field_barcode_delimiter
      operationId: EntityMultiFieldBarcodeDelimiter_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/multi_field_barcode_delimiter/describe:
    get:
      description: ''
      summary: EntityMultiFieldBarcodeDelimiterDescribe_GET
      tags:
      - entity/multi_field_barcode_delimiter
      operationId: EntityMultiFieldBarcodeDelimiterDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/multi_field_barcode_delimiter/{id}:
    get:
      description: ''
      summary: EntityMultiFieldBarcodeDelimiterById_GET
      tags:
      - entity/multi_field_barcode_delimiter
      operationId: EntityMultiFieldBarcodeDelimiterById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ob_stop:
    get:
      description: ''
      summary: EntityObStop_GET
      tags:
      - entity/ob_stop
      operationId: EntityObStop_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ob_stop/describe:
    get:
      description: ''
      summary: EntityObStopDescribe_GET
      tags:
      - entity/ob_stop
      operationId: EntityObStopDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ob_stop/{id}:
    get:
      description: ''
      summary: EntityObStopById_GET
      tags:
      - entity/ob_stop
      operationId: EntityObStopById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ob_stop_dtl:
    get:
      description: ''
      summary: EntityObStopDtl_GET
      tags:
      - entity/ob_stop_dtl
      operationId: EntityObStopDtl_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ob_stop_dtl/describe:
    get:
      description: ''
      summary: EntityObStopDtlDescribe_GET
      tags:
      - entity/ob_stop_dtl
      operationId: EntityObStopDtlDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ob_stop_dtl/{id}:
    get:
      description: ''
      summary: EntityObStopDtlById_GET
      tags:
      - entity/ob_stop_dtl
      operationId: EntityObStopDtlById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn:
    get:
      description: ''
      summary: EntityOblpn_GET
      tags:
      - entity/oblpn
      operationId: EntityOblpn_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn/create_from_iblpn:
    post:
      description: ''
      summary: EntityOblpnCreateFromIblpn_POST
      tags:
      - entity/oblpn
      operationId: EntityOblpnCreateFromIblpn_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn/describe:
    get:
      description: ''
      summary: EntityOblpnDescribe_GET
      tags:
      - entity/oblpn
      operationId: EntityOblpnDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn/{id}:
    get:
      description: ''
      summary: EntityOblpnById_GET
      tags:
      - entity/oblpn
      operationId: EntityOblpnById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityOblpnById_PATCH
      tags:
      - entity/oblpn
      operationId: EntityOblpnById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn/{id}/link_asset:
    post:
      description: ''
      summary: EntityOblpnLinkAssetById_POST
      tags:
      - entity/oblpn
      operationId: EntityOblpnLinkAssetById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn_printing_validation:
    get:
      description: ''
      summary: EntityOblpnPrintingValidation_GET
      tags:
      - entity/oblpn_printing_validation
      operationId: EntityOblpnPrintingValidation_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn_printing_validation/describe:
    get:
      description: ''
      summary: EntityOblpnPrintingValidationDescribe_GET
      tags:
      - entity/oblpn_printing_validation
      operationId: EntityOblpnPrintingValidationDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/oblpn_printing_validation/{id}:
    get:
      description: ''
      summary: EntityOblpnPrintingValidationById_GET
      tags:
      - entity/oblpn_printing_validation
      operationId: EntityOblpnPrintingValidationById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_dtl:
    get:
      description: ''
      summary: EntityOrderDtl_GET
      tags:
      - entity/order_dtl
      operationId: EntityOrderDtl_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_dtl/describe:
    get:
      description: ''
      summary: EntityOrderDtlDescribe_GET
      tags:
      - entity/order_dtl
      operationId: EntityOrderDtlDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_dtl/{id}:
    get:
      description: ''
      summary: EntityOrderDtlById_GET
      tags:
      - entity/order_dtl
      operationId: EntityOrderDtlById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityOrderDtlById_PATCH
      tags:
      - entity/order_dtl
      operationId: EntityOrderDtlById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr:
    get:
      description: ''
      summary: EntityOrderHdr_GET
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdr_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr/bulk_lock:
    post:
      description: ''
      summary: EntityOrderHdrBulkLock_POST
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrBulkLock_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr/bulk_unlock:
    post:
      description: ''
      summary: EntityOrderHdrBulkUnlock_POST
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrBulkUnlock_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr/describe:
    get:
      description: ''
      summary: EntityOrderHdrDescribe_GET
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr/{id}:
    get:
      description: ''
      summary: EntityOrderHdrById_GET
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityOrderHdrById_PATCH
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr/{id}/iblpns:
    post:
      description: ''
      summary: EntityOrderHdrIblpnsById_POST
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrIblpnsById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_hdr/{id}/oblpns:
    post:
      description: ''
      summary: EntityOrderHdrOblpnsById_POST
      tags:
      - entity/order_hdr
      operationId: EntityOrderHdrOblpnsById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction:
    get:
      description: ''
      summary: EntityOrderInstruction_GET
      tags:
      - entity/order_instruction
      operationId: EntityOrderInstruction_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction/describe:
    get:
      description: ''
      summary: EntityOrderInstructionDescribe_GET
      tags:
      - entity/order_instruction
      operationId: EntityOrderInstructionDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction/{id}:
    get:
      description: ''
      summary: EntityOrderInstructionById_GET
      tags:
      - entity/order_instruction
      operationId: EntityOrderInstructionById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction_level:
    get:
      description: ''
      summary: EntityOrderInstructionLevel_GET
      tags:
      - entity/order_instruction_level
      operationId: EntityOrderInstructionLevel_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction_level/describe:
    get:
      description: ''
      summary: EntityOrderInstructionLevelDescribe_GET
      tags:
      - entity/order_instruction_level
      operationId: EntityOrderInstructionLevelDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction_level/{id}:
    get:
      description: ''
      summary: EntityOrderInstructionLevelById_GET
      tags:
      - entity/order_instruction_level
      operationId: EntityOrderInstructionLevelById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction_type:
    get:
      description: ''
      summary: EntityOrderInstructionType_GET
      tags:
      - entity/order_instruction_type
      operationId: EntityOrderInstructionType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction_type/describe:
    get:
      description: ''
      summary: EntityOrderInstructionTypeDescribe_GET
      tags:
      - entity/order_instruction_type
      operationId: EntityOrderInstructionTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_instruction_type/{id}:
    get:
      description: ''
      summary: EntityOrderInstructionTypeById_GET
      tags:
      - entity/order_instruction_type
      operationId: EntityOrderInstructionTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_lock:
    get:
      description: ''
      summary: EntityOrderLock_GET
      tags:
      - entity/order_lock
      operationId: EntityOrderLock_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_lock/describe:
    get:
      description: ''
      summary: EntityOrderLockDescribe_GET
      tags:
      - entity/order_lock
      operationId: EntityOrderLockDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_lock/{id}:
    get:
      description: ''
      summary: EntityOrderLockById_GET
      tags:
      - entity/order_lock
      operationId: EntityOrderLockById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_status:
    get:
      description: ''
      summary: EntityOrderStatus_GET
      tags:
      - entity/order_status
      operationId: EntityOrderStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_status/describe:
    get:
      description: ''
      summary: EntityOrderStatusDescribe_GET
      tags:
      - entity/order_status
      operationId: EntityOrderStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_status/{id}:
    get:
      description: ''
      summary: EntityOrderStatusById_GET
      tags:
      - entity/order_status
      operationId: EntityOrderStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_type:
    get:
      description: ''
      summary: EntityOrderType_GET
      tags:
      - entity/order_type
      operationId: EntityOrderType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_type/describe:
    get:
      description: ''
      summary: EntityOrderTypeDescribe_GET
      tags:
      - entity/order_type
      operationId: EntityOrderTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_type/{id}:
    get:
      description: ''
      summary: EntityOrderTypeById_GET
      tags:
      - entity/order_type
      operationId: EntityOrderTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_validation_mode:
    get:
      description: ''
      summary: EntityOrderValidationMode_GET
      tags:
      - entity/order_validation_mode
      operationId: EntityOrderValidationMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_validation_mode/describe:
    get:
      description: ''
      summary: EntityOrderValidationModeDescribe_GET
      tags:
      - entity/order_validation_mode
      operationId: EntityOrderValidationModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/order_validation_mode/{id}:
    get:
      description: ''
      summary: EntityOrderValidationModeById_GET
      tags:
      - entity/order_validation_mode
      operationId: EntityOrderValidationModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet:
    get:
      description: ''
      summary: EntityPallet_GET
      tags:
      - entity/pallet
      operationId: EntityPallet_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet/close_inbound_sorting:
    post:
      description: ''
      summary: EntityPalletCloseInboundSorting_POST
      tags:
      - entity/pallet
      operationId: EntityPalletCloseInboundSorting_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet/describe:
    get:
      description: ''
      summary: EntityPalletDescribe_GET
      tags:
      - entity/pallet
      operationId: EntityPalletDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet/sort_lpn:
    post:
      description: ''
      summary: EntityPalletSortLpn_POST
      tags:
      - entity/pallet
      operationId: EntityPalletSortLpn_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet/{id}:
    get:
      description: ''
      summary: EntityPalletById_GET
      tags:
      - entity/pallet
      operationId: EntityPalletById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet/{id}/close_inbound_sorting:
    post:
      description: ''
      summary: EntityPalletCloseInboundSortingById_POST
      tags:
      - entity/pallet
      operationId: EntityPalletCloseInboundSortingById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet_activity:
    get:
      description: ''
      summary: EntityPalletActivity_GET
      tags:
      - entity/pallet_activity
      operationId: EntityPalletActivity_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet_activity/describe:
    get:
      description: ''
      summary: EntityPalletActivityDescribe_GET
      tags:
      - entity/pallet_activity
      operationId: EntityPalletActivityDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet_activity/{id}:
    get:
      description: ''
      summary: EntityPalletActivityById_GET
      tags:
      - entity/pallet_activity
      operationId: EntityPalletActivityById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet_status:
    get:
      description: ''
      summary: EntityPalletStatus_GET
      tags:
      - entity/pallet_status
      operationId: EntityPalletStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet_status/describe:
    get:
      description: ''
      summary: EntityPalletStatusDescribe_GET
      tags:
      - entity/pallet_status
      operationId: EntityPalletStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/pallet_status/{id}:
    get:
      description: ''
      summary: EntityPalletStatusById_GET
      tags:
      - entity/pallet_status
      operationId: EntityPalletStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_manifest:
    get:
      description: ''
      summary: EntityParcelManifest_GET
      tags:
      - entity/parcel_manifest
      operationId: EntityParcelManifest_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_manifest/describe:
    get:
      description: ''
      summary: EntityParcelManifestDescribe_GET
      tags:
      - entity/parcel_manifest
      operationId: EntityParcelManifestDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_manifest/{id}:
    get:
      description: ''
      summary: EntityParcelManifestById_GET
      tags:
      - entity/parcel_manifest
      operationId: EntityParcelManifestById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_manifest_status:
    get:
      description: ''
      summary: EntityParcelManifestStatus_GET
      tags:
      - entity/parcel_manifest_status
      operationId: EntityParcelManifestStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_manifest_status/describe:
    get:
      description: ''
      summary: EntityParcelManifestStatusDescribe_GET
      tags:
      - entity/parcel_manifest_status
      operationId: EntityParcelManifestStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_manifest_status/{id}:
    get:
      description: ''
      summary: EntityParcelManifestStatusById_GET
      tags:
      - entity/parcel_manifest_status
      operationId: EntityParcelManifestStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_shipment:
    get:
      description: ''
      summary: EntityParcelShipment_GET
      tags:
      - entity/parcel_shipment
      operationId: EntityParcelShipment_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_shipment/describe:
    get:
      description: ''
      summary: EntityParcelShipmentDescribe_GET
      tags:
      - entity/parcel_shipment
      operationId: EntityParcelShipmentDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_shipment/{id}:
    get:
      description: ''
      summary: EntityParcelShipmentById_GET
      tags:
      - entity/parcel_shipment
      operationId: EntityParcelShipmentById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_shipment_dtl:
    get:
      description: ''
      summary: EntityParcelShipmentDtl_GET
      tags:
      - entity/parcel_shipment_dtl
      operationId: EntityParcelShipmentDtl_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_shipment_dtl/describe:
    get:
      description: ''
      summary: EntityParcelShipmentDtlDescribe_GET
      tags:
      - entity/parcel_shipment_dtl
      operationId: EntityParcelShipmentDtlDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_shipment_dtl/{id}:
    get:
      description: ''
      summary: EntityParcelShipmentDtlById_GET
      tags:
      - entity/parcel_shipment_dtl
      operationId: EntityParcelShipmentDtlById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_transaction_status:
    get:
      description: ''
      summary: EntityParcelTransactionStatus_GET
      tags:
      - entity/parcel_transaction_status
      operationId: EntityParcelTransactionStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_transaction_status/describe:
    get:
      description: ''
      summary: EntityParcelTransactionStatusDescribe_GET
      tags:
      - entity/parcel_transaction_status
      operationId: EntityParcelTransactionStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parcel_transaction_status/{id}:
    get:
      description: ''
      summary: EntityParcelTransactionStatusById_GET
      tags:
      - entity/parcel_transaction_status
      operationId: EntityParcelTransactionStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parm_type:
    get:
      description: ''
      summary: EntityParmType_GET
      tags:
      - entity/parm_type
      operationId: EntityParmType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parm_type/describe:
    get:
      description: ''
      summary: EntityParmTypeDescribe_GET
      tags:
      - entity/parm_type
      operationId: EntityParmTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/parm_type/{id}:
    get:
      description: ''
      summary: EntityParmTypeById_GET
      tags:
      - entity/parm_type
      operationId: EntityParmTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/payment_method:
    get:
      description: ''
      summary: EntityPaymentMethod_GET
      tags:
      - entity/payment_method
      operationId: EntityPaymentMethod_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/payment_method/describe:
    get:
      description: ''
      summary: EntityPaymentMethodDescribe_GET
      tags:
      - entity/payment_method
      operationId: EntityPaymentMethodDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/payment_method/{id}:
    get:
      description: ''
      summary: EntityPaymentMethodById_GET
      tags:
      - entity/payment_method
      operationId: EntityPaymentMethodById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer:
    get:
      description: ''
      summary: EntityPrinter_GET
      tags:
      - entity/printer
      operationId: EntityPrinter_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer/describe:
    get:
      description: ''
      summary: EntityPrinterDescribe_GET
      tags:
      - entity/printer
      operationId: EntityPrinterDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer/{id}:
    get:
      description: ''
      summary: EntityPrinterById_GET
      tags:
      - entity/printer
      operationId: EntityPrinterById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer_protocol:
    get:
      description: ''
      summary: EntityPrinterProtocol_GET
      tags:
      - entity/printer_protocol
      operationId: EntityPrinterProtocol_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer_protocol/describe:
    get:
      description: ''
      summary: EntityPrinterProtocolDescribe_GET
      tags:
      - entity/printer_protocol
      operationId: EntityPrinterProtocolDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer_protocol/{id}:
    get:
      description: ''
      summary: EntityPrinterProtocolById_GET
      tags:
      - entity/printer_protocol
      operationId: EntityPrinterProtocolById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer_type:
    get:
      description: ''
      summary: EntityPrinterType_GET
      tags:
      - entity/printer_type
      operationId: EntityPrinterType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer_type/describe:
    get:
      description: ''
      summary: EntityPrinterTypeDescribe_GET
      tags:
      - entity/printer_type
      operationId: EntityPrinterTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/printer_type/{id}:
    get:
      description: ''
      summary: EntityPrinterTypeById_GET
      tags:
      - entity/printer_type
      operationId: EntityPrinterTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/process_monitor_status:
    get:
      description: ''
      summary: EntityProcessMonitorStatus_GET
      tags:
      - entity/process_monitor_status
      operationId: EntityProcessMonitorStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/process_monitor_status/describe:
    get:
      description: ''
      summary: EntityProcessMonitorStatusDescribe_GET
      tags:
      - entity/process_monitor_status
      operationId: EntityProcessMonitorStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/process_monitor_status/{id}:
    get:
      description: ''
      summary: EntityProcessMonitorStatusById_GET
      tags:
      - entity/process_monitor_status
      operationId: EntityProcessMonitorStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/property_prompt_mode:
    get:
      description: ''
      summary: EntityPropertyPromptMode_GET
      tags:
      - entity/property_prompt_mode
      operationId: EntityPropertyPromptMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/property_prompt_mode/describe:
    get:
      description: ''
      summary: EntityPropertyPromptModeDescribe_GET
      tags:
      - entity/property_prompt_mode
      operationId: EntityPropertyPromptModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/property_prompt_mode/{id}:
    get:
      description: ''
      summary: EntityPropertyPromptModeById_GET
      tags:
      - entity/property_prompt_mode
      operationId: EntityPropertyPromptModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_dtl:
    get:
      description: ''
      summary: EntityPurchaseOrderDtl_GET
      tags:
      - entity/purchase_order_dtl
      operationId: EntityPurchaseOrderDtl_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_dtl/describe:
    get:
      description: ''
      summary: EntityPurchaseOrderDtlDescribe_GET
      tags:
      - entity/purchase_order_dtl
      operationId: EntityPurchaseOrderDtlDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_dtl/{id}:
    get:
      description: ''
      summary: EntityPurchaseOrderDtlById_GET
      tags:
      - entity/purchase_order_dtl
      operationId: EntityPurchaseOrderDtlById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityPurchaseOrderDtlById_PATCH
      tags:
      - entity/purchase_order_dtl
      operationId: EntityPurchaseOrderDtlById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_hdr:
    get:
      description: ''
      summary: EntityPurchaseOrderHdr_GET
      tags:
      - entity/purchase_order_hdr
      operationId: EntityPurchaseOrderHdr_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_hdr/describe:
    get:
      description: ''
      summary: EntityPurchaseOrderHdrDescribe_GET
      tags:
      - entity/purchase_order_hdr
      operationId: EntityPurchaseOrderHdrDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_hdr/{id}:
    get:
      description: ''
      summary: EntityPurchaseOrderHdrById_GET
      tags:
      - entity/purchase_order_hdr
      operationId: EntityPurchaseOrderHdrById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityPurchaseOrderHdrById_PATCH
      tags:
      - entity/purchase_order_hdr
      operationId: EntityPurchaseOrderHdrById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_status:
    get:
      description: ''
      summary: EntityPurchaseOrderStatus_GET
      tags:
      - entity/purchase_order_status
      operationId: EntityPurchaseOrderStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_status/describe:
    get:
      description: ''
      summary: EntityPurchaseOrderStatusDescribe_GET
      tags:
      - entity/purchase_order_status
      operationId: EntityPurchaseOrderStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/purchase_order_status/{id}:
    get:
      description: ''
      summary: EntityPurchaseOrderStatusById_GET
      tags:
      - entity/purchase_order_status
      operationId: EntityPurchaseOrderStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_method:
    get:
      description: ''
      summary: EntityPutawayMethod_GET
      tags:
      - entity/putaway_method
      operationId: EntityPutawayMethod_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_method/describe:
    get:
      description: ''
      summary: EntityPutawayMethodDescribe_GET
      tags:
      - entity/putaway_method
      operationId: EntityPutawayMethodDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_method/{id}:
    get:
      description: ''
      summary: EntityPutawayMethodById_GET
      tags:
      - entity/putaway_method
      operationId: EntityPutawayMethodById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_priority:
    get:
      description: ''
      summary: EntityPutawayPriority_GET
      tags:
      - entity/putaway_priority
      operationId: EntityPutawayPriority_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityPutawayPriority_POST
      tags:
      - entity/putaway_priority
      operationId: EntityPutawayPriority_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_priority/{id}:
    get:
      description: ''
      summary: EntityPutawayPriorityById_GET
      tags:
      - entity/putaway_priority
      operationId: EntityPutawayPriorityById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_search_mode:
    get:
      description: ''
      summary: EntityPutawaySearchMode_GET
      tags:
      - entity/putaway_search_mode
      operationId: EntityPutawaySearchMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_search_mode/describe:
    get:
      description: ''
      summary: EntityPutawaySearchModeDescribe_GET
      tags:
      - entity/putaway_search_mode
      operationId: EntityPutawaySearchModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_search_mode/{id}:
    get:
      description: ''
      summary: EntityPutawaySearchModeById_GET
      tags:
      - entity/putaway_search_mode
      operationId: EntityPutawaySearchModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_type:
    get:
      description: ''
      summary: EntityPutawayType_GET
      tags:
      - entity/putaway_type
      operationId: EntityPutawayType_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityPutawayType_POST
      tags:
      - entity/putaway_type
      operationId: EntityPutawayType_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_type/{id}:
    get:
      description: ''
      summary: EntityPutawayTypeById_GET
      tags:
      - entity/putaway_type
      operationId: EntityPutawayTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_type_calc_rule:
    get:
      description: ''
      summary: EntityPutawayTypeCalcRule_GET
      tags:
      - entity/putaway_type_calc_rule
      operationId: EntityPutawayTypeCalcRule_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityPutawayTypeCalcRule_POST
      tags:
      - entity/putaway_type_calc_rule
      operationId: EntityPutawayTypeCalcRule_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/putaway_type_calc_rule/{id}:
    get:
      description: ''
      summary: EntityPutawayTypeCalcRuleById_GET
      tags:
      - entity/putaway_type_calc_rule
      operationId: EntityPutawayTypeCalcRuleById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/qc_status:
    get:
      description: ''
      summary: EntityQcStatus_GET
      tags:
      - entity/qc_status
      operationId: EntityQcStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/qc_status/describe:
    get:
      description: ''
      summary: EntityQcStatusDescribe_GET
      tags:
      - entity/qc_status
      operationId: EntityQcStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/qc_status/{id}:
    get:
      description: ''
      summary: EntityQcStatusById_GET
      tags:
      - entity/qc_status
      operationId: EntityQcStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/reason_code_type:
    get:
      description: ''
      summary: EntityReasonCodeType_GET
      tags:
      - entity/reason_code_type
      operationId: EntityReasonCodeType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/reason_code_type/describe:
    get:
      description: ''
      summary: EntityReasonCodeTypeDescribe_GET
      tags:
      - entity/reason_code_type
      operationId: EntityReasonCodeTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/reason_code_type/{id}:
    get:
      description: ''
      summary: EntityReasonCodeTypeById_GET
      tags:
      - entity/reason_code_type
      operationId: EntityReasonCodeTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/receipt_validation_type:
    get:
      description: ''
      summary: EntityReceiptValidationType_GET
      tags:
      - entity/receipt_validation_type
      operationId: EntityReceiptValidationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/receipt_validation_type/describe:
    get:
      description: ''
      summary: EntityReceiptValidationTypeDescribe_GET
      tags:
      - entity/receipt_validation_type
      operationId: EntityReceiptValidationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/receipt_validation_type/{id}:
    get:
      description: ''
      summary: EntityReceiptValidationTypeById_GET
      tags:
      - entity/receipt_validation_type
      operationId: EntityReceiptValidationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/record_status:
    get:
      description: ''
      summary: EntityRecordStatus_GET
      tags:
      - entity/record_status
      operationId: EntityRecordStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/record_status/describe:
    get:
      description: ''
      summary: EntityRecordStatusDescribe_GET
      tags:
      - entity/record_status
      operationId: EntityRecordStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/record_status/{id}:
    get:
      description: ''
      summary: EntityRecordStatusById_GET
      tags:
      - entity/record_status
      operationId: EntityRecordStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/replenishment_trigger_mode:
    get:
      description: ''
      summary: EntityReplenishmentTriggerMode_GET
      tags:
      - entity/replenishment_trigger_mode
      operationId: EntityReplenishmentTriggerMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/replenishment_trigger_mode/describe:
    get:
      description: ''
      summary: EntityReplenishmentTriggerModeDescribe_GET
      tags:
      - entity/replenishment_trigger_mode
      operationId: EntityReplenishmentTriggerModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/replenishment_trigger_mode/{id}:
    get:
      description: ''
      summary: EntityReplenishmentTriggerModeById_GET
      tags:
      - entity/replenishment_trigger_mode
      operationId: EntityReplenishmentTriggerModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/replenishment_zone:
    get:
      description: ''
      summary: EntityReplenishmentZone_GET
      tags:
      - entity/replenishment_zone
      operationId: EntityReplenishmentZone_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityReplenishmentZone_POST
      tags:
      - entity/replenishment_zone
      operationId: EntityReplenishmentZone_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/replenishment_zone/{id}:
    get:
      description: ''
      summary: EntityReplenishmentZoneById_GET
      tags:
      - entity/replenishment_zone
      operationId: EntityReplenishmentZoneById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/report_sub_type:
    get:
      description: ''
      summary: EntityReportSubType_GET
      tags:
      - entity/report_sub_type
      operationId: EntityReportSubType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/report_sub_type/describe:
    get:
      description: ''
      summary: EntityReportSubTypeDescribe_GET
      tags:
      - entity/report_sub_type
      operationId: EntityReportSubTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/report_sub_type/{id}:
    get:
      description: ''
      summary: EntityReportSubTypeById_GET
      tags:
      - entity/report_sub_type
      operationId: EntityReportSubTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/report_type:
    get:
      description: ''
      summary: EntityReportType_GET
      tags:
      - entity/report_type
      operationId: EntityReportType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/report_type/describe:
    get:
      description: ''
      summary: EntityReportTypeDescribe_GET
      tags:
      - entity/report_type
      operationId: EntityReportTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/report_type/{id}:
    get:
      description: ''
      summary: EntityReportTypeById_GET
      tags:
      - entity/report_type
      operationId: EntityReportTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/reserve_location:
    get:
      description: ''
      summary: EntityReserveLocation_GET
      tags:
      - entity/reserve_location
      operationId: EntityReserveLocation_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/reserve_location/describe:
    get:
      description: ''
      summary: EntityReserveLocationDescribe_GET
      tags:
      - entity/reserve_location
      operationId: EntityReserveLocationDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/reserve_location/{id}:
    get:
      description: ''
      summary: EntityReserveLocationById_GET
      tags:
      - entity/reserve_location
      operationId: EntityReserveLocationById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityReserveLocationById_PATCH
      tags:
      - entity/reserve_location
      operationId: EntityReserveLocationById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/rf_key_code:
    get:
      description: ''
      summary: EntityRfKeyCode_GET
      tags:
      - entity/rf_key_code
      operationId: EntityRfKeyCode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/rf_key_code/describe:
    get:
      description: ''
      summary: EntityRfKeyCodeDescribe_GET
      tags:
      - entity/rf_key_code
      operationId: EntityRfKeyCodeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/rf_key_code/{id}:
    get:
      description: ''
      summary: EntityRfKeyCodeById_GET
      tags:
      - entity/rf_key_code
      operationId: EntityRfKeyCodeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/route_hdr_status:
    get:
      description: ''
      summary: EntityRouteHdrStatus_GET
      tags:
      - entity/route_hdr_status
      operationId: EntityRouteHdrStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/route_hdr_status/describe:
    get:
      description: ''
      summary: EntityRouteHdrStatusDescribe_GET
      tags:
      - entity/route_hdr_status
      operationId: EntityRouteHdrStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/route_hdr_status/{id}:
    get:
      description: ''
      summary: EntityRouteHdrStatusById_GET
      tags:
      - entity/route_hdr_status
      operationId: EntityRouteHdrStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/routing_mode:
    get:
      description: ''
      summary: EntityRoutingMode_GET
      tags:
      - entity/routing_mode
      operationId: EntityRoutingMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/routing_mode/describe:
    get:
      description: ''
      summary: EntityRoutingModeDescribe_GET
      tags:
      - entity/routing_mode
      operationId: EntityRoutingModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/routing_mode/{id}:
    get:
      description: ''
      summary: EntityRoutingModeById_GET
      tags:
      - entity/routing_mode
      operationId: EntityRoutingModeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/screen_type:
    get:
      description: ''
      summary: EntityScreenType_GET
      tags:
      - entity/screen_type
      operationId: EntityScreenType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/screen_type/describe:
    get:
      description: ''
      summary: EntityScreenTypeDescribe_GET
      tags:
      - entity/screen_type
      operationId: EntityScreenTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/screen_type/{id}:
    get:
      description: ''
      summary: EntityScreenTypeById_GET
      tags:
      - entity/screen_type
      operationId: EntityScreenTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/selection_type:
    get:
      description: ''
      summary: EntitySelectionType_GET
      tags:
      - entity/selection_type
      operationId: EntitySelectionType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/selection_type/describe:
    get:
      description: ''
      summary: EntitySelectionTypeDescribe_GET
      tags:
      - entity/selection_type
      operationId: EntitySelectionTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/selection_type/{id}:
    get:
      description: ''
      summary: EntitySelectionTypeById_GET
      tags:
      - entity/selection_type
      operationId: EntitySelectionTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/seq_counter:
    get:
      description: ''
      summary: EntitySeqCounter_GET
      tags:
      - entity/seq_counter
      operationId: EntitySeqCounter_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/seq_counter/describe:
    get:
      description: ''
      summary: EntitySeqCounterDescribe_GET
      tags:
      - entity/seq_counter
      operationId: EntitySeqCounterDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/seq_counter/{id}:
    get:
      description: ''
      summary: EntitySeqCounterById_GET
      tags:
      - entity/seq_counter
      operationId: EntitySeqCounterById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr:
    get:
      description: ''
      summary: EntitySerialNbr_GET
      tags:
      - entity/serial_nbr
      operationId: EntitySerialNbr_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr/describe:
    get:
      description: ''
      summary: EntitySerialNbrDescribe_GET
      tags:
      - entity/serial_nbr
      operationId: EntitySerialNbrDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr/{id}:
    get:
      description: ''
      summary: EntitySerialNbrById_GET
      tags:
      - entity/serial_nbr
      operationId: EntitySerialNbrById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr_action_code:
    get:
      description: ''
      summary: EntitySerialNbrActionCode_GET
      tags:
      - entity/serial_nbr_action_code
      operationId: EntitySerialNbrActionCode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr_action_code/describe:
    get:
      description: ''
      summary: EntitySerialNbrActionCodeDescribe_GET
      tags:
      - entity/serial_nbr_action_code
      operationId: EntitySerialNbrActionCodeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr_action_code/{id}:
    get:
      description: ''
      summary: EntitySerialNbrActionCodeById_GET
      tags:
      - entity/serial_nbr_action_code
      operationId: EntitySerialNbrActionCodeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr_inventory:
    get:
      description: ''
      summary: EntitySerialNbrInventory_GET
      tags:
      - entity/serial_nbr_inventory
      operationId: EntitySerialNbrInventory_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr_inventory/describe:
    get:
      description: ''
      summary: EntitySerialNbrInventoryDescribe_GET
      tags:
      - entity/serial_nbr_inventory
      operationId: EntitySerialNbrInventoryDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/serial_nbr_inventory/{id}:
    get:
      description: ''
      summary: EntitySerialNbrInventoryById_GET
      tags:
      - entity/serial_nbr_inventory
      operationId: EntitySerialNbrInventoryById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shift:
    get:
      description: ''
      summary: EntityShift_GET
      tags:
      - entity/shift
      operationId: EntityShift_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shift/describe:
    get:
      description: ''
      summary: EntityShiftDescribe_GET
      tags:
      - entity/shift
      operationId: EntityShiftDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shift/{id}:
    get:
      description: ''
      summary: EntityShiftById_GET
      tags:
      - entity/shift
      operationId: EntityShiftById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shipment_verif_orderdtl_cancel_mode:
    get:
      description: ''
      summary: EntityShipmentVerifOrderdtlCancelMode_GET
      tags:
      - entity/shipment_verif_orderdtl_cancel_mode
      operationId: EntityShipmentVerifOrderdtlCancelMode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shipment_verif_orderdtl_cancel_mode/describe:
    get:
      description: ''
      summary: EntityShipmentVerifOrderdtlCancelModeDescribe_GET
      tags:
      - entity/shipment_verif_orderdtl_cancel_mode
      operationId: EntityShipmentVerifOrderdtlCancelModeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shipment_verif_orderdtl_cancel_mode/{id}:
    get:
      description: ''
      summary: EntityShipmentVerifOrderdtlCancelMode_GET
      tags:
      - entity/shipment_verif_orderdtl_cancel_mode
      operationId: GetEntityShipmentVerifOrderdtlCancelMode_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shipping_blocked_selection_criteria:
    get:
      description: ''
      summary: EntityShippingBlockedSelectionCriteria_GET
      tags:
      - entity/shipping_blocked_selection_criteria
      operationId: EntityShippingBlockedSelectionCriteria_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shipping_blocked_selection_criteria/describe:
    get:
      description: ''
      summary: EntityShippingBlockedSelectionCriteriaDescribe_GET
      tags:
      - entity/shipping_blocked_selection_criteria
      operationId: EntityShippingBlockedSelectionCriteriaDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/shipping_blocked_selection_criteria/{id}:
    get:
      description: ''
      summary: EntityShippingBlockedSelectionCriteria_GET
      tags:
      - entity/shipping_blocked_selection_criteria
      operationId: GetEntityShippingBlockedSelectionCriteria_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/sql_operator:
    get:
      description: ''
      summary: EntitySqlOperator_GET
      tags:
      - entity/sql_operator
      operationId: EntitySqlOperator_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/sql_operator/describe:
    get:
      description: ''
      summary: EntitySqlOperatorDescribe_GET
      tags:
      - entity/sql_operator
      operationId: EntitySqlOperatorDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/sql_operator/{id}:
    get:
      description: ''
      summary: EntitySqlOperatorById_GET
      tags:
      - entity/sql_operator
      operationId: EntitySqlOperatorById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/sql_selection:
    get:
      description: ''
      summary: EntitySqlSelection_GET
      tags:
      - entity/sql_selection
      operationId: EntitySqlSelection_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntitySqlSelection_POST
      tags:
      - entity/sql_selection
      operationId: EntitySqlSelection_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/sql_selection/{id}:
    get:
      description: ''
      summary: EntitySqlSelectionById_GET
      tags:
      - entity/sql_selection
      operationId: EntitySqlSelectionById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/stage_status:
    get:
      description: ''
      summary: EntityStageStatus_GET
      tags:
      - entity/stage_status
      operationId: EntityStageStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/stage_status/describe:
    get:
      description: ''
      summary: EntityStageStatusDescribe_GET
      tags:
      - entity/stage_status
      operationId: EntityStageStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/stage_status/{id}:
    get:
      description: ''
      summary: EntityStageStatusById_GET
      tags:
      - entity/stage_status
      operationId: EntityStageStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/standard_check_digit_method:
    get:
      description: ''
      summary: EntityStandardCheckDigitMethod_GET
      tags:
      - entity/standard_check_digit_method
      operationId: EntityStandardCheckDigitMethod_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/standard_check_digit_method/describe:
    get:
      description: ''
      summary: EntityStandardCheckDigitMethodDescribe_GET
      tags:
      - entity/standard_check_digit_method
      operationId: EntityStandardCheckDigitMethodDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/standard_check_digit_method/{id}:
    get:
      description: ''
      summary: EntityStandardCheckDigitMethodById_GET
      tags:
      - entity/standard_check_digit_method
      operationId: EntityStandardCheckDigitMethodById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/stop_status:
    get:
      description: ''
      summary: EntityStopStatus_GET
      tags:
      - entity/stop_status
      operationId: EntityStopStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/stop_status/describe:
    get:
      description: ''
      summary: EntityStopStatusDescribe_GET
      tags:
      - entity/stop_status
      operationId: EntityStopStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/stop_status/{id}:
    get:
      description: ''
      summary: EntityStopStatusById_GET
      tags:
      - entity/stop_status
      operationId: EntityStopStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task:
    get:
      description: ''
      summary: EntityTask_GET
      tags:
      - entity/task
      operationId: EntityTask_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      - name: facility_id
        in: query
        type: integer
        description: ''
      - name: facility_id__code
        in: query
        type: string
        description: ''
      - name: location_barcode
        in: query
        type: string
        description: ''
      - name: task_type
        in: query
        type: string
        description: ''
      - name: ordering_rule
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task/describe:
    get:
      description: ''
      summary: EntityTaskDescribe_GET
      tags:
      - entity/task
      operationId: EntityTaskDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task/next_task:
    get:
      description: ''
      summary: EntityTaskNextTask_GET
      tags:
      - entity/task
      operationId: EntityTaskNextTask_GET
      parameters:
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: facility_id__code
        in: query
        required: true
        type: string
        description: ''
      - name: location_barcode
        in: query
        required: true
        type: string
        description: ''
      - name: ordering_rule
        in: query
        required: true
        type: string
        description: ''
      - name: task_type
        in: query
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task/{id}:
    get:
      description: ''
      summary: EntityTaskById_GET
      tags:
      - entity/task
      operationId: EntityTaskById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task_activity:
    get:
      description: ''
      summary: EntityTaskActivity_GET
      tags:
      - entity/task_activity
      operationId: EntityTaskActivity_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task_activity/describe:
    get:
      description: ''
      summary: EntityTaskActivityDescribe_GET
      tags:
      - entity/task_activity
      operationId: EntityTaskActivityDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task_activity/{id}:
    get:
      description: ''
      summary: EntityTaskActivityById_GET
      tags:
      - entity/task_activity
      operationId: EntityTaskActivityById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task_status:
    get:
      description: ''
      summary: EntityTaskStatus_GET
      tags:
      - entity/task_status
      operationId: EntityTaskStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task_status/describe:
    get:
      description: ''
      summary: EntityTaskStatusDescribe_GET
      tags:
      - entity/task_status
      operationId: EntityTaskStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/task_status/{id}:
    get:
      description: ''
      summary: EntityTaskStatusById_GET
      tags:
      - entity/task_status
      operationId: EntityTaskStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/template_type:
    get:
      description: ''
      summary: EntityTemplateType_GET
      tags:
      - entity/template_type
      operationId: EntityTemplateType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/template_type/describe:
    get:
      description: ''
      summary: EntityTemplateTypeDescribe_GET
      tags:
      - entity/template_type
      operationId: EntityTemplateTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/template_type/{id}:
    get:
      description: ''
      summary: EntityTemplateTypeById_GET
      tags:
      - entity/template_type
      operationId: EntityTemplateTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/time_format:
    get:
      description: ''
      summary: EntityTimeFormat_GET
      tags:
      - entity/time_format
      operationId: EntityTimeFormat_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/time_format/describe:
    get:
      description: ''
      summary: EntityTimeFormatDescribe_GET
      tags:
      - entity/time_format
      operationId: EntityTimeFormatDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/time_format/{id}:
    get:
      description: ''
      summary: EntityTimeFormatById_GET
      tags:
      - entity/time_format
      operationId: EntityTimeFormatById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/time_zone:
    get:
      description: ''
      summary: EntityTimeZone_GET
      tags:
      - entity/time_zone
      operationId: EntityTimeZone_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/time_zone/describe:
    get:
      description: ''
      summary: EntityTimeZoneDescribe_GET
      tags:
      - entity/time_zone
      operationId: EntityTimeZoneDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/time_zone/{id}:
    get:
      description: ''
      summary: EntityTimeZoneById_GET
      tags:
      - entity/time_zone
      operationId: EntityTimeZoneById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer:
    get:
      description: ''
      summary: EntityTrailer_GET
      tags:
      - entity/trailer
      operationId: EntityTrailer_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: EntityTrailer_POST
      tags:
      - entity/trailer
      operationId: EntityTrailer_POST
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer/describe:
    get:
      description: ''
      summary: EntityTrailerDescribe_GET
      tags:
      - entity/trailer
      operationId: EntityTrailerDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer/locate_to_yard:
    post:
      description: ''
      summary: EntityTrailerLocateToYard_POST
      tags:
      - entity/trailer
      operationId: EntityTrailerLocateToYard_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer/remove_from_yard:
    post:
      description: ''
      summary: EntityTrailerRemoveFromYard_POST
      tags:
      - entity/trailer
      operationId: EntityTrailerRemoveFromYard_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer/{id}:
    get:
      description: ''
      summary: EntityTrailerById_GET
      tags:
      - entity/trailer
      operationId: EntityTrailerById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer/{id}/locate_to_yard:
    post:
      description: ''
      summary: EntityTrailerLocateToYardById_POST
      tags:
      - entity/trailer
      operationId: EntityTrailerLocateToYardById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/trailer/{id}/remove_from_yard:
    post:
      description: ''
      summary: EntityTrailerRemoveFromYardById_POST
      tags:
      - entity/trailer
      operationId: EntityTrailerRemoveFromYardById_POST
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/uom:
    get:
      description: ''
      summary: EntityUom_GET
      tags:
      - entity/uom
      operationId: EntityUom_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/uom/describe:
    get:
      description: ''
      summary: EntityUomDescribe_GET
      tags:
      - entity/uom
      operationId: EntityUomDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/uom/{id}:
    get:
      description: ''
      summary: EntityUomById_GET
      tags:
      - entity/uom
      operationId: EntityUomById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ups_routing_code:
    get:
      description: ''
      summary: EntityUpsRoutingCode_GET
      tags:
      - entity/ups_routing_code
      operationId: EntityUpsRoutingCode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ups_routing_code/describe:
    get:
      description: ''
      summary: EntityUpsRoutingCodeDescribe_GET
      tags:
      - entity/ups_routing_code
      operationId: EntityUpsRoutingCodeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/ups_routing_code/{id}:
    get:
      description: ''
      summary: EntityUpsRoutingCodeById_GET
      tags:
      - entity/ups_routing_code
      operationId: EntityUpsRoutingCodeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user:
    get:
      description: ''
      summary: EntityUser_GET
      tags:
      - entity/user
      operationId: EntityUser_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user/describe:
    get:
      description: ''
      summary: EntityUserDescribe_GET
      tags:
      - entity/user
      operationId: EntityUserDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user/{id}:
    get:
      description: ''
      summary: EntityUserById_GET
      tags:
      - entity/user
      operationId: EntityUserById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user_company:
    get:
      description: ''
      summary: EntityUserCompany_GET
      tags:
      - entity/user_company
      operationId: EntityUserCompany_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user_company/describe:
    get:
      description: ''
      summary: EntityUserCompanyDescribe_GET
      tags:
      - entity/user_company
      operationId: EntityUserCompanyDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user_company/{id}:
    get:
      description: ''
      summary: EntityUserCompanyById_GET
      tags:
      - entity/user_company
      operationId: EntityUserCompanyById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user_facility:
    get:
      description: ''
      summary: EntityUserFacility_GET
      tags:
      - entity/user_facility
      operationId: EntityUserFacility_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user_facility/describe:
    get:
      description: ''
      summary: EntityUserFacilityDescribe_GET
      tags:
      - entity/user_facility
      operationId: EntityUserFacilityDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/user_facility/{id}:
    get:
      description: ''
      summary: EntityUserFacilityById_GET
      tags:
      - entity/user_facility
      operationId: EntityUserFacilityById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/value_type:
    get:
      description: ''
      summary: EntityValueType_GET
      tags:
      - entity/value_type
      operationId: EntityValueType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/value_type/describe:
    get:
      description: ''
      summary: EntityValueTypeDescribe_GET
      tags:
      - entity/value_type
      operationId: EntityValueTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/value_type/{id}:
    get:
      description: ''
      summary: EntityValueTypeById_GET
      tags:
      - entity/value_type
      operationId: EntityValueTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vas_execution_status:
    get:
      description: ''
      summary: EntityVasExecutionStatus_GET
      tags:
      - entity/vas_execution_status
      operationId: EntityVasExecutionStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vas_execution_status/describe:
    get:
      description: ''
      summary: EntityVasExecutionStatusDescribe_GET
      tags:
      - entity/vas_execution_status
      operationId: EntityVasExecutionStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vas_execution_status/{id}:
    get:
      description: ''
      summary: EntityVasExecutionStatusById_GET
      tags:
      - entity/vas_execution_status
      operationId: EntityVasExecutionStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vas_requirement_type:
    get:
      description: ''
      summary: EntityVasRequirementType_GET
      tags:
      - entity/vas_requirement_type
      operationId: EntityVasRequirementType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vas_requirement_type/describe:
    get:
      description: ''
      summary: EntityVasRequirementTypeDescribe_GET
      tags:
      - entity/vas_requirement_type
      operationId: EntityVasRequirementTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vas_requirement_type/{id}:
    get:
      description: ''
      summary: EntityVasRequirementTypeById_GET
      tags:
      - entity/vas_requirement_type
      operationId: EntityVasRequirementTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vendor:
    get:
      description: ''
      summary: EntityVendor_GET
      tags:
      - entity/vendor
      operationId: EntityVendor_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vendor/{id}:
    get:
      description: ''
      summary: EntityVendorById_GET
      tags:
      - entity/vendor
      operationId: EntityVendorById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityVendorById_PATCH
      tags:
      - entity/vendor
      operationId: EntityVendorById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/vendor/describe:
    get:
      description: ''
      summary: EntityVendorDescribe_GET
      tags:
      - entity/vendor
      operationId: EntityVendorDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/verification_entity:
    get:
      description: ''
      summary: EntityVerificationEntity_GET
      tags:
      - entity/verification_entity
      operationId: EntityVerificationEntity_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/verification_entity/describe:
    get:
      description: ''
      summary: EntityVerificationEntityDescribe_GET
      tags:
      - entity/verification_entity
      operationId: EntityVerificationEntityDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/verification_entity/{id}:
    get:
      description: ''
      summary: EntityVerificationEntityById_GET
      tags:
      - entity/verification_entity
      operationId: EntityVerificationEntityById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/verification_type:
    get:
      description: ''
      summary: EntityVerificationType_GET
      tags:
      - entity/verification_type
      operationId: EntityVerificationType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/verification_type/describe:
    get:
      description: ''
      summary: EntityVerificationTypeDescribe_GET
      tags:
      - entity/verification_type
      operationId: EntityVerificationTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/verification_type/{id}:
    get:
      description: ''
      summary: EntityVerificationTypeById_GET
      tags:
      - entity/verification_type
      operationId: EntityVerificationTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave:
    get:
      description: ''
      summary: EntityWave_GET
      tags:
      - entity/wave
      operationId: EntityWave_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave/describe:
    get:
      description: ''
      summary: EntityWaveDescribe_GET
      tags:
      - entity/wave
      operationId: EntityWaveDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave/{id}:
    get:
      description: ''
      summary: EntityWaveById_GET
      tags:
      - entity/wave
      operationId: EntityWaveById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_mhe_status:
    get:
      description: ''
      summary: EntityWaveMheStatus_GET
      tags:
      - entity/wave_mhe_status
      operationId: EntityWaveMheStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_mhe_status/describe:
    get:
      description: ''
      summary: EntityWaveMheStatusDescribe_GET
      tags:
      - entity/wave_mhe_status
      operationId: EntityWaveMheStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_mhe_status/{id}:
    get:
      description: ''
      summary: EntityWaveMheStatusById_GET
      tags:
      - entity/wave_mhe_status
      operationId: EntityWaveMheStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_stage:
    get:
      description: ''
      summary: EntityWaveStage_GET
      tags:
      - entity/wave_stage
      operationId: EntityWaveStage_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_stage/describe:
    get:
      description: ''
      summary: EntityWaveStageDescribe_GET
      tags:
      - entity/wave_stage
      operationId: EntityWaveStageDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_stage/{id}:
    get:
      description: ''
      summary: EntityWaveStageById_GET
      tags:
      - entity/wave_stage
      operationId: EntityWaveStageById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_status:
    get:
      description: ''
      summary: EntityWaveStatus_GET
      tags:
      - entity/wave_status
      operationId: EntityWaveStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_status/describe:
    get:
      description: ''
      summary: EntityWaveStatusDescribe_GET
      tags:
      - entity/wave_status
      operationId: EntityWaveStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_status/{id}:
    get:
      description: ''
      summary: EntityWaveStatusById_GET
      tags:
      - entity/wave_status
      operationId: EntityWaveStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_template:
    get:
      description: ''
      summary: EntityWaveTemplate_GET
      tags:
      - entity/wave_template
      operationId: EntityWaveTemplate_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_template/describe:
    get:
      description: ''
      summary: EntityWaveTemplateDescribe_GET
      tags:
      - entity/wave_template
      operationId: EntityWaveTemplateDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_template/{id}:
    get:
      description: ''
      summary: EntityWaveTemplateById_GET
      tags:
      - entity/wave_template
      operationId: EntityWaveTemplateById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_template_status:
    get:
      description: ''
      summary: EntityWaveTemplateStatus_GET
      tags:
      - entity/wave_template_status
      operationId: EntityWaveTemplateStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_template_status/describe:
    get:
      description: ''
      summary: EntityWaveTemplateStatusDescribe_GET
      tags:
      - entity/wave_template_status
      operationId: EntityWaveTemplateStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_template_status/{id}:
    get:
      description: ''
      summary: EntityWaveTemplateStatusById_GET
      tags:
      - entity/wave_template_status
      operationId: EntityWaveTemplateStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_type:
    get:
      description: ''
      summary: EntityWaveType_GET
      tags:
      - entity/wave_type
      operationId: EntityWaveType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_type/describe:
    get:
      description: ''
      summary: EntityWaveTypeDescribe_GET
      tags:
      - entity/wave_type
      operationId: EntityWaveTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wave_type/{id}:
    get:
      description: ''
      summary: EntityWaveTypeById_GET
      tags:
      - entity/wave_type
      operationId: EntityWaveTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wms_activity_code:
    get:
      description: ''
      summary: EntityWmsActivityCode_GET
      tags:
      - entity/wms_activity_code
      operationId: EntityWmsActivityCode_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wms_activity_code/describe:
    get:
      description: ''
      summary: EntityWmsActivityCodeDescribe_GET
      tags:
      - entity/wms_activity_code
      operationId: EntityWmsActivityCodeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wms_activity_code/{id}:
    get:
      description: ''
      summary: EntityWmsActivityCodeById_GET
      tags:
      - entity/wms_activity_code
      operationId: EntityWmsActivityCodeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wms_activity_status:
    get:
      description: ''
      summary: EntityWmsActivityStatus_GET
      tags:
      - entity/wms_activity_status
      operationId: EntityWmsActivityStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wms_activity_status/describe:
    get:
      description: ''
      summary: EntityWmsActivityStatusDescribe_GET
      tags:
      - entity/wms_activity_status
      operationId: EntityWmsActivityStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/wms_activity_status/{id}:
    get:
      description: ''
      summary: EntityWmsActivityStatusById_GET
      tags:
      - entity/wms_activity_status
      operationId: EntityWmsActivityStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_area_activity_type:
    get:
      description: ''
      summary: EntityWorkAreaActivityType_GET
      tags:
      - entity/work_area_activity_type
      operationId: EntityWorkAreaActivityType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_area_activity_type/describe:
    get:
      description: ''
      summary: EntityWorkAreaActivityTypeDescribe_GET
      tags:
      - entity/work_area_activity_type
      operationId: EntityWorkAreaActivityTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_area_activity_type/{id}:
    get:
      description: ''
      summary: EntityWorkAreaActivityTypeById_GET
      tags:
      - entity/work_area_activity_type
      operationId: EntityWorkAreaActivityTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_activity_type:
    get:
      description: ''
      summary: EntityWorkOrderActivityType_GET
      tags:
      - entity/work_order_activity_type
      operationId: EntityWorkOrderActivityType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_activity_type/describe:
    get:
      description: ''
      summary: EntityWorkOrderActivityTypeDescribe_GET
      tags:
      - entity/work_order_activity_type
      operationId: EntityWorkOrderActivityTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_activity_type/{id}:
    get:
      description: ''
      summary: EntityWorkOrderActivityTypeById_GET
      tags:
      - entity/work_order_activity_type
      operationId: EntityWorkOrderActivityTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_component:
    get:
      description: ''
      summary: EntityWorkOrderComponent_GET
      tags:
      - entity/work_order_component
      operationId: EntityWorkOrderComponent_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_component/describe:
    get:
      description: ''
      summary: EntityWorkOrderComponentDescribe_GET
      tags:
      - entity/work_order_component
      operationId: EntityWorkOrderComponentDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_component/{id}:
    get:
      description: ''
      summary: EntityWorkOrderComponentById_GET
      tags:
      - entity/work_order_component
      operationId: EntityWorkOrderComponentById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_hdr:
    get:
      description: ''
      summary: EntityWorkOrderHdr_GET
      tags:
      - entity/work_order_hdr
      operationId: EntityWorkOrderHdr_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_hdr/describe:
    get:
      description: ''
      summary: EntityWorkOrderHdrDescribe_GET
      tags:
      - entity/work_order_hdr
      operationId: EntityWorkOrderHdrDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_hdr/{id}:
    get:
      description: ''
      summary: EntityWorkOrderHdrById_GET
      tags:
      - entity/work_order_hdr
      operationId: EntityWorkOrderHdrById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityWorkOrderHdrById_PATCH
      tags:
      - entity/work_order_hdr
      operationId: EntityWorkOrderHdrById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_kit:
    get:
      description: ''
      summary: EntityWorkOrderKit_GET
      tags:
      - entity/work_order_kit
      operationId: EntityWorkOrderKit_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_kit/describe:
    get:
      description: ''
      summary: EntityWorkOrderKitDescribe_GET
      tags:
      - entity/work_order_kit
      operationId: EntityWorkOrderKitDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_kit/{id}:
    get:
      description: ''
      summary: EntityWorkOrderKitById_GET
      tags:
      - entity/work_order_kit
      operationId: EntityWorkOrderKitById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    patch:
      description: ''
      summary: EntityWorkOrderKitById_PATCH
      tags:
      - entity/work_order_kit
      operationId: EntityWorkOrderKitById_PATCH
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_status:
    get:
      description: ''
      summary: EntityWorkOrderStatus_GET
      tags:
      - entity/work_order_status
      operationId: EntityWorkOrderStatus_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_status/describe:
    get:
      description: ''
      summary: EntityWorkOrderStatusDescribe_GET
      tags:
      - entity/work_order_status
      operationId: EntityWorkOrderStatusDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_status/{id}:
    get:
      description: ''
      summary: EntityWorkOrderStatusById_GET
      tags:
      - entity/work_order_status
      operationId: EntityWorkOrderStatusById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_type:
    get:
      description: ''
      summary: EntityWorkOrderType_GET
      tags:
      - entity/work_order_type
      operationId: EntityWorkOrderType_GET
      parameters:
      - name: fields
        in: query
        type: string
        description: ''
      - name: ordering
        in: query
        type: string
        description: ''
      - name: page_mode
        in: query
        enum:
        - paged
        - sequenced
        default: paged
        type: string
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_type/describe:
    get:
      description: ''
      summary: EntityWorkOrderTypeDescribe_GET
      tags:
      - entity/work_order_type
      operationId: EntityWorkOrderTypeDescribe_GET
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /entity/work_order_type/{id}:
    get:
      description: ''
      summary: EntityWorkOrderTypeById_GET
      tags:
      - entity/work_order_type
      operationId: EntityWorkOrderTypeById_GET
      parameters:
      - name: id
        in: path
        required: true
        type: number
        description: ''
      - name: fields
        in: query
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /pick_pack/close_lpn:
    post:
      description: ''
      summary: PickPackCloseLpn_POST
      tags:
      - pick_pack
      operationId: PickPackCloseLpn_POST
      parameters:
      - name: async_flg
        in: query
        type: boolean
        description: ''
      - name: close_container_status
        in: query
        type: string
        description: ''
      - name: company_id
        in: query
        type: number
        description: ''
      - name: company_id__code
        in: query
        type: string
        description: ''
      - name: facility_id
        in: query
        type: number
        description: ''
      - name: facility_id__code
        in: query
        type: string
        description: ''
      - name: reason_code
        in: query
        type: string
        description: ''
      - name: short_on_close_flg
        in: query
        type: boolean
        description: ''
      - name: to_container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: update_inventory_on_short_flg
        in: query
        type: boolean
        description: ''
      - name: to_container__code
        in: query
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /pick_pack/pick_confirm:
    post:
      description: ''
      summary: PickPackPickConfirm_POST
      tags:
      - pick_pack
      operationId: PickPackPickConfirm_POST
      parameters:
      - name: allocation_uom
        in: query
        type: string
        description: ''
      - name: async_flg
        in: query
        required: true
        type: boolean
        description: ''
      - name: batch_nbr
        in: query
        type: string
        description: ''
      - name: close_container_status
        in: query
        type: string
        description: ''
      - name: company_id
        in: query
        type: number
        description: ''
      - name: company_id__code
        in: query
        type: string
        description: ''
      - name: facility_id
        in: query
        type: number
        description: ''
      - name: facility_id__code
        in: query
        type: string
        description: ''
      - name: from_container_nbr
        in: query
        type: string
        description: ''
      - name: item_alternate_code
        in: query
        type: string
        description: ''
      - name: item_barcode
        in: query
        type: string
        description: ''
      - name: mhe_mode_flg
        in: query
        required: true
        type: boolean
        description: ''
      - name: mhe_system_code
        in: query
        type: string
        description: ''
      - name: order_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: pick_location
        in: query
        type: string
        description: ''
      - name: qty
        in: query
        type: number
        description: ''
      - name: reason_code
        in: query
        type: string
        description: ''
      - name: short_flg
        in: query
        type: boolean
        description: ''
      - name: short_on_close_flg
        in: query
        type: boolean
        description: ''
      - name: to_container_nbr
        in: query
        type: string
        description: ''
      - name: uom_qty
        in: query
        type: string
        description: ''
      - name: update_inventory_on_short_flg
        in: query
        type: boolean
        description: ''
      - name: wave_nbr
        in: query
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /pick_pack/wave_complete:
    post:
      description: ''
      summary: PickPackWaveComplete_POST
      tags:
      - pick_pack
      operationId: PickPackWaveComplete_POST
      parameters:
      - name: async_flg
        in: query
        type: boolean
        description: ''
      - name: close_container_status
        in: query
        type: string
        description: ''
      - name: company_id
        in: query
        type: number
        description: ''
      - name: company_id__code
        in: query
        type: string
        description: ''
      - name: facility_id
        in: query
        type: number
        description: ''
      - name: facility_id__code
        in: query
        type: string
        description: ''
      - name: mhe_system_code
        in: query
        type: string
        description: ''
      - name: reason_code
        in: query
        type: string
        description: ''
      - name: update_inventory_on_short_flg
        in: query
        type: boolean
        description: ''
      - name: wave_nbr
        in: query
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /print/label/ib_container:
    get:
      description: ''
      summary: PrintLabelIbContainer_GET
      tags:
      - print
      operationId: PrintLabelIbContainer_GET
      parameters:
      - name: company_id
        in: query
        required: true
        type: number
        description: ''
      - name: container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: id
        in: query
        required: true
        type: number
        description: ''
      - name: label_designer_code
        in: query
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: PrintLabelIbContainer_POST
      tags:
      - print
      operationId: PrintLabelIbContainer_POST
      parameters:
      - name: company_id
        in: query
        required: true
        type: number
        description: ''
      - name: container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: id
        in: query
        required: true
        type: number
        description: ''
      - name: label_designer_code
        in: query
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /print/label/pallet:
    get:
      description: ''
      summary: PrintLabelPallet_GET
      tags:
      - print
      operationId: PrintLabelPallet_GET
      parameters:
      - name: company_id
        in: query
        required: true
        type: number
        description: ''
      - name: container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: id
        in: query
        required: true
        type: number
        description: ''
      - name: label_designer_code
        in: query
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: PrintLabelPallet_POST
      tags:
      - print
      operationId: PrintLabelPallet_POST
      parameters:
      - name: company_id
        in: query
        required: true
        type: number
        description: ''
      - name: container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: id
        in: query
        required: true
        type: number
        description: ''
      - name: label_designer_code
        in: query
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /print/label/shipping:
    get:
      description: ''
      summary: PrintLabelShipping_GET
      tags:
      - print
      operationId: PrintLabelShipping_GET
      parameters:
      - name: company_id
        in: query
        required: true
        type: number
        description: ''
      - name: container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: id
        in: query
        required: true
        type: number
        description: ''
      - name: label_designer_code
        in: query
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
    post:
      description: ''
      summary: PrintLabelShipping_POST
      tags:
      - print
      operationId: PrintLabelShipping_POST
      parameters:
      - name: company_id
        in: query
        required: true
        type: number
        description: ''
      - name: container_nbr
        in: query
        required: true
        type: string
        description: ''
      - name: facility_id
        in: query
        required: true
        type: number
        description: ''
      - name: id
        in: query
        required: true
        type: number
        description: ''
      - name: label_designer_code
        in: query
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /replenishment/replenish_to_active:
    post:
      description: ''
      summary: ReplenishmentReplenishToActive_POST
      tags:
      - replenishment
      operationId: ReplenishmentReplenishToActive_POST
      responses:
        201:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
  /report/custom_inventory_summary:
    get:
      description: ''
      summary: ReportCustomInventorySummary_GET
      tags:
      - report
      operationId: ReportCustomInventorySummary_GET
      parameters:
      - name: company_id
        in: query
        type: number
        description: ''
      - name: company_id__code
        in: query
        type: string
        description: ''
      - name: facility_id
        in: query
        type: number
        description: ''
      - name: facility_id__code
        in: query
        type: string
        description: ''
      - name: item_code
        in: query
        required: true
        type: string
        description: ''
      - name: write_header_line_flg
        in: query
        type: boolean
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: object
          examples:
            application/json: {}
            application/xml: ''
tags:
- name: entity/action_code
  description: ''
- name: entity/active_location
  description: ''
- name: entity/allocation
  description: ''
- name: entity/allocation_distribution_mode
  description: ''
- name: entity/allocation_status
  description: ''
- name: entity/answer_input_type
  description: ''
- name: entity/appointment
  description: ''
- name: entity/appointment_status
  description: ''
- name: entity/asset_status
  description: ''
- name: entity/audit_mode
  description: ''
- name: entity/audit_status
  description: ''
- name: entity/audit_type
  description: ''
- name: entity/barcode_type
  description: ''
- name: entity/barcode_type_dtl
  description: ''
- name: entity/batch_number
  description: ''
- name: entity/break_by_modifier
  description: ''
- name: entity/bridge_status
  description: ''
- name: entity/capacity_check_method
  description: ''
- name: entity/carrier_integration_type
  description: ''
- name: entity/carrier_lpn
  description: ''
- name: entity/carrier_status
  description: ''
- name: entity/carrier_type
  description: ''
- name: entity/carrier_webservice_label_type
  description: ''
- name: entity/cc_adjustment_status
  description: ''
- name: entity/cc_creation_type
  description: ''
- name: entity/cc_trigger
  description: ''
- name: entity/cc_warning
  description: ''
- name: entity/check_digit_method
  description: ''
- name: entity/column_order_type
  description: ''
- name: entity/company
  description: ''
- name: entity/company_parm
  description: ''
- name: entity/company_type
  description: ''
- name: entity/condition_type
  description: ''
- name: entity/contact
  description: ''
- name: entity/container
  description: ''
- name: entity/container_status
  description: ''
- name: entity/container_vas_status
  description: ''
- name: entity/cubing_mode
  description: ''
- name: entity/date_format
  description: ''
- name: entity/destination_location_type
  description: ''
- name: entity/dock
  description: ''
- name: entity/dock_status
  description: ''
- name: entity/dock_type
  description: ''
- name: entity/entity
  description: ''
- name: entity/entity_change_action
  description: ''
- name: entity/facility
  description: ''
- name: entity/facility_parm
  description: ''
- name: entity/facility_type
  description: ''
- name: entity/form_type
  description: ''
- name: entity/hazmat_regulation_type
  description: ''
- name: entity/hire_type
  description: ''
- name: entity/ib_shipment
  description: ''
- name: entity/ib_shipment_dtl
  description: ''
- name: entity/ib_shipment_serial_nbr
  description: ''
- name: entity/ib_shipment_status
  description: ''
- name: entity/iblpn
  description: ''
- name: entity/interface_format_type
  description: ''
- name: entity/interface_protocol
  description: ''
- name: entity/interface_type
  description: ''
- name: entity/inventory
  description: ''
- name: entity/inventory_attribute
  description: ''
- name: entity/inventory_lock
  description: ''
- name: entity/inventory_status
  description: ''
- name: entity/invoice_status
  description: ''
- name: entity/item
  description: ''
- name: entity/item_assignment_type
  description: ''
- name: entity/item_characteristics
  description: ''
- name: entity/item_metrics
  description: ''
- name: entity/label_type
  description: ''
- name: entity/language
  description: ''
- name: entity/lgfapi_archive_level
  description: ''
- name: entity/load
  description: ''
- name: entity/load_status
  description: ''
- name: entity/location
  description: ''
- name: entity/location_size_type
  description: ''
- name: entity/location_type
  description: ''
- name: entity/mhe_destination_code
  description: ''
- name: entity/mhe_msg_type
  description: ''
- name: entity/mhe_route_config_function
  description: ''
- name: entity/mhe_trigger
  description: ''
- name: entity/mhe_type
  description: ''
- name: entity/multi_field_barcode_delimiter
  description: ''
- name: entity/ob_stop
  description: ''
- name: entity/ob_stop_dtl
  description: ''
- name: entity/oblpn
  description: ''
- name: entity/oblpn_printing_validation
  description: ''
- name: entity/order_dtl
  description: ''
- name: entity/order_hdr
  description: ''
- name: entity/order_instruction
  description: ''
- name: entity/order_instruction_level
  description: ''
- name: entity/order_instruction_type
  description: ''
- name: entity/order_lock
  description: ''
- name: entity/order_status
  description: ''
- name: entity/order_type
  description: ''
- name: entity/order_validation_mode
  description: ''
- name: entity/pallet
  description: ''
- name: entity/pallet_activity
  description: ''
- name: entity/pallet_status
  description: ''
- name: entity/parcel_manifest
  description: ''
- name: entity/parcel_manifest_status
  description: ''
- name: entity/parcel_shipment
  description: ''
- name: entity/parcel_shipment_dtl
  description: ''
- name: entity/parcel_transaction_status
  description: ''
- name: entity/parm_type
  description: ''
- name: entity/payment_method
  description: ''
- name: entity/printer
  description: ''
- name: entity/printer_protocol
  description: ''
- name: entity/printer_type
  description: ''
- name: entity/process_monitor_status
  description: ''
- name: entity/property_prompt_mode
  description: ''
- name: entity/purchase_order_dtl
  description: ''
- name: entity/purchase_order_hdr
  description: ''
- name: entity/purchase_order_status
  description: ''
- name: entity/putaway_method
  description: ''
- name: entity/putaway_priority
  description: ''
- name: entity/putaway_search_mode
  description: ''
- name: entity/putaway_type
  description: ''
- name: entity/putaway_type_calc_rule
  description: ''
- name: entity/qc_status
  description: ''
- name: entity/reason_code_type
  description: ''
- name: entity/receipt_validation_type
  description: ''
- name: entity/record_status
  description: ''
- name: entity/replenishment_trigger_mode
  description: ''
- name: entity/replenishment_zone
  description: ''
- name: entity/report_sub_type
  description: ''
- name: entity/report_type
  description: ''
- name: entity/reserve_location
  description: ''
- name: entity/rf_key_code
  description: ''
- name: entity/route_hdr_status
  description: ''
- name: entity/routing_mode
  description: ''
- name: entity/screen_type
  description: ''
- name: entity/selection_type
  description: ''
- name: entity/seq_counter
  description: ''
- name: entity/serial_nbr
  description: ''
- name: entity/serial_nbr_action_code
  description: ''
- name: entity/serial_nbr_inventory
  description: ''
- name: entity/shift
  description: ''
- name: entity/shipment_verif_orderdtl_cancel_mode
  description: ''
- name: entity/shipping_blocked_selection_criteria
  description: ''
- name: entity/sql_operator
  description: ''
- name: entity/sql_selection
  description: ''
- name: entity/stage_status
  description: ''
- name: entity/standard_check_digit_method
  description: ''
- name: entity/stop_status
  description: ''
- name: entity/task
  description: ''
- name: entity/task_activity
  description: ''
- name: entity/task_status
  description: ''
- name: entity/template_type
  description: ''
- name: entity/time_format
  description: ''
- name: entity/time_zone
  description: ''
- name: entity/trailer
  description: ''
- name: entity/uom
  description: ''
- name: entity/ups_routing_code
  description: ''
- name: entity/user
  description: ''
- name: entity/user_company
  description: ''
- name: entity/user_facility
  description: ''
- name: entity/value_type
  description: ''
- name: entity/vas_execution_status
  description: ''
- name: entity/vas_requirement_type
  description: ''
- name: entity/vendor
  description: ''
- name: entity/verification_entity
  description: ''
- name: entity/verification_type
  description: ''
- name: entity/wave
  description: ''
- name: entity/wave_mhe_status
  description: ''
- name: entity/wave_stage
  description: ''
- name: entity/wave_status
  description: ''
- name: entity/wave_template
  description: ''
- name: entity/wave_template_status
  description: ''
- name: entity/wave_type
  description: ''
- name: entity/wms_activity_code
  description: ''
- name: entity/wms_activity_status
  description: ''
- name: entity/work_area_activity_type
  description: ''
- name: entity/work_order_activity_type
  description: ''
- name: entity/work_order_component
  description: ''
- name: entity/work_order_hdr
  description: ''
- name: entity/work_order_kit
  description: ''
- name: entity/work_order_status
  description: ''
- name: entity/work_order_type
  description: ''
- name: pick_pack
  description: ''
- name: print
  description: ''
- name: replenishment
  description: ''
- name: report
  description: ''
securityDefinitions:
  basic:
    type: basic
  oauth2:
    type: oauth2
    flow: application
    tokenUrl: 'https://host/'
    scopes: {}