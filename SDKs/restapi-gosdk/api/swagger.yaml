---
swagger: "2.0"
info:
  description: "This is a sample definition of the Oracle WMS Cloud REST API.\n\n\
    The views expressed here are my own and do not necessarily reflect the views of\
    \ Oracle."
  version: "1.0"
  title: "REST API"
host: "demo.wms.ocs.oraclecloud.com"
basePath: "/demo_a9/wms/lgfapi/v10"
tags:
- name: "entity/action_code"
  description: ""
- name: "entity/active_location"
  description: ""
- name: "entity/allocation"
  description: ""
- name: "entity/allocation_distribution_mode"
  description: ""
- name: "entity/allocation_status"
  description: ""
- name: "entity/answer_input_type"
  description: ""
- name: "entity/appointment"
  description: ""
- name: "entity/appointment_status"
  description: ""
- name: "entity/asset_status"
  description: ""
- name: "entity/audit_mode"
  description: ""
- name: "entity/audit_status"
  description: ""
- name: "entity/audit_type"
  description: ""
- name: "entity/barcode_type"
  description: ""
- name: "entity/barcode_type_dtl"
  description: ""
- name: "entity/batch_number"
  description: ""
- name: "entity/break_by_modifier"
  description: ""
- name: "entity/bridge_status"
  description: ""
- name: "entity/capacity_check_method"
  description: ""
- name: "entity/carrier_integration_type"
  description: ""
- name: "entity/carrier_lpn"
  description: ""
- name: "entity/carrier_status"
  description: ""
- name: "entity/carrier_type"
  description: ""
- name: "entity/carrier_webservice_label_type"
  description: ""
- name: "entity/cc_adjustment_status"
  description: ""
- name: "entity/cc_creation_type"
  description: ""
- name: "entity/cc_trigger"
  description: ""
- name: "entity/cc_warning"
  description: ""
- name: "entity/check_digit_method"
  description: ""
- name: "entity/column_order_type"
  description: ""
- name: "entity/company"
  description: ""
- name: "entity/company_parm"
  description: ""
- name: "entity/company_type"
  description: ""
- name: "entity/condition_type"
  description: ""
- name: "entity/contact"
  description: ""
- name: "entity/container"
  description: ""
- name: "entity/container_status"
  description: ""
- name: "entity/container_vas_status"
  description: ""
- name: "entity/cubing_mode"
  description: ""
- name: "entity/date_format"
  description: ""
- name: "entity/destination_location_type"
  description: ""
- name: "entity/dock"
  description: ""
- name: "entity/dock_status"
  description: ""
- name: "entity/dock_type"
  description: ""
- name: "entity/entity"
  description: ""
- name: "entity/entity_change_action"
  description: ""
- name: "entity/facility"
  description: ""
- name: "entity/facility_parm"
  description: ""
- name: "entity/facility_type"
  description: ""
- name: "entity/form_type"
  description: ""
- name: "entity/hazmat_regulation_type"
  description: ""
- name: "entity/hire_type"
  description: ""
- name: "entity/ib_shipment"
  description: ""
- name: "entity/ib_shipment_dtl"
  description: ""
- name: "entity/ib_shipment_serial_nbr"
  description: ""
- name: "entity/ib_shipment_status"
  description: ""
- name: "entity/iblpn"
  description: ""
- name: "entity/interface_format_type"
  description: ""
- name: "entity/interface_protocol"
  description: ""
- name: "entity/interface_type"
  description: ""
- name: "entity/inventory"
  description: ""
- name: "entity/inventory_attribute"
  description: ""
- name: "entity/inventory_lock"
  description: ""
- name: "entity/inventory_status"
  description: ""
- name: "entity/invoice_status"
  description: ""
- name: "entity/item"
  description: ""
- name: "entity/item_assignment_type"
  description: ""
- name: "entity/item_characteristics"
  description: ""
- name: "entity/item_metrics"
  description: ""
- name: "entity/label_type"
  description: ""
- name: "entity/language"
  description: ""
- name: "entity/lgfapi_archive_level"
  description: ""
- name: "entity/load"
  description: ""
- name: "entity/load_status"
  description: ""
- name: "entity/location"
  description: ""
- name: "entity/location_size_type"
  description: ""
- name: "entity/location_type"
  description: ""
- name: "entity/mhe_destination_code"
  description: ""
- name: "entity/mhe_msg_type"
  description: ""
- name: "entity/mhe_route_config_function"
  description: ""
- name: "entity/mhe_trigger"
  description: ""
- name: "entity/mhe_type"
  description: ""
- name: "entity/multi_field_barcode_delimiter"
  description: ""
- name: "entity/ob_stop"
  description: ""
- name: "entity/ob_stop_dtl"
  description: ""
- name: "entity/oblpn"
  description: ""
- name: "entity/oblpn_printing_validation"
  description: ""
- name: "entity/order_dtl"
  description: ""
- name: "entity/order_hdr"
  description: ""
- name: "entity/order_instruction"
  description: ""
- name: "entity/order_instruction_level"
  description: ""
- name: "entity/order_instruction_type"
  description: ""
- name: "entity/order_lock"
  description: ""
- name: "entity/order_status"
  description: ""
- name: "entity/order_type"
  description: ""
- name: "entity/order_validation_mode"
  description: ""
- name: "entity/pallet"
  description: ""
- name: "entity/pallet_activity"
  description: ""
- name: "entity/pallet_status"
  description: ""
- name: "entity/parcel_manifest"
  description: ""
- name: "entity/parcel_manifest_status"
  description: ""
- name: "entity/parcel_shipment"
  description: ""
- name: "entity/parcel_shipment_dtl"
  description: ""
- name: "entity/parcel_transaction_status"
  description: ""
- name: "entity/parm_type"
  description: ""
- name: "entity/payment_method"
  description: ""
- name: "entity/printer"
  description: ""
- name: "entity/printer_protocol"
  description: ""
- name: "entity/printer_type"
  description: ""
- name: "entity/process_monitor_status"
  description: ""
- name: "entity/property_prompt_mode"
  description: ""
- name: "entity/purchase_order_dtl"
  description: ""
- name: "entity/purchase_order_hdr"
  description: ""
- name: "entity/purchase_order_status"
  description: ""
- name: "entity/putaway_method"
  description: ""
- name: "entity/putaway_priority"
  description: ""
- name: "entity/putaway_search_mode"
  description: ""
- name: "entity/putaway_type"
  description: ""
- name: "entity/putaway_type_calc_rule"
  description: ""
- name: "entity/qc_status"
  description: ""
- name: "entity/reason_code_type"
  description: ""
- name: "entity/receipt_validation_type"
  description: ""
- name: "entity/record_status"
  description: ""
- name: "entity/replenishment_trigger_mode"
  description: ""
- name: "entity/replenishment_zone"
  description: ""
- name: "entity/report_sub_type"
  description: ""
- name: "entity/report_type"
  description: ""
- name: "entity/reserve_location"
  description: ""
- name: "entity/rf_key_code"
  description: ""
- name: "entity/route_hdr_status"
  description: ""
- name: "entity/routing_mode"
  description: ""
- name: "entity/screen_type"
  description: ""
- name: "entity/selection_type"
  description: ""
- name: "entity/seq_counter"
  description: ""
- name: "entity/serial_nbr"
  description: ""
- name: "entity/serial_nbr_action_code"
  description: ""
- name: "entity/serial_nbr_inventory"
  description: ""
- name: "entity/shift"
  description: ""
- name: "entity/shipment_verif_orderdtl_cancel_mode"
  description: ""
- name: "entity/shipping_blocked_selection_criteria"
  description: ""
- name: "entity/sql_operator"
  description: ""
- name: "entity/sql_selection"
  description: ""
- name: "entity/stage_status"
  description: ""
- name: "entity/standard_check_digit_method"
  description: ""
- name: "entity/stop_status"
  description: ""
- name: "entity/task"
  description: ""
- name: "entity/task_activity"
  description: ""
- name: "entity/task_status"
  description: ""
- name: "entity/template_type"
  description: ""
- name: "entity/time_format"
  description: ""
- name: "entity/time_zone"
  description: ""
- name: "entity/trailer"
  description: ""
- name: "entity/uom"
  description: ""
- name: "entity/ups_routing_code"
  description: ""
- name: "entity/user"
  description: ""
- name: "entity/user_company"
  description: ""
- name: "entity/user_facility"
  description: ""
- name: "entity/value_type"
  description: ""
- name: "entity/vas_execution_status"
  description: ""
- name: "entity/vas_requirement_type"
  description: ""
- name: "entity/vendor"
  description: ""
- name: "entity/verification_entity"
  description: ""
- name: "entity/verification_type"
  description: ""
- name: "entity/wave"
  description: ""
- name: "entity/wave_mhe_status"
  description: ""
- name: "entity/wave_stage"
  description: ""
- name: "entity/wave_status"
  description: ""
- name: "entity/wave_template"
  description: ""
- name: "entity/wave_template_status"
  description: ""
- name: "entity/wave_type"
  description: ""
- name: "entity/wms_activity_code"
  description: ""
- name: "entity/wms_activity_status"
  description: ""
- name: "entity/work_area_activity_type"
  description: ""
- name: "entity/work_order_activity_type"
  description: ""
- name: "entity/work_order_component"
  description: ""
- name: "entity/work_order_hdr"
  description: ""
- name: "entity/work_order_kit"
  description: ""
- name: "entity/work_order_status"
  description: ""
- name: "entity/work_order_type"
  description: ""
- name: "pick_pack"
  description: ""
- name: "print"
  description: ""
- name: "replenishment"
  description: ""
- name: "report"
  description: ""
schemes:
- "https"
consumes:
- "application/json"
- "application/xml"
produces:
- "application/json"
- "application/xml"
security:
- basic: []
- oauth2: []
paths:
  /entity/action_code:
    get:
      tags:
      - "entity/action_code"
      summary: "EntityActionCode_GET"
      description: ""
      operationId: "EntityActionCode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/action_code/describe:
    get:
      tags:
      - "entity/action_code"
      summary: "EntityActionCodeDescribe_GET"
      description: ""
      operationId: "EntityActionCodeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/action_code/{id}:
    get:
      tags:
      - "entity/action_code"
      summary: "EntityActionCodeById_GET"
      description: ""
      operationId: "EntityActionCodeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/active_location:
    get:
      tags:
      - "entity/active_location"
      summary: "EntityActiveLocation_GET"
      description: ""
      operationId: "EntityActiveLocation_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/active_location/describe:
    get:
      tags:
      - "entity/active_location"
      summary: "EntityActiveLocationDescribe_GET"
      description: ""
      operationId: "EntityActiveLocationDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/active_location/{id}:
    get:
      tags:
      - "entity/active_location"
      summary: "EntityActiveLocationById_GET"
      description: ""
      operationId: "EntityActiveLocationById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/active_location"
      summary: "EntityActiveLocationById_PATCH"
      description: ""
      operationId: "EntityActiveLocationById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation:
    get:
      tags:
      - "entity/allocation"
      summary: "EntityAllocation_GET"
      description: ""
      operationId: "EntityAllocation_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation/describe:
    get:
      tags:
      - "entity/allocation"
      summary: "EntityAllocationDescribe_GET"
      description: ""
      operationId: "EntityAllocationDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation/{id}:
    get:
      tags:
      - "entity/allocation"
      summary: "EntityAllocationById_GET"
      description: ""
      operationId: "EntityAllocationById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation_distribution_mode:
    get:
      tags:
      - "entity/allocation_distribution_mode"
      summary: "EntityAllocationDistributionMode_GET"
      description: ""
      operationId: "EntityAllocationDistributionMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation_distribution_mode/describe:
    get:
      tags:
      - "entity/allocation_distribution_mode"
      summary: "EntityAllocationDistributionModeDescribe_GET"
      description: ""
      operationId: "EntityAllocationDistributionModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation_distribution_mode/{id}:
    get:
      tags:
      - "entity/allocation_distribution_mode"
      summary: "EntityAllocationDistributionModeById_GET"
      description: ""
      operationId: "EntityAllocationDistributionModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation_status:
    get:
      tags:
      - "entity/allocation_status"
      summary: "EntityAllocationStatus_GET"
      description: ""
      operationId: "EntityAllocationStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation_status/describe:
    get:
      tags:
      - "entity/allocation_status"
      summary: "EntityAllocationStatusDescribe_GET"
      description: ""
      operationId: "EntityAllocationStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/allocation_status/{id}:
    get:
      tags:
      - "entity/allocation_status"
      summary: "EntityAllocationStatusById_GET"
      description: ""
      operationId: "EntityAllocationStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/answer_input_type:
    get:
      tags:
      - "entity/answer_input_type"
      summary: "EntityAnswerInputType_GET"
      description: ""
      operationId: "EntityAnswerInputType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/answer_input_type/describe:
    get:
      tags:
      - "entity/answer_input_type"
      summary: "EntityAnswerInputTypeDescribe_GET"
      description: ""
      operationId: "EntityAnswerInputTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/answer_input_type/{id}:
    get:
      tags:
      - "entity/answer_input_type"
      summary: "EntityAnswerInputTypeById_GET"
      description: ""
      operationId: "EntityAnswerInputTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/appointment:
    get:
      tags:
      - "entity/appointment"
      summary: "EntityAppointment_GET"
      description: ""
      operationId: "EntityAppointment_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/appointment/describe:
    get:
      tags:
      - "entity/appointment"
      summary: "EntityAppointmentDescribe_GET"
      description: ""
      operationId: "EntityAppointmentDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/appointment{id}:
    get:
      tags:
      - "entity/appointment"
      summary: "EntityAppointmentById_GET"
      description: ""
      operationId: "EntityAppointmentById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/appointment"
      summary: "EntityAppointmentById_PATCH"
      description: ""
      operationId: "EntityAppointmentById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/appointment_status:
    get:
      tags:
      - "entity/appointment_status"
      summary: "EntityAppointmentStatus_GET"
      description: ""
      operationId: "EntityAppointmentStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/appointment_status/describe:
    get:
      tags:
      - "entity/appointment_status"
      summary: "EntityAppointmentStatusDescribe_GET"
      description: ""
      operationId: "EntityAppointmentStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/appointment_status/{id}:
    get:
      tags:
      - "entity/appointment_status"
      summary: "EntityAppointmentStatusById_GET"
      description: ""
      operationId: "EntityAppointmentStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/asset_status:
    get:
      tags:
      - "entity/asset_status"
      summary: "EntityAssetStatus_GET"
      description: ""
      operationId: "EntityAssetStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/asset_status/describe:
    get:
      tags:
      - "entity/asset_status"
      summary: "EntityAssetStatusDescribe_GET"
      description: ""
      operationId: "EntityAssetStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/asset_status/{id}:
    get:
      tags:
      - "entity/asset_status"
      summary: "EntityAssetStatusById_GET"
      description: ""
      operationId: "EntityAssetStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_mode:
    get:
      tags:
      - "entity/audit_mode"
      summary: "EntityAuditMode_GET"
      description: ""
      operationId: "EntityAuditMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_mode/describe:
    get:
      tags:
      - "entity/audit_mode"
      summary: "EntityAuditModeDescribe_GET"
      description: ""
      operationId: "EntityAuditModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_mode/{id}:
    get:
      tags:
      - "entity/audit_mode"
      summary: "EntityAuditModeById_GET"
      description: ""
      operationId: "EntityAuditModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_status:
    get:
      tags:
      - "entity/audit_status"
      summary: "EntityAuditStatus_GET"
      description: ""
      operationId: "EntityAuditStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_status/describe:
    get:
      tags:
      - "entity/audit_status"
      summary: "EntityAuditStatusDescribe_GET"
      description: ""
      operationId: "EntityAuditStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_status/{id}:
    get:
      tags:
      - "entity/audit_status"
      summary: "EntityAuditStatusById_GET"
      description: ""
      operationId: "EntityAuditStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_type:
    get:
      tags:
      - "entity/audit_type"
      summary: "EntityAuditType_GET"
      description: ""
      operationId: "EntityAuditType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_type/describe:
    get:
      tags:
      - "entity/audit_type"
      summary: "EntityAuditTypeDescribe_GET"
      description: ""
      operationId: "EntityAuditTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/audit_type/{id}:
    get:
      tags:
      - "entity/audit_type"
      summary: "EntityAuditTypeById_GET"
      description: ""
      operationId: "EntityAuditTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/barcode_type:
    get:
      tags:
      - "entity/barcode_type"
      summary: "EntityBarcodeType_GET"
      description: ""
      operationId: "EntityBarcodeType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/barcode_type/describe:
    get:
      tags:
      - "entity/barcode_type"
      summary: "EntityBarcodeTypeDescribe_GET"
      description: ""
      operationId: "EntityBarcodeTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/barcode_type/{id}:
    get:
      tags:
      - "entity/barcode_type"
      summary: "EntityBarcodeTypeById_GET"
      description: ""
      operationId: "EntityBarcodeTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/barcode_type_dtl:
    get:
      tags:
      - "entity/barcode_type_dtl"
      summary: "EntityBarcodeTypeDtl_GET"
      description: ""
      operationId: "EntityBarcodeTypeDtl_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/barcode_type_dtl/describe:
    get:
      tags:
      - "entity/barcode_type_dtl"
      summary: "EntityBarcodeTypeDtlDescribe_GET"
      description: ""
      operationId: "EntityBarcodeTypeDtlDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/barcode_type_dtl/{id}:
    get:
      tags:
      - "entity/barcode_type_dtl"
      summary: "EntityBarcodeTypeDtlById_GET"
      description: ""
      operationId: "EntityBarcodeTypeDtlById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/batch_number:
    get:
      tags:
      - "entity/batch_number"
      summary: "EntityBatchNumber_GET"
      description: ""
      operationId: "EntityBatchNumber_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/batch_number"
      summary: "EntityBatchNumber_POST"
      description: ""
      operationId: "EntityBatchNumber_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/batch_number/describe:
    get:
      tags:
      - "entity/batch_number"
      summary: "EntityBatchNumberDescribe_GET"
      description: ""
      operationId: "EntityBatchNumberDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/batch_number/{id}:
    get:
      tags:
      - "entity/batch_number"
      summary: "EntityBatchNumberById_GET"
      description: ""
      operationId: "EntityBatchNumberById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/break_by_modifier:
    get:
      tags:
      - "entity/break_by_modifier"
      summary: "EntityBreakByModifier_GET"
      description: ""
      operationId: "EntityBreakByModifier_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/break_by_modifier/describe:
    get:
      tags:
      - "entity/break_by_modifier"
      summary: "EntityBreakByModifierDescribe_GET"
      description: ""
      operationId: "EntityBreakByModifierDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/break_by_modifier/{id}:
    get:
      tags:
      - "entity/break_by_modifier"
      summary: "EntityBreakByModifierById_GET"
      description: ""
      operationId: "EntityBreakByModifierById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/bridge_status:
    get:
      tags:
      - "entity/bridge_status"
      summary: "EntityBridgeStatus_GET"
      description: ""
      operationId: "EntityBridgeStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/bridge_status/describe:
    get:
      tags:
      - "entity/bridge_status"
      summary: "EntityBridgeStatusDescribe_GET"
      description: ""
      operationId: "EntityBridgeStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/bridge_status/{id}:
    get:
      tags:
      - "entity/bridge_status"
      summary: "EntityBridgeStatusById_GET"
      description: ""
      operationId: "EntityBridgeStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/capacity_check_method:
    get:
      tags:
      - "entity/capacity_check_method"
      summary: "EntityCapacityCheckMethod_GET"
      description: ""
      operationId: "EntityCapacityCheckMethod_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/capacity_check_method/describe:
    get:
      tags:
      - "entity/capacity_check_method"
      summary: "EntityCapacityCheckMethodDescribe_GET"
      description: ""
      operationId: "EntityCapacityCheckMethodDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/capacity_check_method/{id}:
    get:
      tags:
      - "entity/capacity_check_method"
      summary: "EntityCapacityCheckMethodById_GET"
      description: ""
      operationId: "EntityCapacityCheckMethodById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_integration_type:
    get:
      tags:
      - "entity/carrier_integration_type"
      summary: "EntityCarrierIntegrationType_GET"
      description: ""
      operationId: "EntityCarrierIntegrationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_integration_type/describe:
    get:
      tags:
      - "entity/carrier_integration_type"
      summary: "EntityCarrierIntegrationTypeDescribe_GET"
      description: ""
      operationId: "EntityCarrierIntegrationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_integration_type/{id}:
    get:
      tags:
      - "entity/carrier_integration_type"
      summary: "EntityCarrierIntegrationTypeById_GET"
      description: ""
      operationId: "EntityCarrierIntegrationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_lpn:
    get:
      tags:
      - "entity/carrier_lpn"
      summary: "EntityCarrierLpn_GET"
      description: ""
      operationId: "EntityCarrierLpn_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_lpn/describe:
    get:
      tags:
      - "entity/carrier_lpn"
      summary: "EntityCarrierLpnDescribe_GET"
      description: ""
      operationId: "EntityCarrierLpnDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_lpn/{id}:
    get:
      tags:
      - "entity/carrier_lpn"
      summary: "EntityCarrierLpnById_GET"
      description: ""
      operationId: "EntityCarrierLpnById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_status:
    get:
      tags:
      - "entity/carrier_status"
      summary: "EntityCarrierStatus_GET"
      description: ""
      operationId: "EntityCarrierStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_status/describe:
    get:
      tags:
      - "entity/carrier_status"
      summary: "EntityCarrierStatusDescribe_GET"
      description: ""
      operationId: "EntityCarrierStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_status/{id}:
    get:
      tags:
      - "entity/carrier_status"
      summary: "EntityCarrierStatusById_GET"
      description: ""
      operationId: "EntityCarrierStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_type:
    get:
      tags:
      - "entity/carrier_type"
      summary: "EntityCarrierType_GET"
      description: ""
      operationId: "EntityCarrierType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_type/describe:
    get:
      tags:
      - "entity/carrier_type"
      summary: "EntityCarrierTypeDescribe_GET"
      description: ""
      operationId: "EntityCarrierTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_type/{id}:
    get:
      tags:
      - "entity/carrier_type"
      summary: "EntityCarrierTypeById_GET"
      description: ""
      operationId: "EntityCarrierTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_webservice_label_type:
    get:
      tags:
      - "entity/carrier_webservice_label_type"
      summary: "EntityCarrierWebserviceLabelType_GET"
      description: ""
      operationId: "EntityCarrierWebserviceLabelType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_webservice_label_type/describe:
    get:
      tags:
      - "entity/carrier_webservice_label_type"
      summary: "EntityCarrierWebserviceLabelTypeDescribe_GET"
      description: ""
      operationId: "EntityCarrierWebserviceLabelTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/carrier_webservice_label_type/{id}:
    get:
      tags:
      - "entity/carrier_webservice_label_type"
      summary: "EntityCarrierWebserviceLabelTypeById_GET"
      description: ""
      operationId: "EntityCarrierWebserviceLabelTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_adjustment_status:
    get:
      tags:
      - "entity/cc_adjustment_status"
      summary: "EntityCcAdjustmentStatus_GET"
      description: ""
      operationId: "EntityCcAdjustmentStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_adjustment_status/describe:
    get:
      tags:
      - "entity/cc_adjustment_status"
      summary: "EntityCcAdjustmentStatusDescribe_GET"
      description: ""
      operationId: "EntityCcAdjustmentStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_adjustment_status/{id}:
    get:
      tags:
      - "entity/cc_adjustment_status"
      summary: "EntityCcAdjustmentStatusById_GET"
      description: ""
      operationId: "EntityCcAdjustmentStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_creation_type:
    get:
      tags:
      - "entity/cc_creation_type"
      summary: "EntityCcCreationType_GET"
      description: ""
      operationId: "EntityCcCreationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_creation_type/describe:
    get:
      tags:
      - "entity/cc_creation_type"
      summary: "EntityCcCreationTypeDescribe_GET"
      description: ""
      operationId: "EntityCcCreationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_creation_type/{id}:
    get:
      tags:
      - "entity/cc_creation_type"
      summary: "EntityCcCreationTypeById_GET"
      description: ""
      operationId: "EntityCcCreationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_trigger:
    get:
      tags:
      - "entity/cc_trigger"
      summary: "EntityCcTrigger_GET"
      description: ""
      operationId: "EntityCcTrigger_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_trigger/describe:
    get:
      tags:
      - "entity/cc_trigger"
      summary: "EntityCcTriggerDescribe_GET"
      description: ""
      operationId: "EntityCcTriggerDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_trigger/{id}:
    get:
      tags:
      - "entity/cc_trigger"
      summary: "EntityCcTriggerById_GET"
      description: ""
      operationId: "EntityCcTriggerById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_warning:
    get:
      tags:
      - "entity/cc_warning"
      summary: "EntityCcWarning_GET"
      description: ""
      operationId: "EntityCcWarning_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_warning/describe:
    get:
      tags:
      - "entity/cc_warning"
      summary: "EntityCcWarningDescribe_GET"
      description: ""
      operationId: "EntityCcWarningDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cc_warning/{id}:
    get:
      tags:
      - "entity/cc_warning"
      summary: "EntityCcWarningById_GET"
      description: ""
      operationId: "EntityCcWarningById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/check_digit_method:
    get:
      tags:
      - "entity/check_digit_method"
      summary: "EntityCheckDigitMethod_GET"
      description: ""
      operationId: "EntityCheckDigitMethod_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/check_digit_method/describe:
    get:
      tags:
      - "entity/check_digit_method"
      summary: "EntityCheckDigitMethodDescribe_GET"
      description: ""
      operationId: "EntityCheckDigitMethodDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/check_digit_method/{id}:
    get:
      tags:
      - "entity/check_digit_method"
      summary: "EntityCheckDigitMethodById_GET"
      description: ""
      operationId: "EntityCheckDigitMethodById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/column_order_type:
    get:
      tags:
      - "entity/column_order_type"
      summary: "EntityColumnOrderType_GET"
      description: ""
      operationId: "EntityColumnOrderType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/column_order_type/describe:
    get:
      tags:
      - "entity/column_order_type"
      summary: "EntityColumnOrderTypeDescribe_GET"
      description: ""
      operationId: "EntityColumnOrderTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/column_order_type/{id}:
    get:
      tags:
      - "entity/column_order_type"
      summary: "EntityColumnOrderTypeById_GET"
      description: ""
      operationId: "EntityColumnOrderTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company:
    get:
      tags:
      - "entity/company"
      summary: "EntityCompany_GET"
      description: ""
      operationId: "EntityCompany_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company/describe:
    get:
      tags:
      - "entity/company"
      summary: "EntityCompanyDescribe_GET"
      description: ""
      operationId: "EntityCompanyDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company/{id}:
    get:
      tags:
      - "entity/company"
      summary: "EntityCompanyById_GET"
      description: ""
      operationId: "EntityCompanyById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/company"
      summary: "EntityCompanyById_PATCH"
      description: ""
      operationId: "EntityCompanyById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company_parm:
    get:
      tags:
      - "entity/company_parm"
      summary: "EntityCompanyParm_GET"
      description: ""
      operationId: "EntityCompanyParm_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/company_parm"
      summary: "EntityCompanyParm_POST"
      description: ""
      operationId: "EntityCompanyParm_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company_parm/describe:
    get:
      tags:
      - "entity/company_parm"
      summary: "EntityCompanyParmDescribe_GET"
      description: ""
      operationId: "EntityCompanyParmDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company_parm/{id}:
    get:
      tags:
      - "entity/company_parm"
      summary: "EntityCompanyParmById_GET"
      description: ""
      operationId: "EntityCompanyParmById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company_type:
    get:
      tags:
      - "entity/company_type"
      summary: "EntityCompanyType_GET"
      description: ""
      operationId: "EntityCompanyType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company_type/describe:
    get:
      tags:
      - "entity/company_type"
      summary: "EntityCompanyTypeDescribe_GET"
      description: ""
      operationId: "EntityCompanyTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/company_type/{id}:
    get:
      tags:
      - "entity/company_type"
      summary: "EntityCompanyTypeById_GET"
      description: ""
      operationId: "EntityCompanyTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/condition_type:
    get:
      tags:
      - "entity/condition_type"
      summary: "EntityConditionType_GET"
      description: ""
      operationId: "EntityConditionType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/condition_type/describe:
    get:
      tags:
      - "entity/condition_type"
      summary: "EntityConditionTypeDescribe_GET"
      description: ""
      operationId: "EntityConditionTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/condition_type/{id}:
    get:
      tags:
      - "entity/condition_type"
      summary: "EntityConditionTypeById_GET"
      description: ""
      operationId: "EntityConditionTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/contact:
    get:
      tags:
      - "entity/contact"
      summary: "EntityContact_GET"
      description: ""
      operationId: "EntityContact_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/contact/describe:
    get:
      tags:
      - "entity/contact"
      summary: "EntityContactDescribe_GET"
      description: ""
      operationId: "EntityContactDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/contact/{id}:
    get:
      tags:
      - "entity/contact"
      summary: "EntityContactById_GET"
      description: ""
      operationId: "EntityContactById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container:
    get:
      tags:
      - "entity/container"
      summary: "EntityContainer_GET"
      description: ""
      operationId: "EntityContainer_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/bulk_lock:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerBulkLock_POST"
      description: ""
      operationId: "EntityContainerBulkLock_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/bulk_unlock:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerBulkUnlock_POST"
      description: ""
      operationId: "EntityContainerBulkUnlock_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/depalletize:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerDepalletize_POST"
      description: ""
      operationId: "EntityContainerDepalletize_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/describe:
    get:
      tags:
      - "entity/container"
      summary: "EntityContainerDescribe_GET"
      description: ""
      operationId: "EntityContainerDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/{id}:
    get:
      tags:
      - "entity/container"
      summary: "EntityContainerById_GET"
      description: ""
      operationId: "EntityContainerById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/container"
      summary: "EntityContainerById_PATCH"
      description: ""
      operationId: "EntityContainerById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/{id}/lock:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerLockById_POST"
      description: ""
      operationId: "EntityContainerLockById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/{id}/unlock:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerUnlockById_POST"
      description: ""
      operationId: "EntityContainerUnlockById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/{id}/orders:
    get:
      tags:
      - "entity/container"
      summary: "EntityContainerOrdersById_GET"
      description: ""
      operationId: "EntityContainerOrdersById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/{id}/palletize:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerPalletizeById_POST"
      description: ""
      operationId: "EntityContainerPalletizeById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container/{id}/depalletize:
    post:
      tags:
      - "entity/container"
      summary: "EntityContainerDepalletizeById_POST"
      description: ""
      operationId: "EntityContainerDepalletizeById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container_status:
    get:
      tags:
      - "entity/container_status"
      summary: "EntityContainerStatus_GET"
      description: ""
      operationId: "EntityContainerStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container_status/describe:
    get:
      tags:
      - "entity/container_status"
      summary: "EntityContainerStatusDescribe_GET"
      description: ""
      operationId: "EntityContainerStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container_status/{id}:
    get:
      tags:
      - "entity/container_status"
      summary: "EntityContainerStatusById_GET"
      description: ""
      operationId: "EntityContainerStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container_vas_status:
    get:
      tags:
      - "entity/container_vas_status"
      summary: "EntityContainerVasStatus_GET"
      description: ""
      operationId: "EntityContainerVasStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container_vas_status/describe:
    get:
      tags:
      - "entity/container_vas_status"
      summary: "EntityContainerVasStatusDescribe_GET"
      description: ""
      operationId: "EntityContainerVasStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/container_vas_status/{id}:
    get:
      tags:
      - "entity/container_vas_status"
      summary: "EntityContainerVasStatusById_GET"
      description: ""
      operationId: "EntityContainerVasStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cubing_mode:
    get:
      tags:
      - "entity/cubing_mode"
      summary: "EntityCubingMode_GET"
      description: ""
      operationId: "EntityCubingMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cubing_mode/describe:
    get:
      tags:
      - "entity/cubing_mode"
      summary: "EntityCubingModeDescribe_GET"
      description: ""
      operationId: "EntityCubingModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/cubing_mode/{id}:
    get:
      tags:
      - "entity/cubing_mode"
      summary: "EntityCubingModeById_GET"
      description: ""
      operationId: "EntityCubingModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/date_format:
    get:
      tags:
      - "entity/date_format"
      summary: "EntityDateFormat_GET"
      description: ""
      operationId: "EntityDateFormat_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/date_format/describe:
    get:
      tags:
      - "entity/date_format"
      summary: "EntityDateFormatDescribe_GET"
      description: ""
      operationId: "EntityDateFormatDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/date_format/{id}:
    get:
      tags:
      - "entity/date_format"
      summary: "EntityDateFormatById_GET"
      description: ""
      operationId: "EntityDateFormatById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/destination_location_type:
    get:
      tags:
      - "entity/destination_location_type"
      summary: "EntityDestinationLocationType_GET"
      description: ""
      operationId: "EntityDestinationLocationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/destination_location_type/describe:
    get:
      tags:
      - "entity/destination_location_type"
      summary: "EntityDestinationLocationTypeDescribe_GET"
      description: ""
      operationId: "EntityDestinationLocationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/destination_location_type/{id}:
    get:
      tags:
      - "entity/destination_location_type"
      summary: "EntityDestinationLocationTypeById_GET"
      description: ""
      operationId: "EntityDestinationLocationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock:
    get:
      tags:
      - "entity/dock"
      summary: "EntityDock_GET"
      description: ""
      operationId: "EntityDock_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock/describe:
    get:
      tags:
      - "entity/dock"
      summary: "EntityDockDescribe_GET"
      description: ""
      operationId: "EntityDockDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock/{id}:
    get:
      tags:
      - "entity/dock"
      summary: "EntityDockById_GET"
      description: ""
      operationId: "EntityDockById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock_status:
    get:
      tags:
      - "entity/dock_status"
      summary: "EntityDockStatus_GET"
      description: ""
      operationId: "EntityDockStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock_status/describe:
    get:
      tags:
      - "entity/dock_status"
      summary: "EntityDockStatusDescribe_GET"
      description: ""
      operationId: "EntityDockStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock_status/{id}:
    get:
      tags:
      - "entity/dock_status"
      summary: "EntityDockStatusById_GET"
      description: ""
      operationId: "EntityDockStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock_type:
    get:
      tags:
      - "entity/dock_type"
      summary: "EntityDockType_GET"
      description: ""
      operationId: "EntityDockType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock_type/describe:
    get:
      tags:
      - "entity/dock_type"
      summary: "EntityDockTypeDescribe_GET"
      description: ""
      operationId: "EntityDockTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/dock_type/{id}:
    get:
      tags:
      - "entity/dock_type"
      summary: "EntityDockTypeById_GET"
      description: ""
      operationId: "EntityDockTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/describe:
    get:
      tags:
      - "entity/entity"
      summary: "EntityDescribe_GET"
      description: ""
      operationId: "EntityDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/entity_change_action:
    get:
      tags:
      - "entity/entity_change_action"
      summary: "EntityEntityChangeAction_GET"
      description: ""
      operationId: "EntityEntityChangeAction_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/entity_change_action/describe:
    get:
      tags:
      - "entity/entity_change_action"
      summary: "EntityEntityChangeActionDescribe_GET"
      description: ""
      operationId: "EntityEntityChangeActionDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/entity_change_action/{id}:
    get:
      tags:
      - "entity/entity_change_action"
      summary: "EntityEntityChangeActionById_GET"
      description: ""
      operationId: "EntityEntityChangeActionById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility:
    get:
      tags:
      - "entity/facility"
      summary: "EntityFacility_GET"
      description: ""
      operationId: "EntityFacility_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility/describe:
    get:
      tags:
      - "entity/facility"
      summary: "EntityFacilityDescribe_GET"
      description: ""
      operationId: "EntityFacilityDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility/{id}:
    get:
      tags:
      - "entity/facility"
      summary: "EntityFacilityById_GET"
      description: ""
      operationId: "EntityFacilityById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/facility"
      summary: "EntityFacilityById_PATCH"
      description: ""
      operationId: "EntityFacilityById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility_parm:
    get:
      tags:
      - "entity/facility_parm"
      summary: "EntityFacilityParm_GET"
      description: ""
      operationId: "EntityFacilityParm_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/facility_parm"
      summary: "EntityFacilityParm_POST"
      description: ""
      operationId: "EntityFacilityParm_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility_parm/describe:
    get:
      tags:
      - "entity/facility_parm"
      summary: "EntityFacilityParmDescribe_GET"
      description: ""
      operationId: "EntityFacilityParmDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility_parm/{id}:
    get:
      tags:
      - "entity/facility_parm"
      summary: "EntityFacilityParmById_GET"
      description: ""
      operationId: "EntityFacilityParmById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility_type:
    get:
      tags:
      - "entity/facility_type"
      summary: "EntityFacilityType_GET"
      description: ""
      operationId: "EntityFacilityType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility_type/describe:
    get:
      tags:
      - "entity/facility_type"
      summary: "EntityFacilityTypeDescribe_GET"
      description: ""
      operationId: "EntityFacilityTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/facility_type/{id}:
    get:
      tags:
      - "entity/facility_type"
      summary: "EntityFacilityTypeById_GET"
      description: ""
      operationId: "EntityFacilityTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/form_type:
    get:
      tags:
      - "entity/form_type"
      summary: "EntityFormType_GET"
      description: ""
      operationId: "EntityFormType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/form_type/describe:
    get:
      tags:
      - "entity/form_type"
      summary: "EntityFormTypeDescribe_GET"
      description: ""
      operationId: "EntityFormTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/form_type/{id}:
    get:
      tags:
      - "entity/form_type"
      summary: "EntityFormTypeById_GET"
      description: ""
      operationId: "EntityFormTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/hazmat_regulation_type:
    get:
      tags:
      - "entity/hazmat_regulation_type"
      summary: "EntityHazmatRegulationType_GET"
      description: ""
      operationId: "EntityHazmatRegulationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/hazmat_regulation_type/describe:
    get:
      tags:
      - "entity/hazmat_regulation_type"
      summary: "EntityHazmatRegulationTypeDescribe_GET"
      description: ""
      operationId: "EntityHazmatRegulationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/hazmat_regulation_type/{id}:
    get:
      tags:
      - "entity/hazmat_regulation_type"
      summary: "EntityHazmatRegulationTypeById_GET"
      description: ""
      operationId: "EntityHazmatRegulationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/hire_type:
    get:
      tags:
      - "entity/hire_type"
      summary: "EntityHireType_GET"
      description: ""
      operationId: "EntityHireType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/hire_type/describe:
    get:
      tags:
      - "entity/hire_type"
      summary: "EntityHireTypeDescribe_GET"
      description: ""
      operationId: "EntityHireTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/hire_type/{id}:
    get:
      tags:
      - "entity/hire_type"
      summary: "EntityHireTypeById_GET"
      description: ""
      operationId: "EntityHireTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment:
    get:
      tags:
      - "entity/ib_shipment"
      summary: "EntityIbShipment_GET"
      description: ""
      operationId: "EntityIbShipment_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment/describe:
    get:
      tags:
      - "entity/ib_shipment"
      summary: "EntityIbShipmentDescribe_GET"
      description: ""
      operationId: "EntityIbShipmentDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment/{id}:
    get:
      tags:
      - "entity/ib_shipment"
      summary: "EntityIbShipmentById_GET"
      description: ""
      operationId: "EntityIbShipmentById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/ib_shipment"
      summary: "EntityIbShipmentById_PATCH"
      description: ""
      operationId: "EntityIbShipmentById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_dtl:
    get:
      tags:
      - "entity/ib_shipment_dtl"
      summary: "EntityIbShipmentDtl_GET"
      description: ""
      operationId: "EntityIbShipmentDtl_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_dtl/describe:
    get:
      tags:
      - "entity/ib_shipment_dtl"
      summary: "EntityIbShipmentDtlDescribe_GET"
      description: ""
      operationId: "EntityIbShipmentDtlDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_dtl/{id}:
    get:
      tags:
      - "entity/ib_shipment_dtl"
      summary: "EntityIbShipmentDtlById_GET"
      description: ""
      operationId: "EntityIbShipmentDtlById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/ib_shipment_dtl"
      summary: "EntityIbShipmentDtlById_PATCH"
      description: ""
      operationId: "EntityIbShipmentDtlById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_serial_nbr:
    get:
      tags:
      - "entity/ib_shipment_serial_nbr"
      summary: "EntityIbShipmentSerialNbr_GET"
      description: ""
      operationId: "EntityIbShipmentSerialNbr_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_serial_nbr/describe:
    get:
      tags:
      - "entity/ib_shipment_serial_nbr"
      summary: "EntityIbShipmentSerialNbrDescribe_GET"
      description: ""
      operationId: "EntityIbShipmentSerialNbrDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_serial_nbr/{id}:
    get:
      tags:
      - "entity/ib_shipment_serial_nbr"
      summary: "EntityIbShipmentSerialNbrById_GET"
      description: ""
      operationId: "EntityIbShipmentSerialNbrById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_status:
    get:
      tags:
      - "entity/ib_shipment_status"
      summary: "EntityIbShipmentStatus_GET"
      description: ""
      operationId: "EntityIbShipmentStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_status/describe:
    get:
      tags:
      - "entity/ib_shipment_status"
      summary: "EntityIbShipmentStatusDescribe_GET"
      description: ""
      operationId: "EntityIbShipmentStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ib_shipment_status/{id}:
    get:
      tags:
      - "entity/ib_shipment_status"
      summary: "EntityIbShipmentStatusById_GET"
      description: ""
      operationId: "EntityIbShipmentStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn:
    get:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpn_GET"
      description: ""
      operationId: "EntityIblpn_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpn_POST"
      description: ""
      operationId: "EntityIblpn_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn/composite_create:
    post:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnCompositeCreate_POST"
      description: ""
      operationId: "EntityIblpnCompositeCreate_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn/describe:
    get:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnDescribe_GET"
      description: ""
      operationId: "EntityIblpnDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn/modify_item_qty:
    post:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnModifyItemQty_POST"
      description: ""
      operationId: "EntityIblpnModifyItemQty_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn/{id}:
    get:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnById_GET"
      description: ""
      operationId: "EntityIblpnById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnById_PATCH"
      description: ""
      operationId: "EntityIblpnById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn/{id}/direct_consume:
    post:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnDirectConsumeById_POST"
      description: ""
      operationId: "EntityIblpnDirectConsumeById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/iblpn/{id}/modify_item_qty:
    post:
      tags:
      - "entity/iblpn"
      summary: "EntityIblpnModifyItemQtyById_POST"
      description: ""
      operationId: "EntityIblpnModifyItemQtyById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_format_type:
    get:
      tags:
      - "entity/interface_format_type"
      summary: "EntityInterfaceFormatType_GET"
      description: ""
      operationId: "EntityInterfaceFormatType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_format_type/describe:
    get:
      tags:
      - "entity/interface_format_type"
      summary: "EntityInterfaceFormatTypeDescribe_GET"
      description: ""
      operationId: "EntityInterfaceFormatTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_format_type/{id}:
    get:
      tags:
      - "entity/interface_format_type"
      summary: "EntityInterfaceFormatTypeById_GET"
      description: ""
      operationId: "EntityInterfaceFormatTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_protocol:
    get:
      tags:
      - "entity/interface_protocol"
      summary: "EntityInterfaceProtocol_GET"
      description: ""
      operationId: "EntityInterfaceProtocol_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_protocol/describe:
    get:
      tags:
      - "entity/interface_protocol"
      summary: "EntityInterfaceProtocolDescribe_GET"
      description: ""
      operationId: "EntityInterfaceProtocolDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_protocol/{id}:
    get:
      tags:
      - "entity/interface_protocol"
      summary: "EntityInterfaceProtocolById_GET"
      description: ""
      operationId: "EntityInterfaceProtocolById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_type:
    get:
      tags:
      - "entity/interface_type"
      summary: "EntityInterfaceType_GET"
      description: ""
      operationId: "EntityInterfaceType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_type/describe:
    get:
      tags:
      - "entity/interface_type"
      summary: "EntityInterfaceTypeDescribe_GET"
      description: ""
      operationId: "EntityInterfaceTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/interface_type/{id}:
    get:
      tags:
      - "entity/interface_type"
      summary: "EntityInterfaceTypeById_GET"
      description: ""
      operationId: "EntityInterfaceTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory:
    get:
      tags:
      - "entity/inventory"
      summary: "EntityInventory_GET"
      description: ""
      operationId: "EntityInventory_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/inventory"
      summary: "EntityInventory_POST"
      description: ""
      operationId: "EntityInventory_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory/bulk_update_inventory_attributes:
    post:
      tags:
      - "entity/inventory"
      summary: "EntityInventoryBulkUpdateInventoryAttributes_POST"
      description: ""
      operationId: "EntityInventoryBulkUpdateInventoryAttributes_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory/describe:
    get:
      tags:
      - "entity/inventory"
      summary: "EntityInventoryDescribe_GET"
      description: ""
      operationId: "EntityInventoryDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory/{id}:
    get:
      tags:
      - "entity/inventory"
      summary: "EntityInventoryById_GET"
      description: ""
      operationId: "EntityInventoryById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory/{id}/link_serial_nbrs:
    post:
      tags:
      - "entity/inventory"
      summary: "EntityInventoryLinkSerialNbrsById_POST"
      description: ""
      operationId: "EntityInventoryLinkSerialNbrsById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_attribute:
    get:
      tags:
      - "entity/inventory_attribute"
      summary: "EntityInventoryAttribute_GET"
      description: ""
      operationId: "EntityInventoryAttribute_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/inventory_attribute"
      summary: "EntityInventoryAttribute_POST"
      description: ""
      operationId: "EntityInventoryAttribute_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_attribute/describe:
    get:
      tags:
      - "entity/inventory_attribute"
      summary: "EntityInventoryAttributeDescribe_GET"
      description: ""
      operationId: "EntityInventoryAttributeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_attribute/{id}:
    get:
      tags:
      - "entity/inventory_attribute"
      summary: "EntityInventoryAttributeById_GET"
      description: ""
      operationId: "EntityInventoryAttributeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_lock:
    get:
      tags:
      - "entity/inventory_lock"
      summary: "EntityInventoryLock_GET"
      description: ""
      operationId: "EntityInventoryLock_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/inventory_lock"
      summary: "EntityInventoryLock_POST"
      description: ""
      operationId: "EntityInventoryLock_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_lock/describe:
    get:
      tags:
      - "entity/inventory_lock"
      summary: "EntityInventoryLockDescribe_GET"
      description: ""
      operationId: "EntityInventoryLockDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_lock/{id}:
    get:
      tags:
      - "entity/inventory_lock"
      summary: "EntityInventoryLockById_GET"
      description: ""
      operationId: "EntityInventoryLockById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_status:
    get:
      tags:
      - "entity/inventory_status"
      summary: "EntityInventoryStatus_GET"
      description: ""
      operationId: "EntityInventoryStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_status/describe:
    get:
      tags:
      - "entity/inventory_status"
      summary: "EntityInventoryStatusDescribe_GET"
      description: ""
      operationId: "EntityInventoryStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/inventory_status/{id}:
    get:
      tags:
      - "entity/inventory_status"
      summary: "EntityInventoryStatusById_GET"
      description: ""
      operationId: "EntityInventoryStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/invoice_status:
    get:
      tags:
      - "entity/invoice_status"
      summary: "EntityInvoiceStatus_GET"
      description: ""
      operationId: "EntityInvoiceStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/invoice_status/describe:
    get:
      tags:
      - "entity/invoice_status"
      summary: "EntityInvoiceStatusDescribe_GET"
      description: ""
      operationId: "EntityInvoiceStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/invoice_status/{id}:
    get:
      tags:
      - "entity/invoice_status"
      summary: "EntityInvoiceStatusById_GET"
      description: ""
      operationId: "EntityInvoiceStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item:
    get:
      tags:
      - "entity/item"
      summary: "EntityItem_GET"
      description: ""
      operationId: "EntityItem_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item/describe:
    get:
      tags:
      - "entity/item"
      summary: "EntityItemDescribe_GET"
      description: ""
      operationId: "EntityItemDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item/image_upload:
    post:
      tags:
      - "entity/item"
      summary: "EntityItemImageUpload_POST"
      description: ""
      operationId: "EntityItemImageUpload_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item/{id}:
    get:
      tags:
      - "entity/item"
      summary: "EntityItemById_GET"
      description: ""
      operationId: "EntityItemById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item/{id}/image_upload:
    post:
      tags:
      - "entity/item"
      summary: "EntityItemImageUploadById_POST"
      description: ""
      operationId: "EntityItemImageUploadById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_assignment_type:
    get:
      tags:
      - "entity/item_assignment_type"
      summary: "EntityItemAssignmentType_GET"
      description: ""
      operationId: "EntityItemAssignmentType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_assignment_type/describe:
    get:
      tags:
      - "entity/item_assignment_type"
      summary: "EntityItemAssignmentTypeDescribe_GET"
      description: ""
      operationId: "EntityItemAssignmentTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_assignment_type/{id}:
    get:
      tags:
      - "entity/item_assignment_type"
      summary: "EntityItemAssignmentTypeById_GET"
      description: ""
      operationId: "EntityItemAssignmentTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_characteristics:
    get:
      tags:
      - "entity/item_characteristics"
      summary: "EntityItemCharacteristics_GET"
      description: ""
      operationId: "EntityItemCharacteristics_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_characteristics/describe:
    get:
      tags:
      - "entity/item_characteristics"
      summary: "EntityItemCharacteristicsDescribe_GET"
      description: ""
      operationId: "EntityItemCharacteristicsDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_characteristics/{id}:
    get:
      tags:
      - "entity/item_characteristics"
      summary: "EntityItemCharacteristicsById_GET"
      description: ""
      operationId: "EntityItemCharacteristicsById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/item_characteristics"
      summary: "EntityItemCharacteristicsById_PATCH"
      description: ""
      operationId: "EntityItemCharacteristicsById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_metrics:
    get:
      tags:
      - "entity/item_metrics"
      summary: "EntityItemMetrics_GET"
      description: ""
      operationId: "EntityItemMetrics_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_metrics/describe:
    get:
      tags:
      - "entity/item_metrics"
      summary: "EntityItemMetricsDescribe_GET"
      description: ""
      operationId: "EntityItemMetricsDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/item_metrics/{id}:
    get:
      tags:
      - "entity/item_metrics"
      summary: "EntityItemMetricsById_GET"
      description: ""
      operationId: "EntityItemMetricsById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/label_type:
    get:
      tags:
      - "entity/label_type"
      summary: "EntityLabelType_GET"
      description: ""
      operationId: "EntityLabelType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/label_type/describe:
    get:
      tags:
      - "entity/label_type"
      summary: "EntityLabelTypeDescribe_GET"
      description: ""
      operationId: "EntityLabelTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/label_type/{id}:
    get:
      tags:
      - "entity/label_type"
      summary: "EntityLabelTypeById_GET"
      description: ""
      operationId: "EntityLabelTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/language:
    get:
      tags:
      - "entity/language"
      summary: "EntityLanguage_GET"
      description: ""
      operationId: "EntityLanguage_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/language/describe:
    get:
      tags:
      - "entity/language"
      summary: "EntityLanguageDescribe_GET"
      description: ""
      operationId: "EntityLanguageDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/language/{id}:
    get:
      tags:
      - "entity/language"
      summary: "EntityLanguageById_GET"
      description: ""
      operationId: "EntityLanguageById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/lgfapi_archive_level:
    get:
      tags:
      - "entity/lgfapi_archive_level"
      summary: "EntityLgfapiArchiveLevel_GET"
      description: ""
      operationId: "EntityLgfapiArchiveLevel_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/lgfapi_archive_level/describe:
    get:
      tags:
      - "entity/lgfapi_archive_level"
      summary: "EntityLgfapiArchiveLevelDescribe_GET"
      description: ""
      operationId: "EntityLgfapiArchiveLevelDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/lgfapi_archive_level/{id}:
    get:
      tags:
      - "entity/lgfapi_archive_level"
      summary: "EntityLgfapiArchiveLevelById_GET"
      description: ""
      operationId: "EntityLgfapiArchiveLevelById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load:
    get:
      tags:
      - "entity/load"
      summary: "EntityLoad_GET"
      description: ""
      operationId: "EntityLoad_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/describe:
    get:
      tags:
      - "entity/load"
      summary: "EntityLoadDescribe_GET"
      description: ""
      operationId: "EntityLoadDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/check_in:
    post:
      tags:
      - "entity/load"
      summary: "EntityLoadCheckIn_POST"
      description: ""
      operationId: "EntityLoadCheckIn_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/check_out:
    post:
      tags:
      - "entity/load"
      summary: "EntityLoadCheckOut_POST"
      description: ""
      operationId: "EntityLoadCheckOut_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/ship:
    post:
      tags:
      - "entity/load"
      summary: "EntityLoadShip_POST"
      description: ""
      operationId: "EntityLoadShip_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/{id}:
    get:
      tags:
      - "entity/load"
      summary: "EntityLoadById_GET"
      description: ""
      operationId: "EntityLoadById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/load"
      summary: "EntityLoadById_PATCH"
      description: ""
      operationId: "EntityLoadById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/{id}/check_in:
    post:
      tags:
      - "entity/load"
      summary: "EntityLoadCheckInById_POST"
      description: ""
      operationId: "EntityLoadCheckInById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/{id}/check_out:
    post:
      tags:
      - "entity/load"
      summary: "EntityLoadCheckOutById_POST"
      description: ""
      operationId: "EntityLoadCheckOutById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load/{id}/ship:
    post:
      tags:
      - "entity/load"
      summary: "EntityLoadShipById_POST"
      description: ""
      operationId: "EntityLoadShipById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load_status:
    get:
      tags:
      - "entity/load_status"
      summary: "EntityLoadStatus_GET"
      description: ""
      operationId: "EntityLoadStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load_status/describe:
    get:
      tags:
      - "entity/load_status"
      summary: "EntityLoadStatusDescribe_GET"
      description: ""
      operationId: "EntityLoadStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/load_status/{id}:
    get:
      tags:
      - "entity/load_status"
      summary: "EntityLoadStatusById_GET"
      description: ""
      operationId: "EntityLoadStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location:
    get:
      tags:
      - "entity/location"
      summary: "EntityLocation_GET"
      description: ""
      operationId: "EntityLocation_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location/describe:
    get:
      tags:
      - "entity/location"
      summary: "EntityLocationDescribe_GET"
      description: ""
      operationId: "EntityLocationDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location/update_active_inventory:
    post:
      tags:
      - "entity/location"
      summary: "EntityLocationUpdateActiveInventory_POST"
      description: ""
      operationId: "EntityLocationUpdateActiveInventory_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location/{id}:
    get:
      tags:
      - "entity/location"
      summary: "EntityLocationById_GET"
      description: ""
      operationId: "EntityLocationById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/location"
      summary: "EntityLocationById_PATCH"
      description: ""
      operationId: "EntityLocationById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location/{id}/update_active_inventory:
    post:
      tags:
      - "entity/location"
      summary: "EntityLocationUpdateActiveInventoryById_POST"
      description: ""
      operationId: "EntityLocationUpdateActiveInventoryById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location/yard/first_available:
    get:
      tags:
      - "entity/location"
      summary: "EntityLocationYearFirstAvailable_GET"
      description: ""
      operationId: "EntityLocationYearFirstAvailable_GET"
      parameters:
      - name: "facility_id"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityId"
        x-optionalDataType: "String"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityIdCode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location_size_type:
    get:
      tags:
      - "entity/location_size_type"
      summary: "EntityLocationSizeType_GET"
      description: ""
      operationId: "EntityLocationSizeType_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/location_size_type"
      summary: "EntityLocationSizeType_POST"
      description: ""
      operationId: "EntityLocationSizeType_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location_size_type/{id}:
    get:
      tags:
      - "entity/location_size_type"
      summary: "EntityLocationSizeTypeById_GET"
      description: ""
      operationId: "EntityLocationSizeTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location_type:
    get:
      tags:
      - "entity/location_type"
      summary: "EntityLocationType_GET"
      description: ""
      operationId: "EntityLocationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location_type/describe:
    get:
      tags:
      - "entity/location_type"
      summary: "EntityLocationTypeDescribe_GET"
      description: ""
      operationId: "EntityLocationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/location_type/{id}:
    get:
      tags:
      - "entity/location_type"
      summary: "EntityLocationTypeById_GET"
      description: ""
      operationId: "EntityLocationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_destination_code:
    get:
      tags:
      - "entity/mhe_destination_code"
      summary: "EntityMheDestinationCode_GET"
      description: ""
      operationId: "EntityMheDestinationCode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_destination_code/describe:
    get:
      tags:
      - "entity/mhe_destination_code"
      summary: "EntityMheDestinationCodeDescribe_GET"
      description: ""
      operationId: "EntityMheDestinationCodeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_destination_code/{id}:
    get:
      tags:
      - "entity/mhe_destination_code"
      summary: "EntityMheDestinationCodeById_GET"
      description: ""
      operationId: "EntityMheDestinationCodeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_msg_type:
    get:
      tags:
      - "entity/mhe_msg_type"
      summary: "EntityMheMsgType_GET"
      description: ""
      operationId: "EntityMheMsgType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_msg_type/describe:
    get:
      tags:
      - "entity/mhe_msg_type"
      summary: "EntityMheMsgTypeDescribe_GET"
      description: ""
      operationId: "EntityMheMsgTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_msg_type/{id}:
    get:
      tags:
      - "entity/mhe_msg_type"
      summary: "EntityMheMsgTypeById_GET"
      description: ""
      operationId: "EntityMheMsgTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_route_config_function:
    get:
      tags:
      - "entity/mhe_route_config_function"
      summary: "EntityMheRouteConfigFunction_GET"
      description: ""
      operationId: "EntityMheRouteConfigFunction_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_route_config_function/describe:
    get:
      tags:
      - "entity/mhe_route_config_function"
      summary: "EntityMheRouteConfigFunctionDescribe_GET"
      description: ""
      operationId: "EntityMheRouteConfigFunctionDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_route_config_function/{id}:
    get:
      tags:
      - "entity/mhe_route_config_function"
      summary: "EntityMheRouteConfigFunctionById_GET"
      description: ""
      operationId: "EntityMheRouteConfigFunctionById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_trigger:
    get:
      tags:
      - "entity/mhe_trigger"
      summary: "EntityMheTrigger_GET"
      description: ""
      operationId: "EntityMheTrigger_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_trigger/describe:
    get:
      tags:
      - "entity/mhe_trigger"
      summary: "EntityMheTriggerDescribe_GET"
      description: ""
      operationId: "EntityMheTriggerDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_trigger/{id}:
    get:
      tags:
      - "entity/mhe_trigger"
      summary: "EntityMheTriggerById_GET"
      description: ""
      operationId: "EntityMheTriggerById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_type:
    get:
      tags:
      - "entity/mhe_type"
      summary: "EntityMheType_GET"
      description: ""
      operationId: "EntityMheType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_type/describe:
    get:
      tags:
      - "entity/mhe_type"
      summary: "EntityMheTypeDescribe_GET"
      description: ""
      operationId: "EntityMheTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/mhe_type/{id}:
    get:
      tags:
      - "entity/mhe_type"
      summary: "EntityMheTypeById_GET"
      description: ""
      operationId: "EntityMheTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/multi_field_barcode_delimiter:
    get:
      tags:
      - "entity/multi_field_barcode_delimiter"
      summary: "EntityMultiFieldBarcodeDelimiter_GET"
      description: ""
      operationId: "EntityMultiFieldBarcodeDelimiter_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/multi_field_barcode_delimiter/describe:
    get:
      tags:
      - "entity/multi_field_barcode_delimiter"
      summary: "EntityMultiFieldBarcodeDelimiterDescribe_GET"
      description: ""
      operationId: "EntityMultiFieldBarcodeDelimiterDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/multi_field_barcode_delimiter/{id}:
    get:
      tags:
      - "entity/multi_field_barcode_delimiter"
      summary: "EntityMultiFieldBarcodeDelimiterById_GET"
      description: ""
      operationId: "EntityMultiFieldBarcodeDelimiterById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ob_stop:
    get:
      tags:
      - "entity/ob_stop"
      summary: "EntityObStop_GET"
      description: ""
      operationId: "EntityObStop_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ob_stop/describe:
    get:
      tags:
      - "entity/ob_stop"
      summary: "EntityObStopDescribe_GET"
      description: ""
      operationId: "EntityObStopDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ob_stop/{id}:
    get:
      tags:
      - "entity/ob_stop"
      summary: "EntityObStopById_GET"
      description: ""
      operationId: "EntityObStopById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ob_stop_dtl:
    get:
      tags:
      - "entity/ob_stop_dtl"
      summary: "EntityObStopDtl_GET"
      description: ""
      operationId: "EntityObStopDtl_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ob_stop_dtl/describe:
    get:
      tags:
      - "entity/ob_stop_dtl"
      summary: "EntityObStopDtlDescribe_GET"
      description: ""
      operationId: "EntityObStopDtlDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ob_stop_dtl/{id}:
    get:
      tags:
      - "entity/ob_stop_dtl"
      summary: "EntityObStopDtlById_GET"
      description: ""
      operationId: "EntityObStopDtlById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn:
    get:
      tags:
      - "entity/oblpn"
      summary: "EntityOblpn_GET"
      description: ""
      operationId: "EntityOblpn_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn/create_from_iblpn:
    post:
      tags:
      - "entity/oblpn"
      summary: "EntityOblpnCreateFromIblpn_POST"
      description: ""
      operationId: "EntityOblpnCreateFromIblpn_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn/describe:
    get:
      tags:
      - "entity/oblpn"
      summary: "EntityOblpnDescribe_GET"
      description: ""
      operationId: "EntityOblpnDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn/{id}:
    get:
      tags:
      - "entity/oblpn"
      summary: "EntityOblpnById_GET"
      description: ""
      operationId: "EntityOblpnById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/oblpn"
      summary: "EntityOblpnById_PATCH"
      description: ""
      operationId: "EntityOblpnById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn/{id}/link_asset:
    post:
      tags:
      - "entity/oblpn"
      summary: "EntityOblpnLinkAssetById_POST"
      description: ""
      operationId: "EntityOblpnLinkAssetById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn_printing_validation:
    get:
      tags:
      - "entity/oblpn_printing_validation"
      summary: "EntityOblpnPrintingValidation_GET"
      description: ""
      operationId: "EntityOblpnPrintingValidation_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn_printing_validation/describe:
    get:
      tags:
      - "entity/oblpn_printing_validation"
      summary: "EntityOblpnPrintingValidationDescribe_GET"
      description: ""
      operationId: "EntityOblpnPrintingValidationDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/oblpn_printing_validation/{id}:
    get:
      tags:
      - "entity/oblpn_printing_validation"
      summary: "EntityOblpnPrintingValidationById_GET"
      description: ""
      operationId: "EntityOblpnPrintingValidationById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_dtl:
    get:
      tags:
      - "entity/order_dtl"
      summary: "EntityOrderDtl_GET"
      description: ""
      operationId: "EntityOrderDtl_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_dtl/describe:
    get:
      tags:
      - "entity/order_dtl"
      summary: "EntityOrderDtlDescribe_GET"
      description: ""
      operationId: "EntityOrderDtlDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_dtl/{id}:
    get:
      tags:
      - "entity/order_dtl"
      summary: "EntityOrderDtlById_GET"
      description: ""
      operationId: "EntityOrderDtlById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/order_dtl"
      summary: "EntityOrderDtlById_PATCH"
      description: ""
      operationId: "EntityOrderDtlById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr:
    get:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdr_GET"
      description: ""
      operationId: "EntityOrderHdr_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr/bulk_lock:
    post:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrBulkLock_POST"
      description: ""
      operationId: "EntityOrderHdrBulkLock_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr/bulk_unlock:
    post:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrBulkUnlock_POST"
      description: ""
      operationId: "EntityOrderHdrBulkUnlock_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr/describe:
    get:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrDescribe_GET"
      description: ""
      operationId: "EntityOrderHdrDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr/{id}:
    get:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrById_GET"
      description: ""
      operationId: "EntityOrderHdrById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrById_PATCH"
      description: ""
      operationId: "EntityOrderHdrById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr/{id}/iblpns:
    post:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrIblpnsById_POST"
      description: ""
      operationId: "EntityOrderHdrIblpnsById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_hdr/{id}/oblpns:
    post:
      tags:
      - "entity/order_hdr"
      summary: "EntityOrderHdrOblpnsById_POST"
      description: ""
      operationId: "EntityOrderHdrOblpnsById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction:
    get:
      tags:
      - "entity/order_instruction"
      summary: "EntityOrderInstruction_GET"
      description: ""
      operationId: "EntityOrderInstruction_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction/describe:
    get:
      tags:
      - "entity/order_instruction"
      summary: "EntityOrderInstructionDescribe_GET"
      description: ""
      operationId: "EntityOrderInstructionDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction/{id}:
    get:
      tags:
      - "entity/order_instruction"
      summary: "EntityOrderInstructionById_GET"
      description: ""
      operationId: "EntityOrderInstructionById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction_level:
    get:
      tags:
      - "entity/order_instruction_level"
      summary: "EntityOrderInstructionLevel_GET"
      description: ""
      operationId: "EntityOrderInstructionLevel_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction_level/describe:
    get:
      tags:
      - "entity/order_instruction_level"
      summary: "EntityOrderInstructionLevelDescribe_GET"
      description: ""
      operationId: "EntityOrderInstructionLevelDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction_level/{id}:
    get:
      tags:
      - "entity/order_instruction_level"
      summary: "EntityOrderInstructionLevelById_GET"
      description: ""
      operationId: "EntityOrderInstructionLevelById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction_type:
    get:
      tags:
      - "entity/order_instruction_type"
      summary: "EntityOrderInstructionType_GET"
      description: ""
      operationId: "EntityOrderInstructionType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction_type/describe:
    get:
      tags:
      - "entity/order_instruction_type"
      summary: "EntityOrderInstructionTypeDescribe_GET"
      description: ""
      operationId: "EntityOrderInstructionTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_instruction_type/{id}:
    get:
      tags:
      - "entity/order_instruction_type"
      summary: "EntityOrderInstructionTypeById_GET"
      description: ""
      operationId: "EntityOrderInstructionTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_lock:
    get:
      tags:
      - "entity/order_lock"
      summary: "EntityOrderLock_GET"
      description: ""
      operationId: "EntityOrderLock_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_lock/describe:
    get:
      tags:
      - "entity/order_lock"
      summary: "EntityOrderLockDescribe_GET"
      description: ""
      operationId: "EntityOrderLockDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_lock/{id}:
    get:
      tags:
      - "entity/order_lock"
      summary: "EntityOrderLockById_GET"
      description: ""
      operationId: "EntityOrderLockById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_status:
    get:
      tags:
      - "entity/order_status"
      summary: "EntityOrderStatus_GET"
      description: ""
      operationId: "EntityOrderStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_status/describe:
    get:
      tags:
      - "entity/order_status"
      summary: "EntityOrderStatusDescribe_GET"
      description: ""
      operationId: "EntityOrderStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_status/{id}:
    get:
      tags:
      - "entity/order_status"
      summary: "EntityOrderStatusById_GET"
      description: ""
      operationId: "EntityOrderStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_type:
    get:
      tags:
      - "entity/order_type"
      summary: "EntityOrderType_GET"
      description: ""
      operationId: "EntityOrderType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_type/describe:
    get:
      tags:
      - "entity/order_type"
      summary: "EntityOrderTypeDescribe_GET"
      description: ""
      operationId: "EntityOrderTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_type/{id}:
    get:
      tags:
      - "entity/order_type"
      summary: "EntityOrderTypeById_GET"
      description: ""
      operationId: "EntityOrderTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_validation_mode:
    get:
      tags:
      - "entity/order_validation_mode"
      summary: "EntityOrderValidationMode_GET"
      description: ""
      operationId: "EntityOrderValidationMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_validation_mode/describe:
    get:
      tags:
      - "entity/order_validation_mode"
      summary: "EntityOrderValidationModeDescribe_GET"
      description: ""
      operationId: "EntityOrderValidationModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/order_validation_mode/{id}:
    get:
      tags:
      - "entity/order_validation_mode"
      summary: "EntityOrderValidationModeById_GET"
      description: ""
      operationId: "EntityOrderValidationModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet:
    get:
      tags:
      - "entity/pallet"
      summary: "EntityPallet_GET"
      description: ""
      operationId: "EntityPallet_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet/close_inbound_sorting:
    post:
      tags:
      - "entity/pallet"
      summary: "EntityPalletCloseInboundSorting_POST"
      description: ""
      operationId: "EntityPalletCloseInboundSorting_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet/describe:
    get:
      tags:
      - "entity/pallet"
      summary: "EntityPalletDescribe_GET"
      description: ""
      operationId: "EntityPalletDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet/sort_lpn:
    post:
      tags:
      - "entity/pallet"
      summary: "EntityPalletSortLpn_POST"
      description: ""
      operationId: "EntityPalletSortLpn_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet/{id}:
    get:
      tags:
      - "entity/pallet"
      summary: "EntityPalletById_GET"
      description: ""
      operationId: "EntityPalletById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet/{id}/close_inbound_sorting:
    post:
      tags:
      - "entity/pallet"
      summary: "EntityPalletCloseInboundSortingById_POST"
      description: ""
      operationId: "EntityPalletCloseInboundSortingById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet_activity:
    get:
      tags:
      - "entity/pallet_activity"
      summary: "EntityPalletActivity_GET"
      description: ""
      operationId: "EntityPalletActivity_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet_activity/describe:
    get:
      tags:
      - "entity/pallet_activity"
      summary: "EntityPalletActivityDescribe_GET"
      description: ""
      operationId: "EntityPalletActivityDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet_activity/{id}:
    get:
      tags:
      - "entity/pallet_activity"
      summary: "EntityPalletActivityById_GET"
      description: ""
      operationId: "EntityPalletActivityById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet_status:
    get:
      tags:
      - "entity/pallet_status"
      summary: "EntityPalletStatus_GET"
      description: ""
      operationId: "EntityPalletStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet_status/describe:
    get:
      tags:
      - "entity/pallet_status"
      summary: "EntityPalletStatusDescribe_GET"
      description: ""
      operationId: "EntityPalletStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/pallet_status/{id}:
    get:
      tags:
      - "entity/pallet_status"
      summary: "EntityPalletStatusById_GET"
      description: ""
      operationId: "EntityPalletStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_manifest:
    get:
      tags:
      - "entity/parcel_manifest"
      summary: "EntityParcelManifest_GET"
      description: ""
      operationId: "EntityParcelManifest_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_manifest/describe:
    get:
      tags:
      - "entity/parcel_manifest"
      summary: "EntityParcelManifestDescribe_GET"
      description: ""
      operationId: "EntityParcelManifestDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_manifest/{id}:
    get:
      tags:
      - "entity/parcel_manifest"
      summary: "EntityParcelManifestById_GET"
      description: ""
      operationId: "EntityParcelManifestById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_manifest_status:
    get:
      tags:
      - "entity/parcel_manifest_status"
      summary: "EntityParcelManifestStatus_GET"
      description: ""
      operationId: "EntityParcelManifestStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_manifest_status/describe:
    get:
      tags:
      - "entity/parcel_manifest_status"
      summary: "EntityParcelManifestStatusDescribe_GET"
      description: ""
      operationId: "EntityParcelManifestStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_manifest_status/{id}:
    get:
      tags:
      - "entity/parcel_manifest_status"
      summary: "EntityParcelManifestStatusById_GET"
      description: ""
      operationId: "EntityParcelManifestStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_shipment:
    get:
      tags:
      - "entity/parcel_shipment"
      summary: "EntityParcelShipment_GET"
      description: ""
      operationId: "EntityParcelShipment_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_shipment/describe:
    get:
      tags:
      - "entity/parcel_shipment"
      summary: "EntityParcelShipmentDescribe_GET"
      description: ""
      operationId: "EntityParcelShipmentDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_shipment/{id}:
    get:
      tags:
      - "entity/parcel_shipment"
      summary: "EntityParcelShipmentById_GET"
      description: ""
      operationId: "EntityParcelShipmentById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_shipment_dtl:
    get:
      tags:
      - "entity/parcel_shipment_dtl"
      summary: "EntityParcelShipmentDtl_GET"
      description: ""
      operationId: "EntityParcelShipmentDtl_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_shipment_dtl/describe:
    get:
      tags:
      - "entity/parcel_shipment_dtl"
      summary: "EntityParcelShipmentDtlDescribe_GET"
      description: ""
      operationId: "EntityParcelShipmentDtlDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_shipment_dtl/{id}:
    get:
      tags:
      - "entity/parcel_shipment_dtl"
      summary: "EntityParcelShipmentDtlById_GET"
      description: ""
      operationId: "EntityParcelShipmentDtlById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_transaction_status:
    get:
      tags:
      - "entity/parcel_transaction_status"
      summary: "EntityParcelTransactionStatus_GET"
      description: ""
      operationId: "EntityParcelTransactionStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_transaction_status/describe:
    get:
      tags:
      - "entity/parcel_transaction_status"
      summary: "EntityParcelTransactionStatusDescribe_GET"
      description: ""
      operationId: "EntityParcelTransactionStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parcel_transaction_status/{id}:
    get:
      tags:
      - "entity/parcel_transaction_status"
      summary: "EntityParcelTransactionStatusById_GET"
      description: ""
      operationId: "EntityParcelTransactionStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parm_type:
    get:
      tags:
      - "entity/parm_type"
      summary: "EntityParmType_GET"
      description: ""
      operationId: "EntityParmType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parm_type/describe:
    get:
      tags:
      - "entity/parm_type"
      summary: "EntityParmTypeDescribe_GET"
      description: ""
      operationId: "EntityParmTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/parm_type/{id}:
    get:
      tags:
      - "entity/parm_type"
      summary: "EntityParmTypeById_GET"
      description: ""
      operationId: "EntityParmTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/payment_method:
    get:
      tags:
      - "entity/payment_method"
      summary: "EntityPaymentMethod_GET"
      description: ""
      operationId: "EntityPaymentMethod_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/payment_method/describe:
    get:
      tags:
      - "entity/payment_method"
      summary: "EntityPaymentMethodDescribe_GET"
      description: ""
      operationId: "EntityPaymentMethodDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/payment_method/{id}:
    get:
      tags:
      - "entity/payment_method"
      summary: "EntityPaymentMethodById_GET"
      description: ""
      operationId: "EntityPaymentMethodById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer:
    get:
      tags:
      - "entity/printer"
      summary: "EntityPrinter_GET"
      description: ""
      operationId: "EntityPrinter_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer/describe:
    get:
      tags:
      - "entity/printer"
      summary: "EntityPrinterDescribe_GET"
      description: ""
      operationId: "EntityPrinterDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer/{id}:
    get:
      tags:
      - "entity/printer"
      summary: "EntityPrinterById_GET"
      description: ""
      operationId: "EntityPrinterById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer_protocol:
    get:
      tags:
      - "entity/printer_protocol"
      summary: "EntityPrinterProtocol_GET"
      description: ""
      operationId: "EntityPrinterProtocol_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer_protocol/describe:
    get:
      tags:
      - "entity/printer_protocol"
      summary: "EntityPrinterProtocolDescribe_GET"
      description: ""
      operationId: "EntityPrinterProtocolDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer_protocol/{id}:
    get:
      tags:
      - "entity/printer_protocol"
      summary: "EntityPrinterProtocolById_GET"
      description: ""
      operationId: "EntityPrinterProtocolById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer_type:
    get:
      tags:
      - "entity/printer_type"
      summary: "EntityPrinterType_GET"
      description: ""
      operationId: "EntityPrinterType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer_type/describe:
    get:
      tags:
      - "entity/printer_type"
      summary: "EntityPrinterTypeDescribe_GET"
      description: ""
      operationId: "EntityPrinterTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/printer_type/{id}:
    get:
      tags:
      - "entity/printer_type"
      summary: "EntityPrinterTypeById_GET"
      description: ""
      operationId: "EntityPrinterTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/process_monitor_status:
    get:
      tags:
      - "entity/process_monitor_status"
      summary: "EntityProcessMonitorStatus_GET"
      description: ""
      operationId: "EntityProcessMonitorStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/process_monitor_status/describe:
    get:
      tags:
      - "entity/process_monitor_status"
      summary: "EntityProcessMonitorStatusDescribe_GET"
      description: ""
      operationId: "EntityProcessMonitorStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/process_monitor_status/{id}:
    get:
      tags:
      - "entity/process_monitor_status"
      summary: "EntityProcessMonitorStatusById_GET"
      description: ""
      operationId: "EntityProcessMonitorStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/property_prompt_mode:
    get:
      tags:
      - "entity/property_prompt_mode"
      summary: "EntityPropertyPromptMode_GET"
      description: ""
      operationId: "EntityPropertyPromptMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/property_prompt_mode/describe:
    get:
      tags:
      - "entity/property_prompt_mode"
      summary: "EntityPropertyPromptModeDescribe_GET"
      description: ""
      operationId: "EntityPropertyPromptModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/property_prompt_mode/{id}:
    get:
      tags:
      - "entity/property_prompt_mode"
      summary: "EntityPropertyPromptModeById_GET"
      description: ""
      operationId: "EntityPropertyPromptModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_dtl:
    get:
      tags:
      - "entity/purchase_order_dtl"
      summary: "EntityPurchaseOrderDtl_GET"
      description: ""
      operationId: "EntityPurchaseOrderDtl_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_dtl/describe:
    get:
      tags:
      - "entity/purchase_order_dtl"
      summary: "EntityPurchaseOrderDtlDescribe_GET"
      description: ""
      operationId: "EntityPurchaseOrderDtlDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_dtl/{id}:
    get:
      tags:
      - "entity/purchase_order_dtl"
      summary: "EntityPurchaseOrderDtlById_GET"
      description: ""
      operationId: "EntityPurchaseOrderDtlById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/purchase_order_dtl"
      summary: "EntityPurchaseOrderDtlById_PATCH"
      description: ""
      operationId: "EntityPurchaseOrderDtlById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_hdr:
    get:
      tags:
      - "entity/purchase_order_hdr"
      summary: "EntityPurchaseOrderHdr_GET"
      description: ""
      operationId: "EntityPurchaseOrderHdr_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_hdr/describe:
    get:
      tags:
      - "entity/purchase_order_hdr"
      summary: "EntityPurchaseOrderHdrDescribe_GET"
      description: ""
      operationId: "EntityPurchaseOrderHdrDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_hdr/{id}:
    get:
      tags:
      - "entity/purchase_order_hdr"
      summary: "EntityPurchaseOrderHdrById_GET"
      description: ""
      operationId: "EntityPurchaseOrderHdrById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/purchase_order_hdr"
      summary: "EntityPurchaseOrderHdrById_PATCH"
      description: ""
      operationId: "EntityPurchaseOrderHdrById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_status:
    get:
      tags:
      - "entity/purchase_order_status"
      summary: "EntityPurchaseOrderStatus_GET"
      description: ""
      operationId: "EntityPurchaseOrderStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_status/describe:
    get:
      tags:
      - "entity/purchase_order_status"
      summary: "EntityPurchaseOrderStatusDescribe_GET"
      description: ""
      operationId: "EntityPurchaseOrderStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/purchase_order_status/{id}:
    get:
      tags:
      - "entity/purchase_order_status"
      summary: "EntityPurchaseOrderStatusById_GET"
      description: ""
      operationId: "EntityPurchaseOrderStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_method:
    get:
      tags:
      - "entity/putaway_method"
      summary: "EntityPutawayMethod_GET"
      description: ""
      operationId: "EntityPutawayMethod_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_method/describe:
    get:
      tags:
      - "entity/putaway_method"
      summary: "EntityPutawayMethodDescribe_GET"
      description: ""
      operationId: "EntityPutawayMethodDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_method/{id}:
    get:
      tags:
      - "entity/putaway_method"
      summary: "EntityPutawayMethodById_GET"
      description: ""
      operationId: "EntityPutawayMethodById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_priority:
    get:
      tags:
      - "entity/putaway_priority"
      summary: "EntityPutawayPriority_GET"
      description: ""
      operationId: "EntityPutawayPriority_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/putaway_priority"
      summary: "EntityPutawayPriority_POST"
      description: ""
      operationId: "EntityPutawayPriority_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_priority/{id}:
    get:
      tags:
      - "entity/putaway_priority"
      summary: "EntityPutawayPriorityById_GET"
      description: ""
      operationId: "EntityPutawayPriorityById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_search_mode:
    get:
      tags:
      - "entity/putaway_search_mode"
      summary: "EntityPutawaySearchMode_GET"
      description: ""
      operationId: "EntityPutawaySearchMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_search_mode/describe:
    get:
      tags:
      - "entity/putaway_search_mode"
      summary: "EntityPutawaySearchModeDescribe_GET"
      description: ""
      operationId: "EntityPutawaySearchModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_search_mode/{id}:
    get:
      tags:
      - "entity/putaway_search_mode"
      summary: "EntityPutawaySearchModeById_GET"
      description: ""
      operationId: "EntityPutawaySearchModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_type:
    get:
      tags:
      - "entity/putaway_type"
      summary: "EntityPutawayType_GET"
      description: ""
      operationId: "EntityPutawayType_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/putaway_type"
      summary: "EntityPutawayType_POST"
      description: ""
      operationId: "EntityPutawayType_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_type/{id}:
    get:
      tags:
      - "entity/putaway_type"
      summary: "EntityPutawayTypeById_GET"
      description: ""
      operationId: "EntityPutawayTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_type_calc_rule:
    get:
      tags:
      - "entity/putaway_type_calc_rule"
      summary: "EntityPutawayTypeCalcRule_GET"
      description: ""
      operationId: "EntityPutawayTypeCalcRule_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/putaway_type_calc_rule"
      summary: "EntityPutawayTypeCalcRule_POST"
      description: ""
      operationId: "EntityPutawayTypeCalcRule_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/putaway_type_calc_rule/{id}:
    get:
      tags:
      - "entity/putaway_type_calc_rule"
      summary: "EntityPutawayTypeCalcRuleById_GET"
      description: ""
      operationId: "EntityPutawayTypeCalcRuleById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/qc_status:
    get:
      tags:
      - "entity/qc_status"
      summary: "EntityQcStatus_GET"
      description: ""
      operationId: "EntityQcStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/qc_status/describe:
    get:
      tags:
      - "entity/qc_status"
      summary: "EntityQcStatusDescribe_GET"
      description: ""
      operationId: "EntityQcStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/qc_status/{id}:
    get:
      tags:
      - "entity/qc_status"
      summary: "EntityQcStatusById_GET"
      description: ""
      operationId: "EntityQcStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/reason_code_type:
    get:
      tags:
      - "entity/reason_code_type"
      summary: "EntityReasonCodeType_GET"
      description: ""
      operationId: "EntityReasonCodeType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/reason_code_type/describe:
    get:
      tags:
      - "entity/reason_code_type"
      summary: "EntityReasonCodeTypeDescribe_GET"
      description: ""
      operationId: "EntityReasonCodeTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/reason_code_type/{id}:
    get:
      tags:
      - "entity/reason_code_type"
      summary: "EntityReasonCodeTypeById_GET"
      description: ""
      operationId: "EntityReasonCodeTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/receipt_validation_type:
    get:
      tags:
      - "entity/receipt_validation_type"
      summary: "EntityReceiptValidationType_GET"
      description: ""
      operationId: "EntityReceiptValidationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/receipt_validation_type/describe:
    get:
      tags:
      - "entity/receipt_validation_type"
      summary: "EntityReceiptValidationTypeDescribe_GET"
      description: ""
      operationId: "EntityReceiptValidationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/receipt_validation_type/{id}:
    get:
      tags:
      - "entity/receipt_validation_type"
      summary: "EntityReceiptValidationTypeById_GET"
      description: ""
      operationId: "EntityReceiptValidationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/record_status:
    get:
      tags:
      - "entity/record_status"
      summary: "EntityRecordStatus_GET"
      description: ""
      operationId: "EntityRecordStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/record_status/describe:
    get:
      tags:
      - "entity/record_status"
      summary: "EntityRecordStatusDescribe_GET"
      description: ""
      operationId: "EntityRecordStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/record_status/{id}:
    get:
      tags:
      - "entity/record_status"
      summary: "EntityRecordStatusById_GET"
      description: ""
      operationId: "EntityRecordStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/replenishment_trigger_mode:
    get:
      tags:
      - "entity/replenishment_trigger_mode"
      summary: "EntityReplenishmentTriggerMode_GET"
      description: ""
      operationId: "EntityReplenishmentTriggerMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/replenishment_trigger_mode/describe:
    get:
      tags:
      - "entity/replenishment_trigger_mode"
      summary: "EntityReplenishmentTriggerModeDescribe_GET"
      description: ""
      operationId: "EntityReplenishmentTriggerModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/replenishment_trigger_mode/{id}:
    get:
      tags:
      - "entity/replenishment_trigger_mode"
      summary: "EntityReplenishmentTriggerModeById_GET"
      description: ""
      operationId: "EntityReplenishmentTriggerModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/replenishment_zone:
    get:
      tags:
      - "entity/replenishment_zone"
      summary: "EntityReplenishmentZone_GET"
      description: ""
      operationId: "EntityReplenishmentZone_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/replenishment_zone"
      summary: "EntityReplenishmentZone_POST"
      description: ""
      operationId: "EntityReplenishmentZone_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/replenishment_zone/{id}:
    get:
      tags:
      - "entity/replenishment_zone"
      summary: "EntityReplenishmentZoneById_GET"
      description: ""
      operationId: "EntityReplenishmentZoneById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/report_sub_type:
    get:
      tags:
      - "entity/report_sub_type"
      summary: "EntityReportSubType_GET"
      description: ""
      operationId: "EntityReportSubType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/report_sub_type/describe:
    get:
      tags:
      - "entity/report_sub_type"
      summary: "EntityReportSubTypeDescribe_GET"
      description: ""
      operationId: "EntityReportSubTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/report_sub_type/{id}:
    get:
      tags:
      - "entity/report_sub_type"
      summary: "EntityReportSubTypeById_GET"
      description: ""
      operationId: "EntityReportSubTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/report_type:
    get:
      tags:
      - "entity/report_type"
      summary: "EntityReportType_GET"
      description: ""
      operationId: "EntityReportType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/report_type/describe:
    get:
      tags:
      - "entity/report_type"
      summary: "EntityReportTypeDescribe_GET"
      description: ""
      operationId: "EntityReportTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/report_type/{id}:
    get:
      tags:
      - "entity/report_type"
      summary: "EntityReportTypeById_GET"
      description: ""
      operationId: "EntityReportTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/reserve_location:
    get:
      tags:
      - "entity/reserve_location"
      summary: "EntityReserveLocation_GET"
      description: ""
      operationId: "EntityReserveLocation_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/reserve_location/describe:
    get:
      tags:
      - "entity/reserve_location"
      summary: "EntityReserveLocationDescribe_GET"
      description: ""
      operationId: "EntityReserveLocationDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/reserve_location/{id}:
    get:
      tags:
      - "entity/reserve_location"
      summary: "EntityReserveLocationById_GET"
      description: ""
      operationId: "EntityReserveLocationById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/reserve_location"
      summary: "EntityReserveLocationById_PATCH"
      description: ""
      operationId: "EntityReserveLocationById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/rf_key_code:
    get:
      tags:
      - "entity/rf_key_code"
      summary: "EntityRfKeyCode_GET"
      description: ""
      operationId: "EntityRfKeyCode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/rf_key_code/describe:
    get:
      tags:
      - "entity/rf_key_code"
      summary: "EntityRfKeyCodeDescribe_GET"
      description: ""
      operationId: "EntityRfKeyCodeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/rf_key_code/{id}:
    get:
      tags:
      - "entity/rf_key_code"
      summary: "EntityRfKeyCodeById_GET"
      description: ""
      operationId: "EntityRfKeyCodeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/route_hdr_status:
    get:
      tags:
      - "entity/route_hdr_status"
      summary: "EntityRouteHdrStatus_GET"
      description: ""
      operationId: "EntityRouteHdrStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/route_hdr_status/describe:
    get:
      tags:
      - "entity/route_hdr_status"
      summary: "EntityRouteHdrStatusDescribe_GET"
      description: ""
      operationId: "EntityRouteHdrStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/route_hdr_status/{id}:
    get:
      tags:
      - "entity/route_hdr_status"
      summary: "EntityRouteHdrStatusById_GET"
      description: ""
      operationId: "EntityRouteHdrStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/routing_mode:
    get:
      tags:
      - "entity/routing_mode"
      summary: "EntityRoutingMode_GET"
      description: ""
      operationId: "EntityRoutingMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/routing_mode/describe:
    get:
      tags:
      - "entity/routing_mode"
      summary: "EntityRoutingModeDescribe_GET"
      description: ""
      operationId: "EntityRoutingModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/routing_mode/{id}:
    get:
      tags:
      - "entity/routing_mode"
      summary: "EntityRoutingModeById_GET"
      description: ""
      operationId: "EntityRoutingModeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/screen_type:
    get:
      tags:
      - "entity/screen_type"
      summary: "EntityScreenType_GET"
      description: ""
      operationId: "EntityScreenType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/screen_type/describe:
    get:
      tags:
      - "entity/screen_type"
      summary: "EntityScreenTypeDescribe_GET"
      description: ""
      operationId: "EntityScreenTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/screen_type/{id}:
    get:
      tags:
      - "entity/screen_type"
      summary: "EntityScreenTypeById_GET"
      description: ""
      operationId: "EntityScreenTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/selection_type:
    get:
      tags:
      - "entity/selection_type"
      summary: "EntitySelectionType_GET"
      description: ""
      operationId: "EntitySelectionType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/selection_type/describe:
    get:
      tags:
      - "entity/selection_type"
      summary: "EntitySelectionTypeDescribe_GET"
      description: ""
      operationId: "EntitySelectionTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/selection_type/{id}:
    get:
      tags:
      - "entity/selection_type"
      summary: "EntitySelectionTypeById_GET"
      description: ""
      operationId: "EntitySelectionTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/seq_counter:
    get:
      tags:
      - "entity/seq_counter"
      summary: "EntitySeqCounter_GET"
      description: ""
      operationId: "EntitySeqCounter_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/seq_counter/describe:
    get:
      tags:
      - "entity/seq_counter"
      summary: "EntitySeqCounterDescribe_GET"
      description: ""
      operationId: "EntitySeqCounterDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/seq_counter/{id}:
    get:
      tags:
      - "entity/seq_counter"
      summary: "EntitySeqCounterById_GET"
      description: ""
      operationId: "EntitySeqCounterById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr:
    get:
      tags:
      - "entity/serial_nbr"
      summary: "EntitySerialNbr_GET"
      description: ""
      operationId: "EntitySerialNbr_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr/describe:
    get:
      tags:
      - "entity/serial_nbr"
      summary: "EntitySerialNbrDescribe_GET"
      description: ""
      operationId: "EntitySerialNbrDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr/{id}:
    get:
      tags:
      - "entity/serial_nbr"
      summary: "EntitySerialNbrById_GET"
      description: ""
      operationId: "EntitySerialNbrById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr_action_code:
    get:
      tags:
      - "entity/serial_nbr_action_code"
      summary: "EntitySerialNbrActionCode_GET"
      description: ""
      operationId: "EntitySerialNbrActionCode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr_action_code/describe:
    get:
      tags:
      - "entity/serial_nbr_action_code"
      summary: "EntitySerialNbrActionCodeDescribe_GET"
      description: ""
      operationId: "EntitySerialNbrActionCodeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr_action_code/{id}:
    get:
      tags:
      - "entity/serial_nbr_action_code"
      summary: "EntitySerialNbrActionCodeById_GET"
      description: ""
      operationId: "EntitySerialNbrActionCodeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr_inventory:
    get:
      tags:
      - "entity/serial_nbr_inventory"
      summary: "EntitySerialNbrInventory_GET"
      description: ""
      operationId: "EntitySerialNbrInventory_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr_inventory/describe:
    get:
      tags:
      - "entity/serial_nbr_inventory"
      summary: "EntitySerialNbrInventoryDescribe_GET"
      description: ""
      operationId: "EntitySerialNbrInventoryDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/serial_nbr_inventory/{id}:
    get:
      tags:
      - "entity/serial_nbr_inventory"
      summary: "EntitySerialNbrInventoryById_GET"
      description: ""
      operationId: "EntitySerialNbrInventoryById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shift:
    get:
      tags:
      - "entity/shift"
      summary: "EntityShift_GET"
      description: ""
      operationId: "EntityShift_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shift/describe:
    get:
      tags:
      - "entity/shift"
      summary: "EntityShiftDescribe_GET"
      description: ""
      operationId: "EntityShiftDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shift/{id}:
    get:
      tags:
      - "entity/shift"
      summary: "EntityShiftById_GET"
      description: ""
      operationId: "EntityShiftById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shipment_verif_orderdtl_cancel_mode:
    get:
      tags:
      - "entity/shipment_verif_orderdtl_cancel_mode"
      summary: "EntityShipmentVerifOrderdtlCancelMode_GET"
      description: ""
      operationId: "EntityShipmentVerifOrderdtlCancelMode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shipment_verif_orderdtl_cancel_mode/describe:
    get:
      tags:
      - "entity/shipment_verif_orderdtl_cancel_mode"
      summary: "EntityShipmentVerifOrderdtlCancelModeDescribe_GET"
      description: ""
      operationId: "EntityShipmentVerifOrderdtlCancelModeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shipment_verif_orderdtl_cancel_mode/{id}:
    get:
      tags:
      - "entity/shipment_verif_orderdtl_cancel_mode"
      summary: "EntityShipmentVerifOrderdtlCancelMode_GET"
      description: ""
      operationId: "GetEntityShipmentVerifOrderdtlCancelMode_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shipping_blocked_selection_criteria:
    get:
      tags:
      - "entity/shipping_blocked_selection_criteria"
      summary: "EntityShippingBlockedSelectionCriteria_GET"
      description: ""
      operationId: "EntityShippingBlockedSelectionCriteria_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shipping_blocked_selection_criteria/describe:
    get:
      tags:
      - "entity/shipping_blocked_selection_criteria"
      summary: "EntityShippingBlockedSelectionCriteriaDescribe_GET"
      description: ""
      operationId: "EntityShippingBlockedSelectionCriteriaDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/shipping_blocked_selection_criteria/{id}:
    get:
      tags:
      - "entity/shipping_blocked_selection_criteria"
      summary: "EntityShippingBlockedSelectionCriteria_GET"
      description: ""
      operationId: "GetEntityShippingBlockedSelectionCriteria_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/sql_operator:
    get:
      tags:
      - "entity/sql_operator"
      summary: "EntitySqlOperator_GET"
      description: ""
      operationId: "EntitySqlOperator_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/sql_operator/describe:
    get:
      tags:
      - "entity/sql_operator"
      summary: "EntitySqlOperatorDescribe_GET"
      description: ""
      operationId: "EntitySqlOperatorDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/sql_operator/{id}:
    get:
      tags:
      - "entity/sql_operator"
      summary: "EntitySqlOperatorById_GET"
      description: ""
      operationId: "EntitySqlOperatorById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/sql_selection:
    get:
      tags:
      - "entity/sql_selection"
      summary: "EntitySqlSelection_GET"
      description: ""
      operationId: "EntitySqlSelection_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/sql_selection"
      summary: "EntitySqlSelection_POST"
      description: ""
      operationId: "EntitySqlSelection_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/sql_selection/{id}:
    get:
      tags:
      - "entity/sql_selection"
      summary: "EntitySqlSelectionById_GET"
      description: ""
      operationId: "EntitySqlSelectionById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/stage_status:
    get:
      tags:
      - "entity/stage_status"
      summary: "EntityStageStatus_GET"
      description: ""
      operationId: "EntityStageStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/stage_status/describe:
    get:
      tags:
      - "entity/stage_status"
      summary: "EntityStageStatusDescribe_GET"
      description: ""
      operationId: "EntityStageStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/stage_status/{id}:
    get:
      tags:
      - "entity/stage_status"
      summary: "EntityStageStatusById_GET"
      description: ""
      operationId: "EntityStageStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/standard_check_digit_method:
    get:
      tags:
      - "entity/standard_check_digit_method"
      summary: "EntityStandardCheckDigitMethod_GET"
      description: ""
      operationId: "EntityStandardCheckDigitMethod_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/standard_check_digit_method/describe:
    get:
      tags:
      - "entity/standard_check_digit_method"
      summary: "EntityStandardCheckDigitMethodDescribe_GET"
      description: ""
      operationId: "EntityStandardCheckDigitMethodDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/standard_check_digit_method/{id}:
    get:
      tags:
      - "entity/standard_check_digit_method"
      summary: "EntityStandardCheckDigitMethodById_GET"
      description: ""
      operationId: "EntityStandardCheckDigitMethodById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/stop_status:
    get:
      tags:
      - "entity/stop_status"
      summary: "EntityStopStatus_GET"
      description: ""
      operationId: "EntityStopStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/stop_status/describe:
    get:
      tags:
      - "entity/stop_status"
      summary: "EntityStopStatusDescribe_GET"
      description: ""
      operationId: "EntityStopStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/stop_status/{id}:
    get:
      tags:
      - "entity/stop_status"
      summary: "EntityStopStatusById_GET"
      description: ""
      operationId: "EntityStopStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task:
    get:
      tags:
      - "entity/task"
      summary: "EntityTask_GET"
      description: ""
      operationId: "EntityTask_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      - name: "facility_id"
        in: "query"
        description: ""
        required: false
        type: "integer"
        x-exportParamName: "FacilityId"
        x-optionalDataType: "Int32"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityIdCode"
        x-optionalDataType: "String"
      - name: "location_barcode"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "LocationBarcode"
        x-optionalDataType: "String"
      - name: "task_type"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "TaskType"
        x-optionalDataType: "String"
      - name: "ordering_rule"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "OrderingRule"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task/describe:
    get:
      tags:
      - "entity/task"
      summary: "EntityTaskDescribe_GET"
      description: ""
      operationId: "EntityTaskDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task/next_task:
    get:
      tags:
      - "entity/task"
      summary: "EntityTaskNextTask_GET"
      description: ""
      operationId: "EntityTaskNextTask_GET"
      parameters:
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "FacilityIdCode"
      - name: "location_barcode"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LocationBarcode"
      - name: "ordering_rule"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "OrderingRule"
      - name: "task_type"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "TaskType"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task/{id}:
    get:
      tags:
      - "entity/task"
      summary: "EntityTaskById_GET"
      description: ""
      operationId: "EntityTaskById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task_activity:
    get:
      tags:
      - "entity/task_activity"
      summary: "EntityTaskActivity_GET"
      description: ""
      operationId: "EntityTaskActivity_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task_activity/describe:
    get:
      tags:
      - "entity/task_activity"
      summary: "EntityTaskActivityDescribe_GET"
      description: ""
      operationId: "EntityTaskActivityDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task_activity/{id}:
    get:
      tags:
      - "entity/task_activity"
      summary: "EntityTaskActivityById_GET"
      description: ""
      operationId: "EntityTaskActivityById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task_status:
    get:
      tags:
      - "entity/task_status"
      summary: "EntityTaskStatus_GET"
      description: ""
      operationId: "EntityTaskStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task_status/describe:
    get:
      tags:
      - "entity/task_status"
      summary: "EntityTaskStatusDescribe_GET"
      description: ""
      operationId: "EntityTaskStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/task_status/{id}:
    get:
      tags:
      - "entity/task_status"
      summary: "EntityTaskStatusById_GET"
      description: ""
      operationId: "EntityTaskStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/template_type:
    get:
      tags:
      - "entity/template_type"
      summary: "EntityTemplateType_GET"
      description: ""
      operationId: "EntityTemplateType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/template_type/describe:
    get:
      tags:
      - "entity/template_type"
      summary: "EntityTemplateTypeDescribe_GET"
      description: ""
      operationId: "EntityTemplateTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/template_type/{id}:
    get:
      tags:
      - "entity/template_type"
      summary: "EntityTemplateTypeById_GET"
      description: ""
      operationId: "EntityTemplateTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/time_format:
    get:
      tags:
      - "entity/time_format"
      summary: "EntityTimeFormat_GET"
      description: ""
      operationId: "EntityTimeFormat_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/time_format/describe:
    get:
      tags:
      - "entity/time_format"
      summary: "EntityTimeFormatDescribe_GET"
      description: ""
      operationId: "EntityTimeFormatDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/time_format/{id}:
    get:
      tags:
      - "entity/time_format"
      summary: "EntityTimeFormatById_GET"
      description: ""
      operationId: "EntityTimeFormatById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/time_zone:
    get:
      tags:
      - "entity/time_zone"
      summary: "EntityTimeZone_GET"
      description: ""
      operationId: "EntityTimeZone_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/time_zone/describe:
    get:
      tags:
      - "entity/time_zone"
      summary: "EntityTimeZoneDescribe_GET"
      description: ""
      operationId: "EntityTimeZoneDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/time_zone/{id}:
    get:
      tags:
      - "entity/time_zone"
      summary: "EntityTimeZoneById_GET"
      description: ""
      operationId: "EntityTimeZoneById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer:
    get:
      tags:
      - "entity/trailer"
      summary: "EntityTrailer_GET"
      description: ""
      operationId: "EntityTrailer_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "entity/trailer"
      summary: "EntityTrailer_POST"
      description: ""
      operationId: "EntityTrailer_POST"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer/describe:
    get:
      tags:
      - "entity/trailer"
      summary: "EntityTrailerDescribe_GET"
      description: ""
      operationId: "EntityTrailerDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer/locate_to_yard:
    post:
      tags:
      - "entity/trailer"
      summary: "EntityTrailerLocateToYard_POST"
      description: ""
      operationId: "EntityTrailerLocateToYard_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer/remove_from_yard:
    post:
      tags:
      - "entity/trailer"
      summary: "EntityTrailerRemoveFromYard_POST"
      description: ""
      operationId: "EntityTrailerRemoveFromYard_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer/{id}:
    get:
      tags:
      - "entity/trailer"
      summary: "EntityTrailerById_GET"
      description: ""
      operationId: "EntityTrailerById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer/{id}/locate_to_yard:
    post:
      tags:
      - "entity/trailer"
      summary: "EntityTrailerLocateToYardById_POST"
      description: ""
      operationId: "EntityTrailerLocateToYardById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/trailer/{id}/remove_from_yard:
    post:
      tags:
      - "entity/trailer"
      summary: "EntityTrailerRemoveFromYardById_POST"
      description: ""
      operationId: "EntityTrailerRemoveFromYardById_POST"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/uom:
    get:
      tags:
      - "entity/uom"
      summary: "EntityUom_GET"
      description: ""
      operationId: "EntityUom_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/uom/describe:
    get:
      tags:
      - "entity/uom"
      summary: "EntityUomDescribe_GET"
      description: ""
      operationId: "EntityUomDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/uom/{id}:
    get:
      tags:
      - "entity/uom"
      summary: "EntityUomById_GET"
      description: ""
      operationId: "EntityUomById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ups_routing_code:
    get:
      tags:
      - "entity/ups_routing_code"
      summary: "EntityUpsRoutingCode_GET"
      description: ""
      operationId: "EntityUpsRoutingCode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ups_routing_code/describe:
    get:
      tags:
      - "entity/ups_routing_code"
      summary: "EntityUpsRoutingCodeDescribe_GET"
      description: ""
      operationId: "EntityUpsRoutingCodeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/ups_routing_code/{id}:
    get:
      tags:
      - "entity/ups_routing_code"
      summary: "EntityUpsRoutingCodeById_GET"
      description: ""
      operationId: "EntityUpsRoutingCodeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user:
    get:
      tags:
      - "entity/user"
      summary: "EntityUser_GET"
      description: ""
      operationId: "EntityUser_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user/describe:
    get:
      tags:
      - "entity/user"
      summary: "EntityUserDescribe_GET"
      description: ""
      operationId: "EntityUserDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user/{id}:
    get:
      tags:
      - "entity/user"
      summary: "EntityUserById_GET"
      description: ""
      operationId: "EntityUserById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user_company:
    get:
      tags:
      - "entity/user_company"
      summary: "EntityUserCompany_GET"
      description: ""
      operationId: "EntityUserCompany_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user_company/describe:
    get:
      tags:
      - "entity/user_company"
      summary: "EntityUserCompanyDescribe_GET"
      description: ""
      operationId: "EntityUserCompanyDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user_company/{id}:
    get:
      tags:
      - "entity/user_company"
      summary: "EntityUserCompanyById_GET"
      description: ""
      operationId: "EntityUserCompanyById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user_facility:
    get:
      tags:
      - "entity/user_facility"
      summary: "EntityUserFacility_GET"
      description: ""
      operationId: "EntityUserFacility_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user_facility/describe:
    get:
      tags:
      - "entity/user_facility"
      summary: "EntityUserFacilityDescribe_GET"
      description: ""
      operationId: "EntityUserFacilityDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/user_facility/{id}:
    get:
      tags:
      - "entity/user_facility"
      summary: "EntityUserFacilityById_GET"
      description: ""
      operationId: "EntityUserFacilityById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/value_type:
    get:
      tags:
      - "entity/value_type"
      summary: "EntityValueType_GET"
      description: ""
      operationId: "EntityValueType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/value_type/describe:
    get:
      tags:
      - "entity/value_type"
      summary: "EntityValueTypeDescribe_GET"
      description: ""
      operationId: "EntityValueTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/value_type/{id}:
    get:
      tags:
      - "entity/value_type"
      summary: "EntityValueTypeById_GET"
      description: ""
      operationId: "EntityValueTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vas_execution_status:
    get:
      tags:
      - "entity/vas_execution_status"
      summary: "EntityVasExecutionStatus_GET"
      description: ""
      operationId: "EntityVasExecutionStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vas_execution_status/describe:
    get:
      tags:
      - "entity/vas_execution_status"
      summary: "EntityVasExecutionStatusDescribe_GET"
      description: ""
      operationId: "EntityVasExecutionStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vas_execution_status/{id}:
    get:
      tags:
      - "entity/vas_execution_status"
      summary: "EntityVasExecutionStatusById_GET"
      description: ""
      operationId: "EntityVasExecutionStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vas_requirement_type:
    get:
      tags:
      - "entity/vas_requirement_type"
      summary: "EntityVasRequirementType_GET"
      description: ""
      operationId: "EntityVasRequirementType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vas_requirement_type/describe:
    get:
      tags:
      - "entity/vas_requirement_type"
      summary: "EntityVasRequirementTypeDescribe_GET"
      description: ""
      operationId: "EntityVasRequirementTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vas_requirement_type/{id}:
    get:
      tags:
      - "entity/vas_requirement_type"
      summary: "EntityVasRequirementTypeById_GET"
      description: ""
      operationId: "EntityVasRequirementTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vendor:
    get:
      tags:
      - "entity/vendor"
      summary: "EntityVendor_GET"
      description: ""
      operationId: "EntityVendor_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vendor/{id}:
    get:
      tags:
      - "entity/vendor"
      summary: "EntityVendorById_GET"
      description: ""
      operationId: "EntityVendorById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/vendor"
      summary: "EntityVendorById_PATCH"
      description: ""
      operationId: "EntityVendorById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/vendor/describe:
    get:
      tags:
      - "entity/vendor"
      summary: "EntityVendorDescribe_GET"
      description: ""
      operationId: "EntityVendorDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/verification_entity:
    get:
      tags:
      - "entity/verification_entity"
      summary: "EntityVerificationEntity_GET"
      description: ""
      operationId: "EntityVerificationEntity_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/verification_entity/describe:
    get:
      tags:
      - "entity/verification_entity"
      summary: "EntityVerificationEntityDescribe_GET"
      description: ""
      operationId: "EntityVerificationEntityDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/verification_entity/{id}:
    get:
      tags:
      - "entity/verification_entity"
      summary: "EntityVerificationEntityById_GET"
      description: ""
      operationId: "EntityVerificationEntityById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/verification_type:
    get:
      tags:
      - "entity/verification_type"
      summary: "EntityVerificationType_GET"
      description: ""
      operationId: "EntityVerificationType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/verification_type/describe:
    get:
      tags:
      - "entity/verification_type"
      summary: "EntityVerificationTypeDescribe_GET"
      description: ""
      operationId: "EntityVerificationTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/verification_type/{id}:
    get:
      tags:
      - "entity/verification_type"
      summary: "EntityVerificationTypeById_GET"
      description: ""
      operationId: "EntityVerificationTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave:
    get:
      tags:
      - "entity/wave"
      summary: "EntityWave_GET"
      description: ""
      operationId: "EntityWave_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave/describe:
    get:
      tags:
      - "entity/wave"
      summary: "EntityWaveDescribe_GET"
      description: ""
      operationId: "EntityWaveDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave/{id}:
    get:
      tags:
      - "entity/wave"
      summary: "EntityWaveById_GET"
      description: ""
      operationId: "EntityWaveById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_mhe_status:
    get:
      tags:
      - "entity/wave_mhe_status"
      summary: "EntityWaveMheStatus_GET"
      description: ""
      operationId: "EntityWaveMheStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_mhe_status/describe:
    get:
      tags:
      - "entity/wave_mhe_status"
      summary: "EntityWaveMheStatusDescribe_GET"
      description: ""
      operationId: "EntityWaveMheStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_mhe_status/{id}:
    get:
      tags:
      - "entity/wave_mhe_status"
      summary: "EntityWaveMheStatusById_GET"
      description: ""
      operationId: "EntityWaveMheStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_stage:
    get:
      tags:
      - "entity/wave_stage"
      summary: "EntityWaveStage_GET"
      description: ""
      operationId: "EntityWaveStage_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_stage/describe:
    get:
      tags:
      - "entity/wave_stage"
      summary: "EntityWaveStageDescribe_GET"
      description: ""
      operationId: "EntityWaveStageDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_stage/{id}:
    get:
      tags:
      - "entity/wave_stage"
      summary: "EntityWaveStageById_GET"
      description: ""
      operationId: "EntityWaveStageById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_status:
    get:
      tags:
      - "entity/wave_status"
      summary: "EntityWaveStatus_GET"
      description: ""
      operationId: "EntityWaveStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_status/describe:
    get:
      tags:
      - "entity/wave_status"
      summary: "EntityWaveStatusDescribe_GET"
      description: ""
      operationId: "EntityWaveStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_status/{id}:
    get:
      tags:
      - "entity/wave_status"
      summary: "EntityWaveStatusById_GET"
      description: ""
      operationId: "EntityWaveStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_template:
    get:
      tags:
      - "entity/wave_template"
      summary: "EntityWaveTemplate_GET"
      description: ""
      operationId: "EntityWaveTemplate_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_template/describe:
    get:
      tags:
      - "entity/wave_template"
      summary: "EntityWaveTemplateDescribe_GET"
      description: ""
      operationId: "EntityWaveTemplateDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_template/{id}:
    get:
      tags:
      - "entity/wave_template"
      summary: "EntityWaveTemplateById_GET"
      description: ""
      operationId: "EntityWaveTemplateById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_template_status:
    get:
      tags:
      - "entity/wave_template_status"
      summary: "EntityWaveTemplateStatus_GET"
      description: ""
      operationId: "EntityWaveTemplateStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_template_status/describe:
    get:
      tags:
      - "entity/wave_template_status"
      summary: "EntityWaveTemplateStatusDescribe_GET"
      description: ""
      operationId: "EntityWaveTemplateStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_template_status/{id}:
    get:
      tags:
      - "entity/wave_template_status"
      summary: "EntityWaveTemplateStatusById_GET"
      description: ""
      operationId: "EntityWaveTemplateStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_type:
    get:
      tags:
      - "entity/wave_type"
      summary: "EntityWaveType_GET"
      description: ""
      operationId: "EntityWaveType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_type/describe:
    get:
      tags:
      - "entity/wave_type"
      summary: "EntityWaveTypeDescribe_GET"
      description: ""
      operationId: "EntityWaveTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wave_type/{id}:
    get:
      tags:
      - "entity/wave_type"
      summary: "EntityWaveTypeById_GET"
      description: ""
      operationId: "EntityWaveTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wms_activity_code:
    get:
      tags:
      - "entity/wms_activity_code"
      summary: "EntityWmsActivityCode_GET"
      description: ""
      operationId: "EntityWmsActivityCode_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wms_activity_code/describe:
    get:
      tags:
      - "entity/wms_activity_code"
      summary: "EntityWmsActivityCodeDescribe_GET"
      description: ""
      operationId: "EntityWmsActivityCodeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wms_activity_code/{id}:
    get:
      tags:
      - "entity/wms_activity_code"
      summary: "EntityWmsActivityCodeById_GET"
      description: ""
      operationId: "EntityWmsActivityCodeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wms_activity_status:
    get:
      tags:
      - "entity/wms_activity_status"
      summary: "EntityWmsActivityStatus_GET"
      description: ""
      operationId: "EntityWmsActivityStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wms_activity_status/describe:
    get:
      tags:
      - "entity/wms_activity_status"
      summary: "EntityWmsActivityStatusDescribe_GET"
      description: ""
      operationId: "EntityWmsActivityStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/wms_activity_status/{id}:
    get:
      tags:
      - "entity/wms_activity_status"
      summary: "EntityWmsActivityStatusById_GET"
      description: ""
      operationId: "EntityWmsActivityStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_area_activity_type:
    get:
      tags:
      - "entity/work_area_activity_type"
      summary: "EntityWorkAreaActivityType_GET"
      description: ""
      operationId: "EntityWorkAreaActivityType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_area_activity_type/describe:
    get:
      tags:
      - "entity/work_area_activity_type"
      summary: "EntityWorkAreaActivityTypeDescribe_GET"
      description: ""
      operationId: "EntityWorkAreaActivityTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_area_activity_type/{id}:
    get:
      tags:
      - "entity/work_area_activity_type"
      summary: "EntityWorkAreaActivityTypeById_GET"
      description: ""
      operationId: "EntityWorkAreaActivityTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_activity_type:
    get:
      tags:
      - "entity/work_order_activity_type"
      summary: "EntityWorkOrderActivityType_GET"
      description: ""
      operationId: "EntityWorkOrderActivityType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_activity_type/describe:
    get:
      tags:
      - "entity/work_order_activity_type"
      summary: "EntityWorkOrderActivityTypeDescribe_GET"
      description: ""
      operationId: "EntityWorkOrderActivityTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_activity_type/{id}:
    get:
      tags:
      - "entity/work_order_activity_type"
      summary: "EntityWorkOrderActivityTypeById_GET"
      description: ""
      operationId: "EntityWorkOrderActivityTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_component:
    get:
      tags:
      - "entity/work_order_component"
      summary: "EntityWorkOrderComponent_GET"
      description: ""
      operationId: "EntityWorkOrderComponent_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_component/describe:
    get:
      tags:
      - "entity/work_order_component"
      summary: "EntityWorkOrderComponentDescribe_GET"
      description: ""
      operationId: "EntityWorkOrderComponentDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_component/{id}:
    get:
      tags:
      - "entity/work_order_component"
      summary: "EntityWorkOrderComponentById_GET"
      description: ""
      operationId: "EntityWorkOrderComponentById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_hdr:
    get:
      tags:
      - "entity/work_order_hdr"
      summary: "EntityWorkOrderHdr_GET"
      description: ""
      operationId: "EntityWorkOrderHdr_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_hdr/describe:
    get:
      tags:
      - "entity/work_order_hdr"
      summary: "EntityWorkOrderHdrDescribe_GET"
      description: ""
      operationId: "EntityWorkOrderHdrDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_hdr/{id}:
    get:
      tags:
      - "entity/work_order_hdr"
      summary: "EntityWorkOrderHdrById_GET"
      description: ""
      operationId: "EntityWorkOrderHdrById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/work_order_hdr"
      summary: "EntityWorkOrderHdrById_PATCH"
      description: ""
      operationId: "EntityWorkOrderHdrById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_kit:
    get:
      tags:
      - "entity/work_order_kit"
      summary: "EntityWorkOrderKit_GET"
      description: ""
      operationId: "EntityWorkOrderKit_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_kit/describe:
    get:
      tags:
      - "entity/work_order_kit"
      summary: "EntityWorkOrderKitDescribe_GET"
      description: ""
      operationId: "EntityWorkOrderKitDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_kit/{id}:
    get:
      tags:
      - "entity/work_order_kit"
      summary: "EntityWorkOrderKitById_GET"
      description: ""
      operationId: "EntityWorkOrderKitById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    patch:
      tags:
      - "entity/work_order_kit"
      summary: "EntityWorkOrderKitById_PATCH"
      description: ""
      operationId: "EntityWorkOrderKitById_PATCH"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_status:
    get:
      tags:
      - "entity/work_order_status"
      summary: "EntityWorkOrderStatus_GET"
      description: ""
      operationId: "EntityWorkOrderStatus_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_status/describe:
    get:
      tags:
      - "entity/work_order_status"
      summary: "EntityWorkOrderStatusDescribe_GET"
      description: ""
      operationId: "EntityWorkOrderStatusDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_status/{id}:
    get:
      tags:
      - "entity/work_order_status"
      summary: "EntityWorkOrderStatusById_GET"
      description: ""
      operationId: "EntityWorkOrderStatusById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_type:
    get:
      tags:
      - "entity/work_order_type"
      summary: "EntityWorkOrderType_GET"
      description: ""
      operationId: "EntityWorkOrderType_GET"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "ordering"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "page_mode"
        in: "query"
        required: false
        type: "string"
        default: "paged"
        enum:
        - "paged"
        - "sequenced"
        x-exportParamName: "PageMode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_type/describe:
    get:
      tags:
      - "entity/work_order_type"
      summary: "EntityWorkOrderTypeDescribe_GET"
      description: ""
      operationId: "EntityWorkOrderTypeDescribe_GET"
      parameters: []
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /entity/work_order_type/{id}:
    get:
      tags:
      - "entity/work_order_type"
      summary: "EntityWorkOrderTypeById_GET"
      description: ""
      operationId: "EntityWorkOrderTypeById_GET"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /pick_pack/close_lpn:
    post:
      tags:
      - "pick_pack"
      summary: "PickPackCloseLpn_POST"
      description: ""
      operationId: "PickPackCloseLpn_POST"
      parameters:
      - name: "async_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "AsyncFlg"
        x-optionalDataType: "Bool"
      - name: "close_container_status"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CloseContainerStatus"
        x-optionalDataType: "String"
      - name: "company_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "CompanyId"
        x-optionalDataType: "Float32"
      - name: "company_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CompanyIdCode"
        x-optionalDataType: "String"
      - name: "facility_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "FacilityId"
        x-optionalDataType: "Float32"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityIdCode"
        x-optionalDataType: "String"
      - name: "reason_code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ReasonCode"
        x-optionalDataType: "String"
      - name: "short_on_close_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "ShortOnCloseFlg"
        x-optionalDataType: "Bool"
      - name: "to_container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ToContainerNbr"
      - name: "update_inventory_on_short_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "UpdateInventoryOnShortFlg"
        x-optionalDataType: "Bool"
      - name: "to_container__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ToContainerCode"
        x-optionalDataType: "String"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /pick_pack/pick_confirm:
    post:
      tags:
      - "pick_pack"
      summary: "PickPackPickConfirm_POST"
      description: ""
      operationId: "PickPackPickConfirm_POST"
      parameters:
      - name: "allocation_uom"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "AllocationUom"
        x-optionalDataType: "String"
      - name: "async_flg"
        in: "query"
        description: ""
        required: true
        type: "boolean"
        x-exportParamName: "AsyncFlg"
      - name: "batch_nbr"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "BatchNbr"
        x-optionalDataType: "String"
      - name: "close_container_status"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CloseContainerStatus"
        x-optionalDataType: "String"
      - name: "company_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "CompanyId"
        x-optionalDataType: "Float32"
      - name: "company_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CompanyIdCode"
        x-optionalDataType: "String"
      - name: "facility_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "FacilityId"
        x-optionalDataType: "Float32"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityIdCode"
        x-optionalDataType: "String"
      - name: "from_container_nbr"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FromContainerNbr"
        x-optionalDataType: "String"
      - name: "item_alternate_code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ItemAlternateCode"
        x-optionalDataType: "String"
      - name: "item_barcode"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ItemBarcode"
        x-optionalDataType: "String"
      - name: "mhe_mode_flg"
        in: "query"
        description: ""
        required: true
        type: "boolean"
        x-exportParamName: "MheModeFlg"
      - name: "mhe_system_code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "MheSystemCode"
        x-optionalDataType: "String"
      - name: "order_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "OrderNbr"
      - name: "pick_location"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "PickLocation"
        x-optionalDataType: "String"
      - name: "qty"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "Qty"
        x-optionalDataType: "Float32"
      - name: "reason_code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ReasonCode"
        x-optionalDataType: "String"
      - name: "short_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "ShortFlg"
        x-optionalDataType: "Bool"
      - name: "short_on_close_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "ShortOnCloseFlg"
        x-optionalDataType: "Bool"
      - name: "to_container_nbr"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ToContainerNbr"
        x-optionalDataType: "String"
      - name: "uom_qty"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "UomQty"
        x-optionalDataType: "String"
      - name: "update_inventory_on_short_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "UpdateInventoryOnShortFlg"
        x-optionalDataType: "Bool"
      - name: "wave_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "WaveNbr"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /pick_pack/wave_complete:
    post:
      tags:
      - "pick_pack"
      summary: "PickPackWaveComplete_POST"
      description: ""
      operationId: "PickPackWaveComplete_POST"
      parameters:
      - name: "async_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "AsyncFlg"
        x-optionalDataType: "Bool"
      - name: "close_container_status"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CloseContainerStatus"
        x-optionalDataType: "String"
      - name: "company_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "CompanyId"
        x-optionalDataType: "Float32"
      - name: "company_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CompanyIdCode"
        x-optionalDataType: "String"
      - name: "facility_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "FacilityId"
        x-optionalDataType: "Float32"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityIdCode"
        x-optionalDataType: "String"
      - name: "mhe_system_code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "MheSystemCode"
        x-optionalDataType: "String"
      - name: "reason_code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "ReasonCode"
        x-optionalDataType: "String"
      - name: "update_inventory_on_short_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "UpdateInventoryOnShortFlg"
        x-optionalDataType: "Bool"
      - name: "wave_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "WaveNbr"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /print/label/ib_container:
    get:
      tags:
      - "print"
      summary: "PrintLabelIbContainer_GET"
      description: ""
      operationId: "PrintLabelIbContainer_GET"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "CompanyId"
      - name: "container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ContainerNbr"
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "label_designer_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LabelDesignerCode"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "print"
      summary: "PrintLabelIbContainer_POST"
      description: ""
      operationId: "PrintLabelIbContainer_POST"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "CompanyId"
      - name: "container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ContainerNbr"
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "label_designer_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LabelDesignerCode"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /print/label/pallet:
    get:
      tags:
      - "print"
      summary: "PrintLabelPallet_GET"
      description: ""
      operationId: "PrintLabelPallet_GET"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "CompanyId"
      - name: "container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ContainerNbr"
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "label_designer_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LabelDesignerCode"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "print"
      summary: "PrintLabelPallet_POST"
      description: ""
      operationId: "PrintLabelPallet_POST"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "CompanyId"
      - name: "container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ContainerNbr"
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "label_designer_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LabelDesignerCode"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /print/label/shipping:
    get:
      tags:
      - "print"
      summary: "PrintLabelShipping_GET"
      description: ""
      operationId: "PrintLabelShipping_GET"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "CompanyId"
      - name: "container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ContainerNbr"
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "label_designer_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LabelDesignerCode"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
    post:
      tags:
      - "print"
      summary: "PrintLabelShipping_POST"
      description: ""
      operationId: "PrintLabelShipping_POST"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "CompanyId"
      - name: "container_nbr"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ContainerNbr"
      - name: "facility_id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "FacilityId"
      - name: "id"
        in: "query"
        description: ""
        required: true
        type: "number"
        x-exportParamName: "Id"
      - name: "label_designer_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "LabelDesignerCode"
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /replenishment/replenish_to_active:
    post:
      tags:
      - "replenishment"
      summary: "ReplenishmentReplenishToActive_POST"
      description: ""
      operationId: "ReplenishmentReplenishToActive_POST"
      parameters: []
      responses:
        "201":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
  /report/custom_inventory_summary:
    get:
      tags:
      - "report"
      summary: "ReportCustomInventorySummary_GET"
      description: ""
      operationId: "ReportCustomInventorySummary_GET"
      parameters:
      - name: "company_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "CompanyId"
        x-optionalDataType: "Float32"
      - name: "company_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "CompanyIdCode"
        x-optionalDataType: "String"
      - name: "facility_id"
        in: "query"
        description: ""
        required: false
        type: "number"
        x-exportParamName: "FacilityId"
        x-optionalDataType: "Float32"
      - name: "facility_id__code"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "FacilityIdCode"
        x-optionalDataType: "String"
      - name: "item_code"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ItemCode"
      - name: "write_header_line_flg"
        in: "query"
        description: ""
        required: false
        type: "boolean"
        x-exportParamName: "WriteHeaderLineFlg"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: ""
          examples:
            application/json: {}
            application/xml: ""
          schema:
            type: "object"
securityDefinitions:
  basic:
    type: "basic"
  oauth2:
    type: "oauth2"
    tokenUrl: "https://host/"
    flow: "application"
    scopes: {}
definitions: {}
