/*
 * REST API
 *
 * This is a sample definition of the Oracle WMS Cloud REST API.  The views expressed here are my own and do not necessarily reflect the views of Oracle.
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"bytes"
	"context"
	"encoding/json"
	"encoding/xml"
	"errors"
	"fmt"
	"io"
	"mime/multipart"
	"net/http"
	"net/url"
	"os"
	"path/filepath"
	"reflect"
	"regexp"
	"strconv"
	"strings"
	"time"
	"unicode/utf8"

	"golang.org/x/oauth2"
)

var (
	jsonCheck = regexp.MustCompile("(?i:(?:application|text)/json)")
	xmlCheck  = regexp.MustCompile("(?i:(?:application|text)/xml)")
)

// APIClient manages communication with the REST API API v1.0
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	cfg    *Configuration
	common service // Reuse a single struct instead of allocating one for each service on the heap.

	// API Services

	EntityactionCodeApi *EntityactionCodeApiService

	EntityactiveLocationApi *EntityactiveLocationApiService

	EntityallocationApi *EntityallocationApiService

	EntityallocationDistributionModeApi *EntityallocationDistributionModeApiService

	EntityallocationStatusApi *EntityallocationStatusApiService

	EntityanswerInputTypeApi *EntityanswerInputTypeApiService

	EntityappointmentApi *EntityappointmentApiService

	EntityappointmentStatusApi *EntityappointmentStatusApiService

	EntityassetStatusApi *EntityassetStatusApiService

	EntityauditModeApi *EntityauditModeApiService

	EntityauditStatusApi *EntityauditStatusApiService

	EntityauditTypeApi *EntityauditTypeApiService

	EntitybarcodeTypeApi *EntitybarcodeTypeApiService

	EntitybarcodeTypeDtlApi *EntitybarcodeTypeDtlApiService

	EntitybatchNumberApi *EntitybatchNumberApiService

	EntitybreakByModifierApi *EntitybreakByModifierApiService

	EntitybridgeStatusApi *EntitybridgeStatusApiService

	EntitycapacityCheckMethodApi *EntitycapacityCheckMethodApiService

	EntitycarrierIntegrationTypeApi *EntitycarrierIntegrationTypeApiService

	EntitycarrierLpnApi *EntitycarrierLpnApiService

	EntitycarrierStatusApi *EntitycarrierStatusApiService

	EntitycarrierTypeApi *EntitycarrierTypeApiService

	EntitycarrierWebserviceLabelTypeApi *EntitycarrierWebserviceLabelTypeApiService

	EntityccAdjustmentStatusApi *EntityccAdjustmentStatusApiService

	EntityccCreationTypeApi *EntityccCreationTypeApiService

	EntityccTriggerApi *EntityccTriggerApiService

	EntityccWarningApi *EntityccWarningApiService

	EntitycheckDigitMethodApi *EntitycheckDigitMethodApiService

	EntitycolumnOrderTypeApi *EntitycolumnOrderTypeApiService

	EntitycompanyApi *EntitycompanyApiService

	EntitycompanyParmApi *EntitycompanyParmApiService

	EntitycompanyTypeApi *EntitycompanyTypeApiService

	EntityconditionTypeApi *EntityconditionTypeApiService

	EntitycontactApi *EntitycontactApiService

	EntitycontainerApi *EntitycontainerApiService

	EntitycontainerStatusApi *EntitycontainerStatusApiService

	EntitycontainerVasStatusApi *EntitycontainerVasStatusApiService

	EntitycubingModeApi *EntitycubingModeApiService

	EntitydateFormatApi *EntitydateFormatApiService

	EntitydestinationLocationTypeApi *EntitydestinationLocationTypeApiService

	EntitydockApi *EntitydockApiService

	EntitydockStatusApi *EntitydockStatusApiService

	EntitydockTypeApi *EntitydockTypeApiService

	EntityentityApi *EntityentityApiService

	EntityentityChangeActionApi *EntityentityChangeActionApiService

	EntityfacilityApi *EntityfacilityApiService

	EntityfacilityParmApi *EntityfacilityParmApiService

	EntityfacilityTypeApi *EntityfacilityTypeApiService

	EntityformTypeApi *EntityformTypeApiService

	EntityhazmatRegulationTypeApi *EntityhazmatRegulationTypeApiService

	EntityhireTypeApi *EntityhireTypeApiService

	EntityibShipmentApi *EntityibShipmentApiService

	EntityibShipmentDtlApi *EntityibShipmentDtlApiService

	EntityibShipmentSerialNbrApi *EntityibShipmentSerialNbrApiService

	EntityibShipmentStatusApi *EntityibShipmentStatusApiService

	EntityiblpnApi *EntityiblpnApiService

	EntityinterfaceFormatTypeApi *EntityinterfaceFormatTypeApiService

	EntityinterfaceProtocolApi *EntityinterfaceProtocolApiService

	EntityinterfaceTypeApi *EntityinterfaceTypeApiService

	EntityinventoryApi *EntityinventoryApiService

	EntityinventoryAttributeApi *EntityinventoryAttributeApiService

	EntityinventoryLockApi *EntityinventoryLockApiService

	EntityinventoryStatusApi *EntityinventoryStatusApiService

	EntityinvoiceStatusApi *EntityinvoiceStatusApiService

	EntityitemApi *EntityitemApiService

	EntityitemAssignmentTypeApi *EntityitemAssignmentTypeApiService

	EntityitemCharacteristicsApi *EntityitemCharacteristicsApiService

	EntityitemMetricsApi *EntityitemMetricsApiService

	EntitylabelTypeApi *EntitylabelTypeApiService

	EntitylanguageApi *EntitylanguageApiService

	EntitylgfapiArchiveLevelApi *EntitylgfapiArchiveLevelApiService

	EntityloadApi *EntityloadApiService

	EntityloadStatusApi *EntityloadStatusApiService

	EntitylocationApi *EntitylocationApiService

	EntitylocationSizeTypeApi *EntitylocationSizeTypeApiService

	EntitylocationTypeApi *EntitylocationTypeApiService

	EntitymheDestinationCodeApi *EntitymheDestinationCodeApiService

	EntitymheMsgTypeApi *EntitymheMsgTypeApiService

	EntitymheRouteConfigFunctionApi *EntitymheRouteConfigFunctionApiService

	EntitymheTriggerApi *EntitymheTriggerApiService

	EntitymheTypeApi *EntitymheTypeApiService

	EntitymultiFieldBarcodeDelimiterApi *EntitymultiFieldBarcodeDelimiterApiService

	EntityobStopApi *EntityobStopApiService

	EntityobStopDtlApi *EntityobStopDtlApiService

	EntityoblpnApi *EntityoblpnApiService

	EntityoblpnPrintingValidationApi *EntityoblpnPrintingValidationApiService

	EntityorderDtlApi *EntityorderDtlApiService

	EntityorderHdrApi *EntityorderHdrApiService

	EntityorderInstructionApi *EntityorderInstructionApiService

	EntityorderInstructionLevelApi *EntityorderInstructionLevelApiService

	EntityorderInstructionTypeApi *EntityorderInstructionTypeApiService

	EntityorderLockApi *EntityorderLockApiService

	EntityorderStatusApi *EntityorderStatusApiService

	EntityorderTypeApi *EntityorderTypeApiService

	EntityorderValidationModeApi *EntityorderValidationModeApiService

	EntitypalletApi *EntitypalletApiService

	EntitypalletActivityApi *EntitypalletActivityApiService

	EntitypalletStatusApi *EntitypalletStatusApiService

	EntityparcelManifestApi *EntityparcelManifestApiService

	EntityparcelManifestStatusApi *EntityparcelManifestStatusApiService

	EntityparcelShipmentApi *EntityparcelShipmentApiService

	EntityparcelShipmentDtlApi *EntityparcelShipmentDtlApiService

	EntityparcelTransactionStatusApi *EntityparcelTransactionStatusApiService

	EntityparmTypeApi *EntityparmTypeApiService

	EntitypaymentMethodApi *EntitypaymentMethodApiService

	EntityprinterApi *EntityprinterApiService

	EntityprinterProtocolApi *EntityprinterProtocolApiService

	EntityprinterTypeApi *EntityprinterTypeApiService

	EntityprocessMonitorStatusApi *EntityprocessMonitorStatusApiService

	EntitypropertyPromptModeApi *EntitypropertyPromptModeApiService

	EntitypurchaseOrderDtlApi *EntitypurchaseOrderDtlApiService

	EntitypurchaseOrderHdrApi *EntitypurchaseOrderHdrApiService

	EntitypurchaseOrderStatusApi *EntitypurchaseOrderStatusApiService

	EntityputawayMethodApi *EntityputawayMethodApiService

	EntityputawayPriorityApi *EntityputawayPriorityApiService

	EntityputawaySearchModeApi *EntityputawaySearchModeApiService

	EntityputawayTypeApi *EntityputawayTypeApiService

	EntityputawayTypeCalcRuleApi *EntityputawayTypeCalcRuleApiService

	EntityqcStatusApi *EntityqcStatusApiService

	EntityreasonCodeTypeApi *EntityreasonCodeTypeApiService

	EntityreceiptValidationTypeApi *EntityreceiptValidationTypeApiService

	EntityrecordStatusApi *EntityrecordStatusApiService

	EntityreplenishmentTriggerModeApi *EntityreplenishmentTriggerModeApiService

	EntityreplenishmentZoneApi *EntityreplenishmentZoneApiService

	EntityreportSubTypeApi *EntityreportSubTypeApiService

	EntityreportTypeApi *EntityreportTypeApiService

	EntityreserveLocationApi *EntityreserveLocationApiService

	EntityrfKeyCodeApi *EntityrfKeyCodeApiService

	EntityrouteHdrStatusApi *EntityrouteHdrStatusApiService

	EntityroutingModeApi *EntityroutingModeApiService

	EntityscreenTypeApi *EntityscreenTypeApiService

	EntityselectionTypeApi *EntityselectionTypeApiService

	EntityseqCounterApi *EntityseqCounterApiService

	EntityserialNbrApi *EntityserialNbrApiService

	EntityserialNbrActionCodeApi *EntityserialNbrActionCodeApiService

	EntityserialNbrInventoryApi *EntityserialNbrInventoryApiService

	EntityshiftApi *EntityshiftApiService

	EntityshipmentVerifOrderdtlCancelModeApi *EntityshipmentVerifOrderdtlCancelModeApiService

	EntityshippingBlockedSelectionCriteriaApi *EntityshippingBlockedSelectionCriteriaApiService

	EntitysqlOperatorApi *EntitysqlOperatorApiService

	EntitysqlSelectionApi *EntitysqlSelectionApiService

	EntitystageStatusApi *EntitystageStatusApiService

	EntitystandardCheckDigitMethodApi *EntitystandardCheckDigitMethodApiService

	EntitystopStatusApi *EntitystopStatusApiService

	EntitytaskApi *EntitytaskApiService

	EntitytaskActivityApi *EntitytaskActivityApiService

	EntitytaskStatusApi *EntitytaskStatusApiService

	EntitytemplateTypeApi *EntitytemplateTypeApiService

	EntitytimeFormatApi *EntitytimeFormatApiService

	EntitytimeZoneApi *EntitytimeZoneApiService

	EntitytrailerApi *EntitytrailerApiService

	EntityuomApi *EntityuomApiService

	EntityupsRoutingCodeApi *EntityupsRoutingCodeApiService

	EntityuserApi *EntityuserApiService

	EntityuserCompanyApi *EntityuserCompanyApiService

	EntityuserFacilityApi *EntityuserFacilityApiService

	EntityvalueTypeApi *EntityvalueTypeApiService

	EntityvasExecutionStatusApi *EntityvasExecutionStatusApiService

	EntityvasRequirementTypeApi *EntityvasRequirementTypeApiService

	EntityvendorApi *EntityvendorApiService

	EntityverificationEntityApi *EntityverificationEntityApiService

	EntityverificationTypeApi *EntityverificationTypeApiService

	EntitywaveApi *EntitywaveApiService

	EntitywaveMheStatusApi *EntitywaveMheStatusApiService

	EntitywaveStageApi *EntitywaveStageApiService

	EntitywaveStatusApi *EntitywaveStatusApiService

	EntitywaveTemplateApi *EntitywaveTemplateApiService

	EntitywaveTemplateStatusApi *EntitywaveTemplateStatusApiService

	EntitywaveTypeApi *EntitywaveTypeApiService

	EntitywmsActivityCodeApi *EntitywmsActivityCodeApiService

	EntitywmsActivityStatusApi *EntitywmsActivityStatusApiService

	EntityworkAreaActivityTypeApi *EntityworkAreaActivityTypeApiService

	EntityworkOrderActivityTypeApi *EntityworkOrderActivityTypeApiService

	EntityworkOrderComponentApi *EntityworkOrderComponentApiService

	EntityworkOrderHdrApi *EntityworkOrderHdrApiService

	EntityworkOrderKitApi *EntityworkOrderKitApiService

	EntityworkOrderStatusApi *EntityworkOrderStatusApiService

	EntityworkOrderTypeApi *EntityworkOrderTypeApiService

	PickPackApi *PickPackApiService

	PrintApi *PrintApiService

	ReplenishmentApi *ReplenishmentApiService

	ReportApi *ReportApiService
}

type service struct {
	client *APIClient
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(cfg *Configuration) *APIClient {
	if cfg.HTTPClient == nil {
		cfg.HTTPClient = http.DefaultClient
	}

	c := &APIClient{}
	c.cfg = cfg
	c.common.client = c

	// API Services
	c.EntityactionCodeApi = (*EntityactionCodeApiService)(&c.common)
	c.EntityactiveLocationApi = (*EntityactiveLocationApiService)(&c.common)
	c.EntityallocationApi = (*EntityallocationApiService)(&c.common)
	c.EntityallocationDistributionModeApi = (*EntityallocationDistributionModeApiService)(&c.common)
	c.EntityallocationStatusApi = (*EntityallocationStatusApiService)(&c.common)
	c.EntityanswerInputTypeApi = (*EntityanswerInputTypeApiService)(&c.common)
	c.EntityappointmentApi = (*EntityappointmentApiService)(&c.common)
	c.EntityappointmentStatusApi = (*EntityappointmentStatusApiService)(&c.common)
	c.EntityassetStatusApi = (*EntityassetStatusApiService)(&c.common)
	c.EntityauditModeApi = (*EntityauditModeApiService)(&c.common)
	c.EntityauditStatusApi = (*EntityauditStatusApiService)(&c.common)
	c.EntityauditTypeApi = (*EntityauditTypeApiService)(&c.common)
	c.EntitybarcodeTypeApi = (*EntitybarcodeTypeApiService)(&c.common)
	c.EntitybarcodeTypeDtlApi = (*EntitybarcodeTypeDtlApiService)(&c.common)
	c.EntitybatchNumberApi = (*EntitybatchNumberApiService)(&c.common)
	c.EntitybreakByModifierApi = (*EntitybreakByModifierApiService)(&c.common)
	c.EntitybridgeStatusApi = (*EntitybridgeStatusApiService)(&c.common)
	c.EntitycapacityCheckMethodApi = (*EntitycapacityCheckMethodApiService)(&c.common)
	c.EntitycarrierIntegrationTypeApi = (*EntitycarrierIntegrationTypeApiService)(&c.common)
	c.EntitycarrierLpnApi = (*EntitycarrierLpnApiService)(&c.common)
	c.EntitycarrierStatusApi = (*EntitycarrierStatusApiService)(&c.common)
	c.EntitycarrierTypeApi = (*EntitycarrierTypeApiService)(&c.common)
	c.EntitycarrierWebserviceLabelTypeApi = (*EntitycarrierWebserviceLabelTypeApiService)(&c.common)
	c.EntityccAdjustmentStatusApi = (*EntityccAdjustmentStatusApiService)(&c.common)
	c.EntityccCreationTypeApi = (*EntityccCreationTypeApiService)(&c.common)
	c.EntityccTriggerApi = (*EntityccTriggerApiService)(&c.common)
	c.EntityccWarningApi = (*EntityccWarningApiService)(&c.common)
	c.EntitycheckDigitMethodApi = (*EntitycheckDigitMethodApiService)(&c.common)
	c.EntitycolumnOrderTypeApi = (*EntitycolumnOrderTypeApiService)(&c.common)
	c.EntitycompanyApi = (*EntitycompanyApiService)(&c.common)
	c.EntitycompanyParmApi = (*EntitycompanyParmApiService)(&c.common)
	c.EntitycompanyTypeApi = (*EntitycompanyTypeApiService)(&c.common)
	c.EntityconditionTypeApi = (*EntityconditionTypeApiService)(&c.common)
	c.EntitycontactApi = (*EntitycontactApiService)(&c.common)
	c.EntitycontainerApi = (*EntitycontainerApiService)(&c.common)
	c.EntitycontainerStatusApi = (*EntitycontainerStatusApiService)(&c.common)
	c.EntitycontainerVasStatusApi = (*EntitycontainerVasStatusApiService)(&c.common)
	c.EntitycubingModeApi = (*EntitycubingModeApiService)(&c.common)
	c.EntitydateFormatApi = (*EntitydateFormatApiService)(&c.common)
	c.EntitydestinationLocationTypeApi = (*EntitydestinationLocationTypeApiService)(&c.common)
	c.EntitydockApi = (*EntitydockApiService)(&c.common)
	c.EntitydockStatusApi = (*EntitydockStatusApiService)(&c.common)
	c.EntitydockTypeApi = (*EntitydockTypeApiService)(&c.common)
	c.EntityentityApi = (*EntityentityApiService)(&c.common)
	c.EntityentityChangeActionApi = (*EntityentityChangeActionApiService)(&c.common)
	c.EntityfacilityApi = (*EntityfacilityApiService)(&c.common)
	c.EntityfacilityParmApi = (*EntityfacilityParmApiService)(&c.common)
	c.EntityfacilityTypeApi = (*EntityfacilityTypeApiService)(&c.common)
	c.EntityformTypeApi = (*EntityformTypeApiService)(&c.common)
	c.EntityhazmatRegulationTypeApi = (*EntityhazmatRegulationTypeApiService)(&c.common)
	c.EntityhireTypeApi = (*EntityhireTypeApiService)(&c.common)
	c.EntityibShipmentApi = (*EntityibShipmentApiService)(&c.common)
	c.EntityibShipmentDtlApi = (*EntityibShipmentDtlApiService)(&c.common)
	c.EntityibShipmentSerialNbrApi = (*EntityibShipmentSerialNbrApiService)(&c.common)
	c.EntityibShipmentStatusApi = (*EntityibShipmentStatusApiService)(&c.common)
	c.EntityiblpnApi = (*EntityiblpnApiService)(&c.common)
	c.EntityinterfaceFormatTypeApi = (*EntityinterfaceFormatTypeApiService)(&c.common)
	c.EntityinterfaceProtocolApi = (*EntityinterfaceProtocolApiService)(&c.common)
	c.EntityinterfaceTypeApi = (*EntityinterfaceTypeApiService)(&c.common)
	c.EntityinventoryApi = (*EntityinventoryApiService)(&c.common)
	c.EntityinventoryAttributeApi = (*EntityinventoryAttributeApiService)(&c.common)
	c.EntityinventoryLockApi = (*EntityinventoryLockApiService)(&c.common)
	c.EntityinventoryStatusApi = (*EntityinventoryStatusApiService)(&c.common)
	c.EntityinvoiceStatusApi = (*EntityinvoiceStatusApiService)(&c.common)
	c.EntityitemApi = (*EntityitemApiService)(&c.common)
	c.EntityitemAssignmentTypeApi = (*EntityitemAssignmentTypeApiService)(&c.common)
	c.EntityitemCharacteristicsApi = (*EntityitemCharacteristicsApiService)(&c.common)
	c.EntityitemMetricsApi = (*EntityitemMetricsApiService)(&c.common)
	c.EntitylabelTypeApi = (*EntitylabelTypeApiService)(&c.common)
	c.EntitylanguageApi = (*EntitylanguageApiService)(&c.common)
	c.EntitylgfapiArchiveLevelApi = (*EntitylgfapiArchiveLevelApiService)(&c.common)
	c.EntityloadApi = (*EntityloadApiService)(&c.common)
	c.EntityloadStatusApi = (*EntityloadStatusApiService)(&c.common)
	c.EntitylocationApi = (*EntitylocationApiService)(&c.common)
	c.EntitylocationSizeTypeApi = (*EntitylocationSizeTypeApiService)(&c.common)
	c.EntitylocationTypeApi = (*EntitylocationTypeApiService)(&c.common)
	c.EntitymheDestinationCodeApi = (*EntitymheDestinationCodeApiService)(&c.common)
	c.EntitymheMsgTypeApi = (*EntitymheMsgTypeApiService)(&c.common)
	c.EntitymheRouteConfigFunctionApi = (*EntitymheRouteConfigFunctionApiService)(&c.common)
	c.EntitymheTriggerApi = (*EntitymheTriggerApiService)(&c.common)
	c.EntitymheTypeApi = (*EntitymheTypeApiService)(&c.common)
	c.EntitymultiFieldBarcodeDelimiterApi = (*EntitymultiFieldBarcodeDelimiterApiService)(&c.common)
	c.EntityobStopApi = (*EntityobStopApiService)(&c.common)
	c.EntityobStopDtlApi = (*EntityobStopDtlApiService)(&c.common)
	c.EntityoblpnApi = (*EntityoblpnApiService)(&c.common)
	c.EntityoblpnPrintingValidationApi = (*EntityoblpnPrintingValidationApiService)(&c.common)
	c.EntityorderDtlApi = (*EntityorderDtlApiService)(&c.common)
	c.EntityorderHdrApi = (*EntityorderHdrApiService)(&c.common)
	c.EntityorderInstructionApi = (*EntityorderInstructionApiService)(&c.common)
	c.EntityorderInstructionLevelApi = (*EntityorderInstructionLevelApiService)(&c.common)
	c.EntityorderInstructionTypeApi = (*EntityorderInstructionTypeApiService)(&c.common)
	c.EntityorderLockApi = (*EntityorderLockApiService)(&c.common)
	c.EntityorderStatusApi = (*EntityorderStatusApiService)(&c.common)
	c.EntityorderTypeApi = (*EntityorderTypeApiService)(&c.common)
	c.EntityorderValidationModeApi = (*EntityorderValidationModeApiService)(&c.common)
	c.EntitypalletApi = (*EntitypalletApiService)(&c.common)
	c.EntitypalletActivityApi = (*EntitypalletActivityApiService)(&c.common)
	c.EntitypalletStatusApi = (*EntitypalletStatusApiService)(&c.common)
	c.EntityparcelManifestApi = (*EntityparcelManifestApiService)(&c.common)
	c.EntityparcelManifestStatusApi = (*EntityparcelManifestStatusApiService)(&c.common)
	c.EntityparcelShipmentApi = (*EntityparcelShipmentApiService)(&c.common)
	c.EntityparcelShipmentDtlApi = (*EntityparcelShipmentDtlApiService)(&c.common)
	c.EntityparcelTransactionStatusApi = (*EntityparcelTransactionStatusApiService)(&c.common)
	c.EntityparmTypeApi = (*EntityparmTypeApiService)(&c.common)
	c.EntitypaymentMethodApi = (*EntitypaymentMethodApiService)(&c.common)
	c.EntityprinterApi = (*EntityprinterApiService)(&c.common)
	c.EntityprinterProtocolApi = (*EntityprinterProtocolApiService)(&c.common)
	c.EntityprinterTypeApi = (*EntityprinterTypeApiService)(&c.common)
	c.EntityprocessMonitorStatusApi = (*EntityprocessMonitorStatusApiService)(&c.common)
	c.EntitypropertyPromptModeApi = (*EntitypropertyPromptModeApiService)(&c.common)
	c.EntitypurchaseOrderDtlApi = (*EntitypurchaseOrderDtlApiService)(&c.common)
	c.EntitypurchaseOrderHdrApi = (*EntitypurchaseOrderHdrApiService)(&c.common)
	c.EntitypurchaseOrderStatusApi = (*EntitypurchaseOrderStatusApiService)(&c.common)
	c.EntityputawayMethodApi = (*EntityputawayMethodApiService)(&c.common)
	c.EntityputawayPriorityApi = (*EntityputawayPriorityApiService)(&c.common)
	c.EntityputawaySearchModeApi = (*EntityputawaySearchModeApiService)(&c.common)
	c.EntityputawayTypeApi = (*EntityputawayTypeApiService)(&c.common)
	c.EntityputawayTypeCalcRuleApi = (*EntityputawayTypeCalcRuleApiService)(&c.common)
	c.EntityqcStatusApi = (*EntityqcStatusApiService)(&c.common)
	c.EntityreasonCodeTypeApi = (*EntityreasonCodeTypeApiService)(&c.common)
	c.EntityreceiptValidationTypeApi = (*EntityreceiptValidationTypeApiService)(&c.common)
	c.EntityrecordStatusApi = (*EntityrecordStatusApiService)(&c.common)
	c.EntityreplenishmentTriggerModeApi = (*EntityreplenishmentTriggerModeApiService)(&c.common)
	c.EntityreplenishmentZoneApi = (*EntityreplenishmentZoneApiService)(&c.common)
	c.EntityreportSubTypeApi = (*EntityreportSubTypeApiService)(&c.common)
	c.EntityreportTypeApi = (*EntityreportTypeApiService)(&c.common)
	c.EntityreserveLocationApi = (*EntityreserveLocationApiService)(&c.common)
	c.EntityrfKeyCodeApi = (*EntityrfKeyCodeApiService)(&c.common)
	c.EntityrouteHdrStatusApi = (*EntityrouteHdrStatusApiService)(&c.common)
	c.EntityroutingModeApi = (*EntityroutingModeApiService)(&c.common)
	c.EntityscreenTypeApi = (*EntityscreenTypeApiService)(&c.common)
	c.EntityselectionTypeApi = (*EntityselectionTypeApiService)(&c.common)
	c.EntityseqCounterApi = (*EntityseqCounterApiService)(&c.common)
	c.EntityserialNbrApi = (*EntityserialNbrApiService)(&c.common)
	c.EntityserialNbrActionCodeApi = (*EntityserialNbrActionCodeApiService)(&c.common)
	c.EntityserialNbrInventoryApi = (*EntityserialNbrInventoryApiService)(&c.common)
	c.EntityshiftApi = (*EntityshiftApiService)(&c.common)
	c.EntityshipmentVerifOrderdtlCancelModeApi = (*EntityshipmentVerifOrderdtlCancelModeApiService)(&c.common)
	c.EntityshippingBlockedSelectionCriteriaApi = (*EntityshippingBlockedSelectionCriteriaApiService)(&c.common)
	c.EntitysqlOperatorApi = (*EntitysqlOperatorApiService)(&c.common)
	c.EntitysqlSelectionApi = (*EntitysqlSelectionApiService)(&c.common)
	c.EntitystageStatusApi = (*EntitystageStatusApiService)(&c.common)
	c.EntitystandardCheckDigitMethodApi = (*EntitystandardCheckDigitMethodApiService)(&c.common)
	c.EntitystopStatusApi = (*EntitystopStatusApiService)(&c.common)
	c.EntitytaskApi = (*EntitytaskApiService)(&c.common)
	c.EntitytaskActivityApi = (*EntitytaskActivityApiService)(&c.common)
	c.EntitytaskStatusApi = (*EntitytaskStatusApiService)(&c.common)
	c.EntitytemplateTypeApi = (*EntitytemplateTypeApiService)(&c.common)
	c.EntitytimeFormatApi = (*EntitytimeFormatApiService)(&c.common)
	c.EntitytimeZoneApi = (*EntitytimeZoneApiService)(&c.common)
	c.EntitytrailerApi = (*EntitytrailerApiService)(&c.common)
	c.EntityuomApi = (*EntityuomApiService)(&c.common)
	c.EntityupsRoutingCodeApi = (*EntityupsRoutingCodeApiService)(&c.common)
	c.EntityuserApi = (*EntityuserApiService)(&c.common)
	c.EntityuserCompanyApi = (*EntityuserCompanyApiService)(&c.common)
	c.EntityuserFacilityApi = (*EntityuserFacilityApiService)(&c.common)
	c.EntityvalueTypeApi = (*EntityvalueTypeApiService)(&c.common)
	c.EntityvasExecutionStatusApi = (*EntityvasExecutionStatusApiService)(&c.common)
	c.EntityvasRequirementTypeApi = (*EntityvasRequirementTypeApiService)(&c.common)
	c.EntityvendorApi = (*EntityvendorApiService)(&c.common)
	c.EntityverificationEntityApi = (*EntityverificationEntityApiService)(&c.common)
	c.EntityverificationTypeApi = (*EntityverificationTypeApiService)(&c.common)
	c.EntitywaveApi = (*EntitywaveApiService)(&c.common)
	c.EntitywaveMheStatusApi = (*EntitywaveMheStatusApiService)(&c.common)
	c.EntitywaveStageApi = (*EntitywaveStageApiService)(&c.common)
	c.EntitywaveStatusApi = (*EntitywaveStatusApiService)(&c.common)
	c.EntitywaveTemplateApi = (*EntitywaveTemplateApiService)(&c.common)
	c.EntitywaveTemplateStatusApi = (*EntitywaveTemplateStatusApiService)(&c.common)
	c.EntitywaveTypeApi = (*EntitywaveTypeApiService)(&c.common)
	c.EntitywmsActivityCodeApi = (*EntitywmsActivityCodeApiService)(&c.common)
	c.EntitywmsActivityStatusApi = (*EntitywmsActivityStatusApiService)(&c.common)
	c.EntityworkAreaActivityTypeApi = (*EntityworkAreaActivityTypeApiService)(&c.common)
	c.EntityworkOrderActivityTypeApi = (*EntityworkOrderActivityTypeApiService)(&c.common)
	c.EntityworkOrderComponentApi = (*EntityworkOrderComponentApiService)(&c.common)
	c.EntityworkOrderHdrApi = (*EntityworkOrderHdrApiService)(&c.common)
	c.EntityworkOrderKitApi = (*EntityworkOrderKitApiService)(&c.common)
	c.EntityworkOrderStatusApi = (*EntityworkOrderStatusApiService)(&c.common)
	c.EntityworkOrderTypeApi = (*EntityworkOrderTypeApiService)(&c.common)
	c.PickPackApi = (*PickPackApiService)(&c.common)
	c.PrintApi = (*PrintApiService)(&c.common)
	c.ReplenishmentApi = (*ReplenishmentApiService)(&c.common)
	c.ReportApi = (*ReportApiService)(&c.common)

	return c
}

func atoi(in string) (int, error) {
	return strconv.Atoi(in)
}

// selectHeaderContentType select a content type from the available list.
func selectHeaderContentType(contentTypes []string) string {
	if len(contentTypes) == 0 {
		return ""
	}
	if contains(contentTypes, "application/json") {
		return "application/json"
	}
	return contentTypes[0] // use the first content type specified in 'consumes'
}

// selectHeaderAccept join all accept types and return
func selectHeaderAccept(accepts []string) string {
	if len(accepts) == 0 {
		return ""
	}

	if contains(accepts, "application/json") {
		return "application/json"
	}

	return strings.Join(accepts, ",")
}

// contains is a case insenstive match, finding needle in a haystack
func contains(haystack []string, needle string) bool {
	for _, a := range haystack {
		if strings.ToLower(a) == strings.ToLower(needle) {
			return true
		}
	}
	return false
}

// Verify optional parameters are of the correct type.
func typeCheckParameter(obj interface{}, expected string, name string) error {
	// Make sure there is an object.
	if obj == nil {
		return nil
	}

	// Check the type is as expected.
	if reflect.TypeOf(obj).String() != expected {
		return fmt.Errorf("Expected %s to be of type %s but received %s.", name, expected, reflect.TypeOf(obj).String())
	}
	return nil
}

// parameterToString convert interface{} parameters to string, using a delimiter if format is provided.
func parameterToString(obj interface{}, collectionFormat string) string {
	var delimiter string

	switch collectionFormat {
	case "pipes":
		delimiter = "|"
	case "ssv":
		delimiter = " "
	case "tsv":
		delimiter = "\t"
	case "csv":
		delimiter = ","
	}

	if reflect.TypeOf(obj).Kind() == reflect.Slice {
		return strings.Trim(strings.Replace(fmt.Sprint(obj), " ", delimiter, -1), "[]")
	}

	return fmt.Sprintf("%v", obj)
}

// callAPI do the request.
func (c *APIClient) callAPI(request *http.Request) (*http.Response, error) {
	return c.cfg.HTTPClient.Do(request)
}

// Change base path to allow switching to mocks
func (c *APIClient) ChangeBasePath(path string) {
	c.cfg.BasePath = path
}

// prepareRequest build the request
func (c *APIClient) prepareRequest(
	ctx context.Context,
	path string, method string,
	postBody interface{},
	headerParams map[string]string,
	queryParams url.Values,
	formParams url.Values,
	fileName string,
	fileBytes []byte) (localVarRequest *http.Request, err error) {

	var body *bytes.Buffer

	// Detect postBody type and post.
	if postBody != nil {
		contentType := headerParams["Content-Type"]
		if contentType == "" {
			contentType = detectContentType(postBody)
			headerParams["Content-Type"] = contentType
		}

		body, err = setBody(postBody, contentType)
		if err != nil {
			return nil, err
		}
	}

	// add form parameters and file if available.
	if strings.HasPrefix(headerParams["Content-Type"], "multipart/form-data") && len(formParams) > 0 || (len(fileBytes) > 0 && fileName != "") {
		if body != nil {
			return nil, errors.New("Cannot specify postBody and multipart form at the same time.")
		}
		body = &bytes.Buffer{}
		w := multipart.NewWriter(body)

		for k, v := range formParams {
			for _, iv := range v {
				if strings.HasPrefix(k, "@") { // file
					err = addFile(w, k[1:], iv)
					if err != nil {
						return nil, err
					}
				} else { // form value
					w.WriteField(k, iv)
				}
			}
		}
		if len(fileBytes) > 0 && fileName != "" {
			w.Boundary()
			//_, fileNm := filepath.Split(fileName)
			part, err := w.CreateFormFile("file", filepath.Base(fileName))
			if err != nil {
				return nil, err
			}
			_, err = part.Write(fileBytes)
			if err != nil {
				return nil, err
			}
			// Set the Boundary in the Content-Type
			headerParams["Content-Type"] = w.FormDataContentType()
		}

		// Set Content-Length
		headerParams["Content-Length"] = fmt.Sprintf("%d", body.Len())
		w.Close()
	}

	if strings.HasPrefix(headerParams["Content-Type"], "application/x-www-form-urlencoded") && len(formParams) > 0 {
		if body != nil {
			return nil, errors.New("Cannot specify postBody and x-www-form-urlencoded form at the same time.")
		}
		body = &bytes.Buffer{}
		body.WriteString(formParams.Encode())
		// Set Content-Length
		headerParams["Content-Length"] = fmt.Sprintf("%d", body.Len())
	}

	// Setup path and query parameters
	url, err := url.Parse(path)
	if err != nil {
		return nil, err
	}

	// Adding Query Param
	query := url.Query()
	for k, v := range queryParams {
		for _, iv := range v {
			query.Add(k, iv)
		}
	}

	// Encode the parameters.
	url.RawQuery = query.Encode()

	// Generate a new request
	if body != nil {
		localVarRequest, err = http.NewRequest(method, url.String(), body)
	} else {
		localVarRequest, err = http.NewRequest(method, url.String(), nil)
	}
	if err != nil {
		return nil, err
	}

	// add header parameters, if any
	if len(headerParams) > 0 {
		headers := http.Header{}
		for h, v := range headerParams {
			headers.Set(h, v)
		}
		localVarRequest.Header = headers
	}

	// Override request host, if applicable
	if c.cfg.Host != "" {
		localVarRequest.Host = c.cfg.Host
	}

	// Add the user agent to the request.
	localVarRequest.Header.Add("User-Agent", c.cfg.UserAgent)

	if ctx != nil {
		// add context to the request
		localVarRequest = localVarRequest.WithContext(ctx)

		// Walk through any authentication.

		// OAuth2 authentication
		if tok, ok := ctx.Value(ContextOAuth2).(oauth2.TokenSource); ok {
			// We were able to grab an oauth2 token from the context
			var latestToken *oauth2.Token
			if latestToken, err = tok.Token(); err != nil {
				return nil, err
			}

			latestToken.SetAuthHeader(localVarRequest)
		}

		// Basic HTTP Authentication
		if auth, ok := ctx.Value(ContextBasicAuth).(BasicAuth); ok {
			localVarRequest.SetBasicAuth(auth.UserName, auth.Password)
		}

		// AccessToken Authentication
		if auth, ok := ctx.Value(ContextAccessToken).(string); ok {
			localVarRequest.Header.Add("Authorization", "Bearer "+auth)
		}
	}

	for header, value := range c.cfg.DefaultHeader {
		localVarRequest.Header.Add(header, value)
	}

	return localVarRequest, nil
}

func (c *APIClient) decode(v interface{}, b []byte, contentType string) (err error) {
		if strings.Contains(contentType, "application/xml") {
			if err = xml.Unmarshal(b, v); err != nil {
				return err
			}
			return nil
		} else if strings.Contains(contentType, "application/json") {
			if err = json.Unmarshal(b, v); err != nil {
				return err
			}
			return nil
		}
	return errors.New("undefined response type")
}

// Add a file to the multipart request
func addFile(w *multipart.Writer, fieldName, path string) error {
	file, err := os.Open(path)
	if err != nil {
		return err
	}
	defer file.Close()

	part, err := w.CreateFormFile(fieldName, filepath.Base(path))
	if err != nil {
		return err
	}
	_, err = io.Copy(part, file)

	return err
}

// Prevent trying to import "fmt"
func reportError(format string, a ...interface{}) error {
	return fmt.Errorf(format, a...)
}

// Set request body from an interface{}
func setBody(body interface{}, contentType string) (bodyBuf *bytes.Buffer, err error) {
	if bodyBuf == nil {
		bodyBuf = &bytes.Buffer{}
	}

	if reader, ok := body.(io.Reader); ok {
		_, err = bodyBuf.ReadFrom(reader)
	} else if b, ok := body.([]byte); ok {
		_, err = bodyBuf.Write(b)
	} else if s, ok := body.(string); ok {
		_, err = bodyBuf.WriteString(s)
	} else if s, ok := body.(*string); ok {
		_, err = bodyBuf.WriteString(*s)
	} else if jsonCheck.MatchString(contentType) {
		err = json.NewEncoder(bodyBuf).Encode(body)
	} else if xmlCheck.MatchString(contentType) {
		xml.NewEncoder(bodyBuf).Encode(body)
	}

	if err != nil {
		return nil, err
	}

	if bodyBuf.Len() == 0 {
		err = fmt.Errorf("Invalid body type %s\n", contentType)
		return nil, err
	}
	return bodyBuf, nil
}

// detectContentType method is used to figure out `Request.Body` content type for request header
func detectContentType(body interface{}) string {
	contentType := "text/plain; charset=utf-8"
	kind := reflect.TypeOf(body).Kind()

	switch kind {
	case reflect.Struct, reflect.Map, reflect.Ptr:
		contentType = "application/json; charset=utf-8"
	case reflect.String:
		contentType = "text/plain; charset=utf-8"
	default:
		if b, ok := body.([]byte); ok {
			contentType = http.DetectContentType(b)
		} else if kind == reflect.Slice {
			contentType = "application/json; charset=utf-8"
		}
	}

	return contentType
}

// Ripped from https://github.com/gregjones/httpcache/blob/master/httpcache.go
type cacheControl map[string]string

func parseCacheControl(headers http.Header) cacheControl {
	cc := cacheControl{}
	ccHeader := headers.Get("Cache-Control")
	for _, part := range strings.Split(ccHeader, ",") {
		part = strings.Trim(part, " ")
		if part == "" {
			continue
		}
		if strings.ContainsRune(part, '=') {
			keyval := strings.Split(part, "=")
			cc[strings.Trim(keyval[0], " ")] = strings.Trim(keyval[1], ",")
		} else {
			cc[part] = ""
		}
	}
	return cc
}

// CacheExpires helper function to determine remaining time before repeating a request.
func CacheExpires(r *http.Response) time.Time {
	// Figure out when the cache expires.
	var expires time.Time
	now, err := time.Parse(time.RFC1123, r.Header.Get("date"))
	if err != nil {
		return time.Now()
	}
	respCacheControl := parseCacheControl(r.Header)

	if maxAge, ok := respCacheControl["max-age"]; ok {
		lifetime, err := time.ParseDuration(maxAge + "s")
		if err != nil {
			expires = now
		}
		expires = now.Add(lifetime)
	} else {
		expiresHeader := r.Header.Get("Expires")
		if expiresHeader != "" {
			expires, err = time.Parse(time.RFC1123, expiresHeader)
			if err != nil {
				expires = now
			}
		}
	}
	return expires
}

func strlen(s string) int {
	return utf8.RuneCountInString(s)
}

// GenericSwaggerError Provides access to the body, error and model on returned errors.
type GenericSwaggerError struct {
	body  []byte
	error string
	model interface{}
}

// Error returns non-empty string if there was an error.
func (e GenericSwaggerError) Error() string {
	return e.error
}

// Body returns the raw bytes of the response
func (e GenericSwaggerError) Body() []byte {
	return e.body
}

// Model returns the unpacked model of the error
func (e GenericSwaggerError) Model() interface{} {
	return e.model
}
